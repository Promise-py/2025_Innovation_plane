ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bmi08g.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.null_ptr_check,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	null_ptr_check:
  24              	.LVL0:
  25              	.LFB11:
  26              		.file 1 "BMI088/Src/bmi08g.c"
   1:BMI088/Src/bmi08g.c **** /**\mainpage
   2:BMI088/Src/bmi08g.c ****  * Copyright (C) 2017 - 2018 Bosch Sensortec GmbH
   3:BMI088/Src/bmi08g.c ****  *
   4:BMI088/Src/bmi08g.c ****  * Redistribution and use in source and binary forms, with or without
   5:BMI088/Src/bmi08g.c ****  * modification, are permitted provided that the following conditions are met:
   6:BMI088/Src/bmi08g.c ****  *
   7:BMI088/Src/bmi08g.c ****  * Redistributions of source code must retain the above copyright
   8:BMI088/Src/bmi08g.c ****  * notice, this list of conditions and the following disclaimer.
   9:BMI088/Src/bmi08g.c ****  *
  10:BMI088/Src/bmi08g.c ****  * Redistributions in binary form must reproduce the above copyright
  11:BMI088/Src/bmi08g.c ****  * notice, this list of conditions and the following disclaimer in the
  12:BMI088/Src/bmi08g.c ****  * documentation and/or other materials provided with the distribution.
  13:BMI088/Src/bmi08g.c ****  *
  14:BMI088/Src/bmi08g.c ****  * Neither the name of the copyright holder nor the names of the
  15:BMI088/Src/bmi08g.c ****  * contributors may be used to endorse or promote products derived from
  16:BMI088/Src/bmi08g.c ****  * this software without specific prior written permission.
  17:BMI088/Src/bmi08g.c ****  *
  18:BMI088/Src/bmi08g.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  19:BMI088/Src/bmi08g.c ****  * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
  20:BMI088/Src/bmi08g.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  21:BMI088/Src/bmi08g.c ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  22:BMI088/Src/bmi08g.c ****  * DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDER
  23:BMI088/Src/bmi08g.c ****  * OR CONTRIBUTORS BE LIABLE FOR ANY
  24:BMI088/Src/bmi08g.c ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
  25:BMI088/Src/bmi08g.c ****  * OR CONSEQUENTIAL DAMAGES(INCLUDING, BUT NOT LIMITED TO,
  26:BMI088/Src/bmi08g.c ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  27:BMI088/Src/bmi08g.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:BMI088/Src/bmi08g.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  29:BMI088/Src/bmi08g.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  30:BMI088/Src/bmi08g.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:BMI088/Src/bmi08g.c ****  * ANY WAY OUT OF THE USE OF THIS
  32:BMI088/Src/bmi08g.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 2


  33:BMI088/Src/bmi08g.c ****  *
  34:BMI088/Src/bmi08g.c ****  * The information provided is believed to be accurate and reliable.
  35:BMI088/Src/bmi08g.c ****  * The copyright holder assumes no responsibility
  36:BMI088/Src/bmi08g.c ****  * for the consequences of use
  37:BMI088/Src/bmi08g.c ****  * of such information nor for any infringement of patents or
  38:BMI088/Src/bmi08g.c ****  * other rights of third parties which may result from its use.
  39:BMI088/Src/bmi08g.c ****  * No license is granted by implication or otherwise under any patent or
  40:BMI088/Src/bmi08g.c ****  * patent rights of the copyright holder.
  41:BMI088/Src/bmi08g.c ****  *
  42:BMI088/Src/bmi08g.c ****  * @file        bmi08g.c
  43:BMI088/Src/bmi08g.c ****  * @date        24 Aug 2018
  44:BMI088/Src/bmi08g.c ****  * @version     1.2.0
  45:BMI088/Src/bmi08g.c ****  *
  46:BMI088/Src/bmi08g.c ****  */
  47:BMI088/Src/bmi08g.c **** 
  48:BMI088/Src/bmi08g.c **** /*! \file bmi08g.c
  49:BMI088/Src/bmi08g.c ****  \brief Sensor Driver for BMI08X family of sensors */
  50:BMI088/Src/bmi08g.c **** /****************************************************************************/
  51:BMI088/Src/bmi08g.c **** /**\name        Header files
  52:BMI088/Src/bmi08g.c ****  ****************************************************************************/
  53:BMI088/Src/bmi08g.c **** #include "bmi08x.h"
  54:BMI088/Src/bmi08g.c **** /****************************************************************************/
  55:BMI088/Src/bmi08g.c **** /**\name        Local structures
  56:BMI088/Src/bmi08g.c ****  ****************************************************************************/
  57:BMI088/Src/bmi08g.c **** 
  58:BMI088/Src/bmi08g.c **** /****************************************************************************/
  59:BMI088/Src/bmi08g.c **** /*! Static Function Declarations
  60:BMI088/Src/bmi08g.c ****  ****************************************************************************/
  61:BMI088/Src/bmi08g.c **** /*!
  62:BMI088/Src/bmi08g.c ****  * @brief This API is used to validate the device structure pointer for
  63:BMI088/Src/bmi08g.c ****  * null conditions.
  64:BMI088/Src/bmi08g.c ****  *
  65:BMI088/Src/bmi08g.c ****  * @param[in] dev : Structure instance of bmi08x_dev.
  66:BMI088/Src/bmi08g.c ****  *
  67:BMI088/Src/bmi08g.c ****  * @return Result of API execution status
  68:BMI088/Src/bmi08g.c ****  * @retval zero -> Success / -ve value -> Error
  69:BMI088/Src/bmi08g.c ****  */
  70:BMI088/Src/bmi08g.c **** static int8_t null_ptr_check(const struct bmi08x_dev *dev);
  71:BMI088/Src/bmi08g.c **** 
  72:BMI088/Src/bmi08g.c **** /*!
  73:BMI088/Src/bmi08g.c ****  *  @brief This API reads the data from the given register address of gyro sensor.
  74:BMI088/Src/bmi08g.c ****  *
  75:BMI088/Src/bmi08g.c ****  *  @param[in] reg_addr  : Register address from where the data to be read
  76:BMI088/Src/bmi08g.c ****  *  @param[out]reg_data  : Pointer to data buffer to store the read data.
  77:BMI088/Src/bmi08g.c ****  *  @param[in] len       : No. of bytes of data to be read.
  78:BMI088/Src/bmi08g.c ****  *  @param[in] dev       : Structure instance of bmi08x_dev.
  79:BMI088/Src/bmi08g.c ****  *
  80:BMI088/Src/bmi08g.c ****  *  @return Result of API execution status
  81:BMI088/Src/bmi08g.c ****  *  @retval zero -> Success / -ve value -> Error
  82:BMI088/Src/bmi08g.c ****  */
  83:BMI088/Src/bmi08g.c **** static int8_t get_regs(uint8_t reg_addr, uint8_t *data, uint16_t len, const struct bmi08x_dev *dev)
  84:BMI088/Src/bmi08g.c **** 
  85:BMI088/Src/bmi08g.c **** /*!
  86:BMI088/Src/bmi08g.c ****  *  @brief This API writes the given data to the register address
  87:BMI088/Src/bmi08g.c ****  *  of gyro sensor.
  88:BMI088/Src/bmi08g.c ****  *
  89:BMI088/Src/bmi08g.c ****  *  @param[in] reg_addr  : Register address to where the data to be written.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 3


  90:BMI088/Src/bmi08g.c ****  *  @param[in] reg_data  : Pointer to data buffer which is to be written
  91:BMI088/Src/bmi08g.c ****  *  in the sensor.
  92:BMI088/Src/bmi08g.c ****  *  @param[in] len       : No. of bytes of data to write.
  93:BMI088/Src/bmi08g.c ****  *  @param[in] dev       : Structure instance of bmi08x_dev.
  94:BMI088/Src/bmi08g.c ****  *
  95:BMI088/Src/bmi08g.c ****  *  @return Result of API execution status
  96:BMI088/Src/bmi08g.c ****  *  @retval zero -> Success / -ve value -> Error
  97:BMI088/Src/bmi08g.c ****  */
  98:BMI088/Src/bmi08g.c **** static int8_t set_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bmi08x_dev *
  99:BMI088/Src/bmi08g.c **** 
 100:BMI088/Src/bmi08g.c **** /*!
 101:BMI088/Src/bmi08g.c ****  * @brief This API sets the data ready interrupt for gyro sensor.
 102:BMI088/Src/bmi08g.c ****  *
 103:BMI088/Src/bmi08g.c ****  * @param[in] int_config  : Structure instance of bmi08x_gyro_int_channel_cfg.
 104:BMI088/Src/bmi08g.c ****  * @param[in] dev         : Structure instance of bmi08x_dev.
 105:BMI088/Src/bmi08g.c ****  *
 106:BMI088/Src/bmi08g.c ****  * @return Result of API execution status
 107:BMI088/Src/bmi08g.c ****  * @retval zero -> Success / -ve value -> Error
 108:BMI088/Src/bmi08g.c ****  */
 109:BMI088/Src/bmi08g.c **** static int8_t set_gyro_data_ready_int(const struct bmi08x_gyro_int_channel_cfg *int_config,
 110:BMI088/Src/bmi08g.c **** 	const struct bmi08x_dev *dev);
 111:BMI088/Src/bmi08g.c **** 
 112:BMI088/Src/bmi08g.c **** /*!
 113:BMI088/Src/bmi08g.c ****  * @brief This API configures the pins which fire the
 114:BMI088/Src/bmi08g.c ****  * interrupt signal when any interrupt occurs.
 115:BMI088/Src/bmi08g.c ****  *
 116:BMI088/Src/bmi08g.c ****  * @param[in] int_config  : Structure instance of bmi08x_gyro_int_channel_cfg.
 117:BMI088/Src/bmi08g.c ****  * @param[in] dev         : Structure instance of bmi08x_dev.
 118:BMI088/Src/bmi08g.c ****  *
 119:BMI088/Src/bmi08g.c ****  * @return Result of API execution status
 120:BMI088/Src/bmi08g.c ****  * @retval zero -> Success / -ve value -> Error
 121:BMI088/Src/bmi08g.c ****  */
 122:BMI088/Src/bmi08g.c **** static int8_t set_int_pin_config(const struct bmi08x_gyro_int_channel_cfg *int_config, const struct
 123:BMI088/Src/bmi08g.c **** 
 124:BMI088/Src/bmi08g.c **** /*!
 125:BMI088/Src/bmi08g.c ****  *  @brief This API enables or disables the Gyro Self test feature in the
 126:BMI088/Src/bmi08g.c ****  *  sensor.
 127:BMI088/Src/bmi08g.c ****  *
 128:BMI088/Src/bmi08g.c ****  *  @param[in] selftest : Variable used to enable or disable
 129:BMI088/Src/bmi08g.c ****  *  the Gyro self test feature
 130:BMI088/Src/bmi08g.c ****  *  Value   |  Description
 131:BMI088/Src/bmi08g.c ****  *  --------|---------------
 132:BMI088/Src/bmi08g.c ****  *  0x00    | BMI08X_DISABLE
 133:BMI088/Src/bmi08g.c ****  *  0x01    | BMI08X_ENABLE
 134:BMI088/Src/bmi08g.c ****  *
 135:BMI088/Src/bmi08g.c ****  *  @param[in] dev : Structure instance of bmi08x_dev
 136:BMI088/Src/bmi08g.c ****  *
 137:BMI088/Src/bmi08g.c ****  *  @return Result of API execution status
 138:BMI088/Src/bmi08g.c ****  *  @retval zero -> Success  / -ve value -> Error
 139:BMI088/Src/bmi08g.c ****  *
 140:BMI088/Src/bmi08g.c ****  */
 141:BMI088/Src/bmi08g.c **** static int8_t set_gyro_selftest(uint8_t selftest, const struct bmi08x_dev *dev);
 142:BMI088/Src/bmi08g.c **** 
 143:BMI088/Src/bmi08g.c **** /****************************************************************************/
 144:BMI088/Src/bmi08g.c **** /**\name        Extern Declarations
 145:BMI088/Src/bmi08g.c ****  ****************************************************************************/
 146:BMI088/Src/bmi08g.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 4


 147:BMI088/Src/bmi08g.c **** /****************************************************************************/
 148:BMI088/Src/bmi08g.c **** /**\name        Globals
 149:BMI088/Src/bmi08g.c ****  ****************************************************************************/
 150:BMI088/Src/bmi08g.c **** 
 151:BMI088/Src/bmi08g.c **** /****************************************************************************/
 152:BMI088/Src/bmi08g.c **** /**\name        Function definitions
 153:BMI088/Src/bmi08g.c ****  ****************************************************************************/
 154:BMI088/Src/bmi08g.c **** /*!
 155:BMI088/Src/bmi08g.c ****  *  @brief This API is the entry point for gyro sensor.
 156:BMI088/Src/bmi08g.c ****  *  It performs the selection of I2C/SPI read mechanism according to the
 157:BMI088/Src/bmi08g.c ****  *  selected interface and reads the chip-id of gyro sensor.
 158:BMI088/Src/bmi08g.c ****  */
 159:BMI088/Src/bmi08g.c **** int8_t bmi08g_init(struct bmi08x_dev *dev)
 160:BMI088/Src/bmi08g.c **** {
 161:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 162:BMI088/Src/bmi08g.c **** 	uint8_t chip_id = 0;
 163:BMI088/Src/bmi08g.c **** 
 164:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure */
 165:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 166:BMI088/Src/bmi08g.c **** 
 167:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 168:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 169:BMI088/Src/bmi08g.c **** 		/* Read gyro chip id */
 170:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_CHIP_ID_REG, &chip_id, 1, dev);
 171:BMI088/Src/bmi08g.c **** 
 172:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 173:BMI088/Src/bmi08g.c **** 			if (chip_id == BMI08X_GYRO_CHIP_ID) {
 174:BMI088/Src/bmi08g.c **** 				/* Store the chip ID in dev structure */
 175:BMI088/Src/bmi08g.c **** 				dev->gyro_chip_id = chip_id;
 176:BMI088/Src/bmi08g.c **** 			} else {
 177:BMI088/Src/bmi08g.c **** 				rslt = BMI08X_E_DEV_NOT_FOUND;
 178:BMI088/Src/bmi08g.c **** 			}
 179:BMI088/Src/bmi08g.c **** 		}
 180:BMI088/Src/bmi08g.c **** 	}
 181:BMI088/Src/bmi08g.c **** 
 182:BMI088/Src/bmi08g.c **** 	return rslt;
 183:BMI088/Src/bmi08g.c **** }
 184:BMI088/Src/bmi08g.c **** 
 185:BMI088/Src/bmi08g.c **** /*!
 186:BMI088/Src/bmi08g.c ****  * @brief This API reads the data from the given register address
 187:BMI088/Src/bmi08g.c ****  * of gyro sensor.
 188:BMI088/Src/bmi08g.c ****  */
 189:BMI088/Src/bmi08g.c **** int8_t bmi08g_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bmi08x_dev *
 190:BMI088/Src/bmi08g.c **** {
 191:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 192:BMI088/Src/bmi08g.c **** 
 193:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 194:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 195:BMI088/Src/bmi08g.c **** 
 196:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 197:BMI088/Src/bmi08g.c **** 	if ((rslt == BMI08X_OK) && (reg_data != NULL)) {
 198:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 199:BMI088/Src/bmi08g.c **** 			/* Reading from the register */
 200:BMI088/Src/bmi08g.c **** 			rslt = get_regs(reg_addr, reg_data, len, dev);
 201:BMI088/Src/bmi08g.c **** 		} else {
 202:BMI088/Src/bmi08g.c **** 			rslt = BMI08X_E_RD_WR_LENGTH_INVALID;
 203:BMI088/Src/bmi08g.c **** 		}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 5


 204:BMI088/Src/bmi08g.c **** 	} else {
 205:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_NULL_PTR;
 206:BMI088/Src/bmi08g.c **** 	}
 207:BMI088/Src/bmi08g.c **** 
 208:BMI088/Src/bmi08g.c **** 	return rslt;
 209:BMI088/Src/bmi08g.c **** }
 210:BMI088/Src/bmi08g.c **** 
 211:BMI088/Src/bmi08g.c **** /*!
 212:BMI088/Src/bmi08g.c ****  * @brief This API writes the given data to the register address
 213:BMI088/Src/bmi08g.c ****  * of gyro sensor.
 214:BMI088/Src/bmi08g.c ****  */
 215:BMI088/Src/bmi08g.c **** int8_t bmi08g_set_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bmi08x_dev *
 216:BMI088/Src/bmi08g.c **** {
 217:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 218:BMI088/Src/bmi08g.c **** 
 219:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 220:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 221:BMI088/Src/bmi08g.c **** 
 222:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 223:BMI088/Src/bmi08g.c **** 	if ((rslt == BMI08X_OK) && (reg_data != NULL)) {
 224:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 225:BMI088/Src/bmi08g.c **** 			/* Writing to the register */
 226:BMI088/Src/bmi08g.c **** 			rslt = set_regs(reg_addr, reg_data, len, dev);
 227:BMI088/Src/bmi08g.c **** 		} else {
 228:BMI088/Src/bmi08g.c **** 			rslt = BMI08X_E_RD_WR_LENGTH_INVALID;
 229:BMI088/Src/bmi08g.c **** 		}
 230:BMI088/Src/bmi08g.c **** 	} else {
 231:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_NULL_PTR;
 232:BMI088/Src/bmi08g.c **** 	}
 233:BMI088/Src/bmi08g.c **** 
 234:BMI088/Src/bmi08g.c **** 	return rslt;
 235:BMI088/Src/bmi08g.c **** }
 236:BMI088/Src/bmi08g.c **** 
 237:BMI088/Src/bmi08g.c **** /*!
 238:BMI088/Src/bmi08g.c ****  * @brief This API resets the gyro sensor.
 239:BMI088/Src/bmi08g.c ****  */
 240:BMI088/Src/bmi08g.c **** int8_t bmi08g_soft_reset(const struct bmi08x_dev *dev)
 241:BMI088/Src/bmi08g.c **** {
 242:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 243:BMI088/Src/bmi08g.c **** 	uint8_t data;
 244:BMI088/Src/bmi08g.c **** 
 245:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 246:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 247:BMI088/Src/bmi08g.c **** 
 248:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 249:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 250:BMI088/Src/bmi08g.c **** 		/* Reset gyro device */
 251:BMI088/Src/bmi08g.c **** 		data = BMI08X_SOFT_RESET_CMD;
 252:BMI088/Src/bmi08g.c **** 		rslt = set_regs(BMI08X_GYRO_SOFTRESET_REG, &data, 1, dev);
 253:BMI088/Src/bmi08g.c **** 
 254:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 255:BMI088/Src/bmi08g.c **** 			/* delay 30 ms after writing reset value to its register */
 256:BMI088/Src/bmi08g.c **** 			dev->delay_ms(BMI08X_GYRO_SOFTRESET_DELAY);
 257:BMI088/Src/bmi08g.c **** 		}
 258:BMI088/Src/bmi08g.c **** 	}
 259:BMI088/Src/bmi08g.c **** 
 260:BMI088/Src/bmi08g.c **** 	return rslt;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 6


 261:BMI088/Src/bmi08g.c **** }
 262:BMI088/Src/bmi08g.c **** 
 263:BMI088/Src/bmi08g.c **** /*!
 264:BMI088/Src/bmi08g.c ****  * @brief This API reads the gyro odr and range from the sensor, store it in the bmi08x_dev
 265:BMI088/Src/bmi08g.c ****  * structure instance passed by the user.
 266:BMI088/Src/bmi08g.c ****  */
 267:BMI088/Src/bmi08g.c **** int8_t bmi08g_get_meas_conf(struct bmi08x_dev *dev)
 268:BMI088/Src/bmi08g.c **** {
 269:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 270:BMI088/Src/bmi08g.c **** 	uint8_t data[2];
 271:BMI088/Src/bmi08g.c **** 
 272:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 273:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 274:BMI088/Src/bmi08g.c **** 
 275:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 276:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 277:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_RANGE_REG, data, 2, dev);
 278:BMI088/Src/bmi08g.c **** 
 279:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 280:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.range = data[0];
 281:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.odr = (data[1] & BMI08X_GYRO_BW_MASK);
 282:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.bw = dev->gyro_cfg.odr;
 283:BMI088/Src/bmi08g.c **** 		}
 284:BMI088/Src/bmi08g.c **** 	}
 285:BMI088/Src/bmi08g.c **** 
 286:BMI088/Src/bmi08g.c **** 	return rslt;
 287:BMI088/Src/bmi08g.c **** }
 288:BMI088/Src/bmi08g.c **** 
 289:BMI088/Src/bmi08g.c **** /*!
 290:BMI088/Src/bmi08g.c ****  * @brief This API sets the output data rate, range and bandwidth
 291:BMI088/Src/bmi08g.c ****  * of gyro sensor.
 292:BMI088/Src/bmi08g.c ****  */
 293:BMI088/Src/bmi08g.c **** int8_t bmi08g_set_meas_conf(const struct bmi08x_dev *dev)
 294:BMI088/Src/bmi08g.c **** {
 295:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 296:BMI088/Src/bmi08g.c **** 	uint8_t data;
 297:BMI088/Src/bmi08g.c **** 	uint8_t odr, range;
 298:BMI088/Src/bmi08g.c **** 	uint8_t is_range_invalid = FALSE, is_odr_invalid = FALSE;
 299:BMI088/Src/bmi08g.c **** 
 300:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 301:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 302:BMI088/Src/bmi08g.c **** 
 303:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 304:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 305:BMI088/Src/bmi08g.c **** 		odr = dev->gyro_cfg.odr;
 306:BMI088/Src/bmi08g.c **** 		range = dev->gyro_cfg.range;
 307:BMI088/Src/bmi08g.c **** 
 308:BMI088/Src/bmi08g.c **** 		if (odr > BMI08X_GYRO_BW_32_ODR_100_HZ) {
 309:BMI088/Src/bmi08g.c **** 			/* Updating the status */
 310:BMI088/Src/bmi08g.c **** 			is_odr_invalid = TRUE;
 311:BMI088/Src/bmi08g.c **** 		}
 312:BMI088/Src/bmi08g.c **** 
 313:BMI088/Src/bmi08g.c **** 		if (range > BMI08X_GYRO_RANGE_125_DPS) {
 314:BMI088/Src/bmi08g.c **** 			/* Updating the status */
 315:BMI088/Src/bmi08g.c **** 			is_range_invalid = TRUE;
 316:BMI088/Src/bmi08g.c **** 		}
 317:BMI088/Src/bmi08g.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 7


 318:BMI088/Src/bmi08g.c **** 		/* If ODR and Range is valid, write it to gyro config. registers */
 319:BMI088/Src/bmi08g.c **** 		if ((!is_odr_invalid) && (!is_range_invalid)) {
 320:BMI088/Src/bmi08g.c **** 			/* Read range value from the range register */
 321:BMI088/Src/bmi08g.c **** 			rslt = get_regs(BMI08X_GYRO_BANDWIDTH_REG, &data, 1, dev);
 322:BMI088/Src/bmi08g.c **** 
 323:BMI088/Src/bmi08g.c **** 			if (rslt == BMI08X_OK) {
 324:BMI088/Src/bmi08g.c **** 				data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_BW, odr);
 325:BMI088/Src/bmi08g.c **** 				/* Write odr value to odr register */
 326:BMI088/Src/bmi08g.c **** 				rslt = set_regs(BMI08X_GYRO_BANDWIDTH_REG, &data, 1, dev);
 327:BMI088/Src/bmi08g.c **** 
 328:BMI088/Src/bmi08g.c **** 				if (rslt == BMI08X_OK) {
 329:BMI088/Src/bmi08g.c **** 					/* Read range value from the range register */
 330:BMI088/Src/bmi08g.c **** 					rslt = get_regs(BMI08X_GYRO_RANGE_REG, &data, 1, dev);
 331:BMI088/Src/bmi08g.c **** 
 332:BMI088/Src/bmi08g.c **** 					if (rslt == BMI08X_OK) {
 333:BMI088/Src/bmi08g.c **** 						data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_RANGE, range);
 334:BMI088/Src/bmi08g.c **** 						/* Write range value to range register */
 335:BMI088/Src/bmi08g.c **** 						rslt = set_regs(BMI08X_GYRO_RANGE_REG, &data, 1, dev);
 336:BMI088/Src/bmi08g.c **** 					}
 337:BMI088/Src/bmi08g.c **** 				}
 338:BMI088/Src/bmi08g.c **** 			}
 339:BMI088/Src/bmi08g.c **** 
 340:BMI088/Src/bmi08g.c **** 		} else {
 341:BMI088/Src/bmi08g.c **** 			/* Invalid configuration present in ODR, Range */
 342:BMI088/Src/bmi08g.c **** 			rslt = BMI08X_E_INVALID_CONFIG;
 343:BMI088/Src/bmi08g.c **** 		}
 344:BMI088/Src/bmi08g.c **** 	}
 345:BMI088/Src/bmi08g.c **** 
 346:BMI088/Src/bmi08g.c **** 	return rslt;
 347:BMI088/Src/bmi08g.c **** }
 348:BMI088/Src/bmi08g.c **** 
 349:BMI088/Src/bmi08g.c **** /*!
 350:BMI088/Src/bmi08g.c ****  * @brief This API reads the gyro power mode from the sensor,
 351:BMI088/Src/bmi08g.c ****  * store it in the bmi08x_dev structure instance
 352:BMI088/Src/bmi08g.c ****  * passed by the user.
 353:BMI088/Src/bmi08g.c ****  *
 354:BMI088/Src/bmi08g.c ****  */
 355:BMI088/Src/bmi08g.c **** int8_t bmi08g_get_power_mode(struct bmi08x_dev *dev)
 356:BMI088/Src/bmi08g.c **** {
 357:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 358:BMI088/Src/bmi08g.c **** 	uint8_t data;
 359:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 360:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 361:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 362:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 363:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_LPM1_REG, &data, 1, dev);
 364:BMI088/Src/bmi08g.c **** 
 365:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 366:BMI088/Src/bmi08g.c **** 			/* Updating the power mode in the dev structure */
 367:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.power = data;
 368:BMI088/Src/bmi08g.c **** 		}
 369:BMI088/Src/bmi08g.c **** 	}
 370:BMI088/Src/bmi08g.c **** 
 371:BMI088/Src/bmi08g.c **** 	return rslt;
 372:BMI088/Src/bmi08g.c **** }
 373:BMI088/Src/bmi08g.c **** 
 374:BMI088/Src/bmi08g.c **** /*!
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 8


 375:BMI088/Src/bmi08g.c ****  * @brief This API sets the power mode of the gyro sensor.
 376:BMI088/Src/bmi08g.c ****  */
 377:BMI088/Src/bmi08g.c **** int8_t bmi08g_set_power_mode(const struct bmi08x_dev *dev)
 378:BMI088/Src/bmi08g.c **** {
 379:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 380:BMI088/Src/bmi08g.c **** 	uint8_t power_mode, data;
 381:BMI088/Src/bmi08g.c **** 	uint8_t is_power_switching_mode_valid = TRUE;
 382:BMI088/Src/bmi08g.c **** 
 383:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 384:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 385:BMI088/Src/bmi08g.c **** 
 386:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 387:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 388:BMI088/Src/bmi08g.c **** 		/*read the previous power state*/
 389:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_LPM1_REG, &data, 1, dev);
 390:BMI088/Src/bmi08g.c **** 
 391:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 392:BMI088/Src/bmi08g.c **** 			power_mode = dev->gyro_cfg.power;
 393:BMI088/Src/bmi08g.c **** 			/*switching between normal mode and the suspend modes is allowed, it is not possible to switch
 394:BMI088/Src/bmi08g.c **** 			 * between suspend and deep suspend and vice versa. Check for invalid power switching (i.e)
 395:BMI088/Src/bmi08g.c **** 			 * deep suspend to suspend */
 396:BMI088/Src/bmi08g.c **** 			if ((power_mode == BMI08X_GYRO_PM_SUSPEND) && (data == BMI08X_GYRO_PM_DEEP_SUSPEND)) {
 397:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 398:BMI088/Src/bmi08g.c **** 				is_power_switching_mode_valid = FALSE;
 399:BMI088/Src/bmi08g.c **** 			}
 400:BMI088/Src/bmi08g.c **** 			/* Check for invalid power switching (i.e) from suspend to deep suspend */
 401:BMI088/Src/bmi08g.c **** 			if ((power_mode == BMI08X_GYRO_PM_DEEP_SUSPEND) && (data == BMI08X_GYRO_PM_SUSPEND)) {
 402:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 403:BMI088/Src/bmi08g.c **** 				is_power_switching_mode_valid = FALSE;
 404:BMI088/Src/bmi08g.c **** 			}
 405:BMI088/Src/bmi08g.c **** 			/* Check if power switching mode is valid*/
 406:BMI088/Src/bmi08g.c **** 			if (is_power_switching_mode_valid) {
 407:BMI088/Src/bmi08g.c **** 				/* Write power to power register */
 408:BMI088/Src/bmi08g.c **** 				rslt = set_regs(BMI08X_GYRO_LPM1_REG, &power_mode, 1, dev);
 409:BMI088/Src/bmi08g.c **** 
 410:BMI088/Src/bmi08g.c **** 				if (rslt == BMI08X_OK) {
 411:BMI088/Src/bmi08g.c **** 					/* Time required to switch the power mode */
 412:BMI088/Src/bmi08g.c **** 					dev->delay_ms(BMI08X_GYRO_POWER_MODE_CONFIG_DELAY);
 413:BMI088/Src/bmi08g.c **** 				}
 414:BMI088/Src/bmi08g.c **** 
 415:BMI088/Src/bmi08g.c **** 			} else {
 416:BMI088/Src/bmi08g.c **** 				/* Updating the error */
 417:BMI088/Src/bmi08g.c **** 				rslt = BMI08X_E_INVALID_INPUT;
 418:BMI088/Src/bmi08g.c **** 			}
 419:BMI088/Src/bmi08g.c **** 		}
 420:BMI088/Src/bmi08g.c **** 	}
 421:BMI088/Src/bmi08g.c **** 
 422:BMI088/Src/bmi08g.c **** 	return rslt;
 423:BMI088/Src/bmi08g.c **** }
 424:BMI088/Src/bmi08g.c **** 
 425:BMI088/Src/bmi08g.c **** /*!
 426:BMI088/Src/bmi08g.c ****  * @brief This API reads the gyro data from the sensor,
 427:BMI088/Src/bmi08g.c ****  * store it in the bmi08x_sensor_data structure instance
 428:BMI088/Src/bmi08g.c ****  * passed by the user.
 429:BMI088/Src/bmi08g.c ****  */
 430:BMI088/Src/bmi08g.c **** int8_t bmi08g_get_data(struct bmi08x_sensor_data *gyro, const struct bmi08x_dev *dev)
 431:BMI088/Src/bmi08g.c **** {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 9


 432:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 433:BMI088/Src/bmi08g.c **** 	uint8_t data[6];
 434:BMI088/Src/bmi08g.c **** 	uint8_t lsb, msb;
 435:BMI088/Src/bmi08g.c **** 	uint16_t msblsb;
 436:BMI088/Src/bmi08g.c **** 
 437:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 438:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 439:BMI088/Src/bmi08g.c **** 
 440:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 441:BMI088/Src/bmi08g.c **** 	if ((rslt == BMI08X_OK) && (gyro != NULL)) {
 442:BMI088/Src/bmi08g.c **** 		/* read gyro sensor data */
 443:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_X_LSB_REG, data, 6, dev);
 444:BMI088/Src/bmi08g.c **** 
 445:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 446:BMI088/Src/bmi08g.c **** 			lsb = data[0];
 447:BMI088/Src/bmi08g.c **** 			msb = data[1];
 448:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 449:BMI088/Src/bmi08g.c **** 			gyro->x = (int16_t)msblsb; /* Data in X axis */
 450:BMI088/Src/bmi08g.c **** 
 451:BMI088/Src/bmi08g.c **** 			lsb = data[2];
 452:BMI088/Src/bmi08g.c **** 			msb = data[3];
 453:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 454:BMI088/Src/bmi08g.c **** 			gyro->y = (int16_t)msblsb; /* Data in Y axis */
 455:BMI088/Src/bmi08g.c **** 
 456:BMI088/Src/bmi08g.c **** 			lsb = data[4];
 457:BMI088/Src/bmi08g.c **** 			msb = data[5];
 458:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 459:BMI088/Src/bmi08g.c **** 			gyro->z = (int16_t)msblsb; /* Data in Z axis */
 460:BMI088/Src/bmi08g.c **** 		}
 461:BMI088/Src/bmi08g.c **** 
 462:BMI088/Src/bmi08g.c **** 	} else {
 463:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_NULL_PTR;
 464:BMI088/Src/bmi08g.c **** 	}
 465:BMI088/Src/bmi08g.c **** 
 466:BMI088/Src/bmi08g.c **** 	return rslt;
 467:BMI088/Src/bmi08g.c **** }
 468:BMI088/Src/bmi08g.c **** 
 469:BMI088/Src/bmi08g.c **** /*!
 470:BMI088/Src/bmi08g.c ****  * @brief This API configures the necessary gyro interrupt
 471:BMI088/Src/bmi08g.c ****  * based on the user settings in the bmi08x_int_cfg
 472:BMI088/Src/bmi08g.c ****  * structure instance.
 473:BMI088/Src/bmi08g.c ****  */
 474:BMI088/Src/bmi08g.c **** int8_t bmi08g_set_int_config(const struct bmi08x_gyro_int_channel_cfg *int_config, const struct bmi
 475:BMI088/Src/bmi08g.c **** {
 476:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 477:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 478:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 479:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 480:BMI088/Src/bmi08g.c **** 	if ((rslt == BMI08X_OK) && (int_config != NULL)) {
 481:BMI088/Src/bmi08g.c **** 
 482:BMI088/Src/bmi08g.c **** 		switch (int_config->int_type) {
 483:BMI088/Src/bmi08g.c **** 		case BMI08X_GYRO_DATA_RDY_INT: {
 484:BMI088/Src/bmi08g.c **** 			/* Data ready interrupt */
 485:BMI088/Src/bmi08g.c **** 			rslt = set_gyro_data_ready_int(int_config, dev);
 486:BMI088/Src/bmi08g.c **** 		}
 487:BMI088/Src/bmi08g.c **** 			break;
 488:BMI088/Src/bmi08g.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 10


 489:BMI088/Src/bmi08g.c **** 		default:
 490:BMI088/Src/bmi08g.c **** 			rslt = BMI08X_E_INVALID_CONFIG;
 491:BMI088/Src/bmi08g.c **** 			break;
 492:BMI088/Src/bmi08g.c **** 		}
 493:BMI088/Src/bmi08g.c **** 
 494:BMI088/Src/bmi08g.c **** 	} else {
 495:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_NULL_PTR;
 496:BMI088/Src/bmi08g.c **** 	}
 497:BMI088/Src/bmi08g.c **** 
 498:BMI088/Src/bmi08g.c **** 	return rslt;
 499:BMI088/Src/bmi08g.c **** }
 500:BMI088/Src/bmi08g.c **** /*!
 501:BMI088/Src/bmi08g.c ****  *  @brief This API checks whether the self test functionality of the
 502:BMI088/Src/bmi08g.c ****  *  gyro sensor is working or not.
 503:BMI088/Src/bmi08g.c ****  */
 504:BMI088/Src/bmi08g.c **** int8_t bmi08g_perform_selftest(const struct bmi08x_dev *dev)
 505:BMI088/Src/bmi08g.c **** {
 506:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 507:BMI088/Src/bmi08g.c **** 	uint8_t data = 0, loop_break = 1;
 508:BMI088/Src/bmi08g.c **** 
 509:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 510:BMI088/Src/bmi08g.c **** 	rslt = null_ptr_check(dev);
 511:BMI088/Src/bmi08g.c **** 
 512:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 513:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 514:BMI088/Src/bmi08g.c **** 		/* Enable the gyro self-test */
 515:BMI088/Src/bmi08g.c **** 		rslt = set_gyro_selftest(BMI08X_ENABLE, dev);
 516:BMI088/Src/bmi08g.c **** 
 517:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 518:BMI088/Src/bmi08g.c **** 			/* Loop till self-test ready bit is set */
 519:BMI088/Src/bmi08g.c **** 			while (loop_break) {
 520:BMI088/Src/bmi08g.c **** 				/* Read self-test register to check if self-test ready bit is set */
 521:BMI088/Src/bmi08g.c **** 				rslt = get_regs(BMI08X_GYRO_SELF_TEST_REG, &data, 1, dev);
 522:BMI088/Src/bmi08g.c **** 
 523:BMI088/Src/bmi08g.c **** 				if (rslt == BMI08X_OK) {
 524:BMI088/Src/bmi08g.c **** 					data = BMI08X_GET_BITS(data, BMI08X_GYRO_SELF_TEST_RDY);
 525:BMI088/Src/bmi08g.c **** 
 526:BMI088/Src/bmi08g.c **** 					if (data) {
 527:BMI088/Src/bmi08g.c **** 						/* If self-test ready bit is set, exit the loop */
 528:BMI088/Src/bmi08g.c **** 						loop_break = 0;
 529:BMI088/Src/bmi08g.c **** 					}
 530:BMI088/Src/bmi08g.c **** 
 531:BMI088/Src/bmi08g.c **** 				} else {
 532:BMI088/Src/bmi08g.c **** 					/* Exit the loop in case of communication failure */
 533:BMI088/Src/bmi08g.c **** 					loop_break = 0;
 534:BMI088/Src/bmi08g.c **** 				}
 535:BMI088/Src/bmi08g.c **** 			}
 536:BMI088/Src/bmi08g.c **** 
 537:BMI088/Src/bmi08g.c **** 			if (rslt == BMI08X_OK) {
 538:BMI088/Src/bmi08g.c **** 				/* Read self-test register to check for self-test Ok bit */
 539:BMI088/Src/bmi08g.c **** 				rslt = get_regs(BMI08X_GYRO_SELF_TEST_REG, &data, 1, dev);
 540:BMI088/Src/bmi08g.c **** 
 541:BMI088/Src/bmi08g.c **** 				if (rslt == BMI08X_OK) {
 542:BMI088/Src/bmi08g.c **** 					data = BMI08X_GET_BITS(data, BMI08X_GYRO_SELF_TEST_RESULT);
 543:BMI088/Src/bmi08g.c **** 
 544:BMI088/Src/bmi08g.c **** 					rslt = bmi08g_soft_reset(dev);
 545:BMI088/Src/bmi08g.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 11


 546:BMI088/Src/bmi08g.c **** 					if (rslt == BMI08X_OK) {
 547:BMI088/Src/bmi08g.c **** 						/* Updating the self test result */
 548:BMI088/Src/bmi08g.c **** 						rslt = (int8_t) data;
 549:BMI088/Src/bmi08g.c **** 					}
 550:BMI088/Src/bmi08g.c **** 				}
 551:BMI088/Src/bmi08g.c **** 			}
 552:BMI088/Src/bmi08g.c **** 		}
 553:BMI088/Src/bmi08g.c **** 	}
 554:BMI088/Src/bmi08g.c **** 
 555:BMI088/Src/bmi08g.c **** 	return rslt;
 556:BMI088/Src/bmi08g.c **** }
 557:BMI088/Src/bmi08g.c **** 
 558:BMI088/Src/bmi08g.c **** /*****************************************************************************/
 559:BMI088/Src/bmi08g.c **** /* Static function definition */
 560:BMI088/Src/bmi08g.c **** /*!
 561:BMI088/Src/bmi08g.c ****  * @brief This API is used to validate the device structure pointer for
 562:BMI088/Src/bmi08g.c ****  * null conditions.
 563:BMI088/Src/bmi08g.c ****  */
 564:BMI088/Src/bmi08g.c **** static int8_t null_ptr_check(const struct bmi08x_dev *dev)
 565:BMI088/Src/bmi08g.c **** {
  27              		.loc 1 565 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 566:BMI088/Src/bmi08g.c **** 	int8_t rslt;
  32              		.loc 1 566 2 view .LVU1
 567:BMI088/Src/bmi08g.c **** 
 568:BMI088/Src/bmi08g.c **** 	if ((dev == NULL) || (dev->read == NULL) || (dev->write == NULL) || (dev->delay_ms == NULL)) {
  33              		.loc 1 568 2 view .LVU2
  34              		.loc 1 568 5 is_stmt 0 view .LVU3
  35 0000 50B1     		cbz	r0, .L3
  36              		.loc 1 568 27 discriminator 1 view .LVU4
  37 0002 8269     		ldr	r2, [r0, #24]
  38              		.loc 1 568 20 discriminator 1 view .LVU5
  39 0004 5AB1     		cbz	r2, .L4
  40              		.loc 1 568 50 discriminator 2 view .LVU6
  41 0006 C269     		ldr	r2, [r0, #28]
  42              		.loc 1 568 43 discriminator 2 view .LVU7
  43 0008 62B1     		cbz	r2, .L5
  44              		.loc 1 568 74 discriminator 3 view .LVU8
  45 000a 036A     		ldr	r3, [r0, #32]
  46              		.loc 1 568 67 discriminator 3 view .LVU9
  47 000c 0BB1     		cbz	r3, .L7
 569:BMI088/Src/bmi08g.c **** 		/* Device structure pointer is not valid */
 570:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_NULL_PTR;
 571:BMI088/Src/bmi08g.c **** 	} else {
 572:BMI088/Src/bmi08g.c **** 		/* Device structure is fine */
 573:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_OK;
  48              		.loc 1 573 8 view .LVU10
  49 000e 0020     		movs	r0, #0
  50              	.LVL1:
 574:BMI088/Src/bmi08g.c **** 	}
 575:BMI088/Src/bmi08g.c **** 
 576:BMI088/Src/bmi08g.c **** 	return rslt;
  51              		.loc 1 576 2 is_stmt 1 view .LVU11
 577:BMI088/Src/bmi08g.c **** }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 12


  52              		.loc 1 577 1 is_stmt 0 view .LVU12
  53 0010 7047     		bx	lr
  54              	.LVL2:
  55              	.L7:
 570:BMI088/Src/bmi08g.c **** 	} else {
  56              		.loc 1 570 8 view .LVU13
  57 0012 4FF0FF30 		mov	r0, #-1
  58              	.LVL3:
 570:BMI088/Src/bmi08g.c **** 	} else {
  59              		.loc 1 570 8 view .LVU14
  60 0016 7047     		bx	lr
  61              	.LVL4:
  62              	.L3:
 570:BMI088/Src/bmi08g.c **** 	} else {
  63              		.loc 1 570 8 view .LVU15
  64 0018 4FF0FF30 		mov	r0, #-1
  65              	.LVL5:
 570:BMI088/Src/bmi08g.c **** 	} else {
  66              		.loc 1 570 8 view .LVU16
  67 001c 7047     		bx	lr
  68              	.LVL6:
  69              	.L4:
 570:BMI088/Src/bmi08g.c **** 	} else {
  70              		.loc 1 570 8 view .LVU17
  71 001e 4FF0FF30 		mov	r0, #-1
  72              	.LVL7:
 570:BMI088/Src/bmi08g.c **** 	} else {
  73              		.loc 1 570 8 view .LVU18
  74 0022 7047     		bx	lr
  75              	.LVL8:
  76              	.L5:
 570:BMI088/Src/bmi08g.c **** 	} else {
  77              		.loc 1 570 8 view .LVU19
  78 0024 4FF0FF30 		mov	r0, #-1
  79              	.LVL9:
 570:BMI088/Src/bmi08g.c **** 	} else {
  80              		.loc 1 570 8 view .LVU20
  81 0028 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE11:
  85              		.section	.text.get_regs,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	get_regs:
  92              	.LVL10:
  93              	.LFB12:
 578:BMI088/Src/bmi08g.c **** 
 579:BMI088/Src/bmi08g.c **** /*!
 580:BMI088/Src/bmi08g.c ****  * @brief This API reads the data from the given register address of gyro sensor.
 581:BMI088/Src/bmi08g.c ****  */
 582:BMI088/Src/bmi08g.c **** static int8_t get_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bmi08x_dev *
 583:BMI088/Src/bmi08g.c **** {
  94              		.loc 1 583 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 13


  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		.loc 1 583 1 is_stmt 0 view .LVU22
  99 0000 10B5     		push	{r4, lr}
 100              	.LCFI0:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
 104 0002 9C46     		mov	ip, r3
 584:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 105              		.loc 1 584 2 is_stmt 1 view .LVU23
 585:BMI088/Src/bmi08g.c **** 
 586:BMI088/Src/bmi08g.c **** 	if (dev->intf == BMI08X_SPI_INTF) {
 106              		.loc 1 586 2 view .LVU24
 107              		.loc 1 586 9 is_stmt 0 view .LVU25
 108 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 109              	.LVL11:
 110              		.loc 1 586 5 view .LVU26
 111 0006 012B     		cmp	r3, #1
 112 0008 09D0     		beq	.L13
 113              	.L9:
 587:BMI088/Src/bmi08g.c **** 		/* Configuring reg_addr for SPI Interface */
 588:BMI088/Src/bmi08g.c **** 		reg_addr = (reg_addr | BMI08X_SPI_RD_MASK);
 589:BMI088/Src/bmi08g.c **** 	}
 590:BMI088/Src/bmi08g.c **** 
 591:BMI088/Src/bmi08g.c **** 	/* read a gyro register */
 592:BMI088/Src/bmi08g.c **** 	rslt = dev->read(dev->gyro_id, reg_addr, reg_data, len);
 114              		.loc 1 592 2 is_stmt 1 view .LVU27
 115              		.loc 1 592 12 is_stmt 0 view .LVU28
 116 000a DCF81840 		ldr	r4, [ip, #24]
 117              		.loc 1 592 9 view .LVU29
 118 000e 1346     		mov	r3, r2
 119 0010 0A46     		mov	r2, r1
 120              	.LVL12:
 121              		.loc 1 592 9 view .LVU30
 122 0012 0146     		mov	r1, r0
 123              	.LVL13:
 124              		.loc 1 592 9 view .LVU31
 125 0014 9CF80300 		ldrb	r0, [ip, #3]	@ zero_extendqisi2
 126              	.LVL14:
 127              		.loc 1 592 9 view .LVU32
 128 0018 A047     		blx	r4
 129              	.LVL15:
 593:BMI088/Src/bmi08g.c **** 
 594:BMI088/Src/bmi08g.c **** 	if (rslt != BMI08X_OK) {
 130              		.loc 1 594 2 is_stmt 1 view .LVU33
 131              		.loc 1 594 5 is_stmt 0 view .LVU34
 132 001a 18B9     		cbnz	r0, .L14
 133              	.LVL16:
 134              	.L10:
 595:BMI088/Src/bmi08g.c **** 		/* Updating the error */
 596:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_COM_FAIL;
 597:BMI088/Src/bmi08g.c **** 	}
 598:BMI088/Src/bmi08g.c **** 
 599:BMI088/Src/bmi08g.c **** 	return rslt;
 135              		.loc 1 599 2 is_stmt 1 view .LVU35
 600:BMI088/Src/bmi08g.c **** }
 136              		.loc 1 600 1 is_stmt 0 view .LVU36
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 14


 137 001c 10BD     		pop	{r4, pc}
 138              	.LVL17:
 139              	.L13:
 588:BMI088/Src/bmi08g.c **** 	}
 140              		.loc 1 588 3 is_stmt 1 view .LVU37
 588:BMI088/Src/bmi08g.c **** 	}
 141              		.loc 1 588 12 is_stmt 0 view .LVU38
 142 001e 40F08000 		orr	r0, r0, #128
 143              	.LVL18:
 588:BMI088/Src/bmi08g.c **** 	}
 144              		.loc 1 588 12 view .LVU39
 145 0022 F2E7     		b	.L9
 146              	.LVL19:
 147              	.L14:
 596:BMI088/Src/bmi08g.c **** 	}
 148              		.loc 1 596 8 view .LVU40
 149 0024 6FF00100 		mvn	r0, #1
 150              	.LVL20:
 596:BMI088/Src/bmi08g.c **** 	}
 151              		.loc 1 596 8 view .LVU41
 152 0028 F8E7     		b	.L10
 153              		.cfi_endproc
 154              	.LFE12:
 156              		.section	.text.set_regs,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	set_regs:
 163              	.LVL21:
 164              	.LFB13:
 601:BMI088/Src/bmi08g.c **** 
 602:BMI088/Src/bmi08g.c **** /*!
 603:BMI088/Src/bmi08g.c ****  * @brief This API writes the given data to the register address of gyro sensor.
 604:BMI088/Src/bmi08g.c ****  */
 605:BMI088/Src/bmi08g.c **** static int8_t set_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bmi08x_dev *
 606:BMI088/Src/bmi08g.c **** {
 165              		.loc 1 606 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		.loc 1 606 1 is_stmt 0 view .LVU43
 170 0000 10B5     		push	{r4, lr}
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
 175 0002 9C46     		mov	ip, r3
 607:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 176              		.loc 1 607 2 is_stmt 1 view .LVU44
 608:BMI088/Src/bmi08g.c **** 
 609:BMI088/Src/bmi08g.c **** 	if (dev->intf == BMI08X_SPI_INTF) {
 177              		.loc 1 609 2 view .LVU45
 178              		.loc 1 609 9 is_stmt 0 view .LVU46
 179 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 180              	.LVL22:
 181              		.loc 1 609 5 view .LVU47
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 15


 182 0006 012B     		cmp	r3, #1
 183 0008 09D0     		beq	.L20
 184              	.L16:
 610:BMI088/Src/bmi08g.c **** 		/* Configuring reg_addr for SPI Interface */
 611:BMI088/Src/bmi08g.c **** 		reg_addr = (reg_addr & BMI08X_SPI_WR_MASK);
 612:BMI088/Src/bmi08g.c **** 	}
 613:BMI088/Src/bmi08g.c **** 	/* write to a gyro register */
 614:BMI088/Src/bmi08g.c **** 	rslt = dev->write(dev->gyro_id, reg_addr, reg_data, len);
 185              		.loc 1 614 2 is_stmt 1 view .LVU48
 186              		.loc 1 614 12 is_stmt 0 view .LVU49
 187 000a DCF81C40 		ldr	r4, [ip, #28]
 188              		.loc 1 614 9 view .LVU50
 189 000e 1346     		mov	r3, r2
 190 0010 0A46     		mov	r2, r1
 191              	.LVL23:
 192              		.loc 1 614 9 view .LVU51
 193 0012 0146     		mov	r1, r0
 194              	.LVL24:
 195              		.loc 1 614 9 view .LVU52
 196 0014 9CF80300 		ldrb	r0, [ip, #3]	@ zero_extendqisi2
 197              	.LVL25:
 198              		.loc 1 614 9 view .LVU53
 199 0018 A047     		blx	r4
 200              	.LVL26:
 615:BMI088/Src/bmi08g.c **** 
 616:BMI088/Src/bmi08g.c **** 	if (rslt != BMI08X_OK) {
 201              		.loc 1 616 2 is_stmt 1 view .LVU54
 202              		.loc 1 616 5 is_stmt 0 view .LVU55
 203 001a 18B9     		cbnz	r0, .L21
 204              	.LVL27:
 205              	.L17:
 617:BMI088/Src/bmi08g.c **** 		/* Updating the error */
 618:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_COM_FAIL;
 619:BMI088/Src/bmi08g.c **** 	}
 620:BMI088/Src/bmi08g.c **** 
 621:BMI088/Src/bmi08g.c **** 	return rslt;
 206              		.loc 1 621 2 is_stmt 1 view .LVU56
 622:BMI088/Src/bmi08g.c **** }
 207              		.loc 1 622 1 is_stmt 0 view .LVU57
 208 001c 10BD     		pop	{r4, pc}
 209              	.LVL28:
 210              	.L20:
 611:BMI088/Src/bmi08g.c **** 	}
 211              		.loc 1 611 3 is_stmt 1 view .LVU58
 611:BMI088/Src/bmi08g.c **** 	}
 212              		.loc 1 611 12 is_stmt 0 view .LVU59
 213 001e 00F07F00 		and	r0, r0, #127
 214              	.LVL29:
 611:BMI088/Src/bmi08g.c **** 	}
 215              		.loc 1 611 12 view .LVU60
 216 0022 F2E7     		b	.L16
 217              	.LVL30:
 218              	.L21:
 618:BMI088/Src/bmi08g.c **** 	}
 219              		.loc 1 618 8 view .LVU61
 220 0024 6FF00100 		mvn	r0, #1
 221              	.LVL31:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 16


 618:BMI088/Src/bmi08g.c **** 	}
 222              		.loc 1 618 8 view .LVU62
 223 0028 F8E7     		b	.L17
 224              		.cfi_endproc
 225              	.LFE13:
 227              		.section	.text.set_int_pin_config,"ax",%progbits
 228              		.align	1
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	set_int_pin_config:
 234              	.LVL32:
 235              	.LFB15:
 623:BMI088/Src/bmi08g.c **** 
 624:BMI088/Src/bmi08g.c **** /*!
 625:BMI088/Src/bmi08g.c ****  * @brief This API sets the data ready interrupt for gyro sensor.
 626:BMI088/Src/bmi08g.c ****  */
 627:BMI088/Src/bmi08g.c **** static int8_t set_gyro_data_ready_int(const struct bmi08x_gyro_int_channel_cfg *int_config,
 628:BMI088/Src/bmi08g.c **** 	const struct bmi08x_dev *dev)
 629:BMI088/Src/bmi08g.c **** {
 630:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 631:BMI088/Src/bmi08g.c **** 	uint8_t conf, data[2] = { 0 };
 632:BMI088/Src/bmi08g.c **** 
 633:BMI088/Src/bmi08g.c **** 	/* read interrupt map register */
 634:BMI088/Src/bmi08g.c **** 	rslt = get_regs(BMI08X_GYRO_INT3_INT4_IO_MAP_REG, &data[0], 1, dev);
 635:BMI088/Src/bmi08g.c **** 
 636:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 637:BMI088/Src/bmi08g.c **** 		conf = int_config->int_pin_cfg.enable_int_pin;
 638:BMI088/Src/bmi08g.c **** 
 639:BMI088/Src/bmi08g.c **** 		switch (int_config->int_channel) {
 640:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_3:
 641:BMI088/Src/bmi08g.c **** 			/* Data to enable new data ready interrupt */
 642:BMI088/Src/bmi08g.c **** 			data[0] = BMI08X_SET_BITS_POS_0(data[0], BMI08X_GYRO_INT3_MAP, conf);
 643:BMI088/Src/bmi08g.c **** 			break;
 644:BMI088/Src/bmi08g.c **** 
 645:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_4:
 646:BMI088/Src/bmi08g.c **** 			/* Data to enable new data ready interrupt */
 647:BMI088/Src/bmi08g.c **** 			data[0] = BMI08X_SET_BITS(data[0], BMI08X_GYRO_INT4_MAP, conf);
 648:BMI088/Src/bmi08g.c **** 			break;
 649:BMI088/Src/bmi08g.c **** 
 650:BMI088/Src/bmi08g.c **** 		default:
 651:BMI088/Src/bmi08g.c **** 			rslt = BMI08X_E_INVALID_INPUT;
 652:BMI088/Src/bmi08g.c **** 			break;
 653:BMI088/Src/bmi08g.c **** 		}
 654:BMI088/Src/bmi08g.c **** 
 655:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 656:BMI088/Src/bmi08g.c **** 			/*condition to check disabling the interrupt in single channel when both interrupts channels
 657:BMI088/Src/bmi08g.c **** 			 *  are enabled*/
 658:BMI088/Src/bmi08g.c **** 			if (data[0] & BMI08X_GYRO_MAP_DRDY_TO_BOTH_INT3_INT4) {
 659:BMI088/Src/bmi08g.c **** 				/* Updating the data */
 660:BMI088/Src/bmi08g.c **** 				/* Data to enable new data ready interrupt */
 661:BMI088/Src/bmi08g.c **** 				data[1] = BMI08X_GYRO_DRDY_INT_ENABLE_VAL;
 662:BMI088/Src/bmi08g.c **** 			} else {
 663:BMI088/Src/bmi08g.c **** 				data[1] = BMI08X_GYRO_DRDY_INT_DISABLE_VAL;
 664:BMI088/Src/bmi08g.c **** 			}
 665:BMI088/Src/bmi08g.c **** 
 666:BMI088/Src/bmi08g.c **** 			/* write data to interrupt map register */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 17


 667:BMI088/Src/bmi08g.c **** 			rslt = set_regs(BMI08X_GYRO_INT3_INT4_IO_MAP_REG, &data[0], 1, dev);
 668:BMI088/Src/bmi08g.c **** 
 669:BMI088/Src/bmi08g.c **** 			if (rslt == BMI08X_OK) {
 670:BMI088/Src/bmi08g.c **** 				/* Configure interrupt pin */
 671:BMI088/Src/bmi08g.c **** 				rslt = set_int_pin_config(int_config, dev);
 672:BMI088/Src/bmi08g.c **** 
 673:BMI088/Src/bmi08g.c **** 				if (rslt == BMI08X_OK) {
 674:BMI088/Src/bmi08g.c **** 					/* write data to interrupt control register */
 675:BMI088/Src/bmi08g.c **** 					rslt = set_regs(BMI08X_GYRO_INT_CTRL_REG, &data[1], 1, dev);
 676:BMI088/Src/bmi08g.c **** 				}
 677:BMI088/Src/bmi08g.c **** 
 678:BMI088/Src/bmi08g.c **** 			}
 679:BMI088/Src/bmi08g.c **** 		}
 680:BMI088/Src/bmi08g.c **** 
 681:BMI088/Src/bmi08g.c **** 	}
 682:BMI088/Src/bmi08g.c **** 
 683:BMI088/Src/bmi08g.c **** 	return rslt;
 684:BMI088/Src/bmi08g.c **** }
 685:BMI088/Src/bmi08g.c **** 
 686:BMI088/Src/bmi08g.c **** /*!
 687:BMI088/Src/bmi08g.c ****  * @brief This API configures the pins which fire the
 688:BMI088/Src/bmi08g.c ****  * interrupt signal when any interrupt occurs.
 689:BMI088/Src/bmi08g.c ****  */
 690:BMI088/Src/bmi08g.c **** static int8_t set_int_pin_config(const struct bmi08x_gyro_int_channel_cfg *int_config, const struct
 691:BMI088/Src/bmi08g.c **** {
 236              		.loc 1 691 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		.loc 1 691 1 is_stmt 0 view .LVU64
 241 0000 30B5     		push	{r4, r5, lr}
 242              	.LCFI2:
 243              		.cfi_def_cfa_offset 12
 244              		.cfi_offset 4, -12
 245              		.cfi_offset 5, -8
 246              		.cfi_offset 14, -4
 247 0002 83B0     		sub	sp, sp, #12
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 24
 250 0004 0546     		mov	r5, r0
 251 0006 0C46     		mov	r4, r1
 692:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 252              		.loc 1 692 2 is_stmt 1 view .LVU65
 693:BMI088/Src/bmi08g.c **** 	uint8_t data;
 253              		.loc 1 693 2 view .LVU66
 694:BMI088/Src/bmi08g.c **** 
 695:BMI088/Src/bmi08g.c **** 	/* Read interrupt configuration register */
 696:BMI088/Src/bmi08g.c **** 	rslt = get_regs(BMI08X_GYRO_INT3_INT4_IO_CONF_REG, &data, 1, dev);
 254              		.loc 1 696 2 view .LVU67
 255              		.loc 1 696 9 is_stmt 0 view .LVU68
 256 0008 0B46     		mov	r3, r1
 257 000a 0122     		movs	r2, #1
 258 000c 0DF10701 		add	r1, sp, #7
 259              	.LVL33:
 260              		.loc 1 696 9 view .LVU69
 261 0010 1620     		movs	r0, #22
 262              	.LVL34:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 18


 263              		.loc 1 696 9 view .LVU70
 264 0012 FFF7FEFF 		bl	get_regs
 265              	.LVL35:
 697:BMI088/Src/bmi08g.c **** 
 698:BMI088/Src/bmi08g.c **** 	if (rslt == BMI08X_OK) {
 266              		.loc 1 698 2 is_stmt 1 view .LVU71
 267              		.loc 1 698 5 is_stmt 0 view .LVU72
 268 0016 50B9     		cbnz	r0, .L23
 699:BMI088/Src/bmi08g.c **** 		switch (int_config->int_channel) {
 269              		.loc 1 699 3 is_stmt 1 view .LVU73
 270              		.loc 1 699 21 is_stmt 0 view .LVU74
 271 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 272              		.loc 1 699 3 view .LVU75
 273 001a 53B1     		cbz	r3, .L24
 274 001c 012B     		cmp	r3, #1
 275 001e 1BD0     		beq	.L25
 276              	.L26:
 700:BMI088/Src/bmi08g.c **** 		/* Interrupt pin or channel 3 */
 701:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_3:
 702:BMI088/Src/bmi08g.c **** 			/* Update data with user configured bmi08x_int_cfg structure */
 703:BMI088/Src/bmi08g.c **** 			data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_INT3_LVL,
 704:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 705:BMI088/Src/bmi08g.c **** 			data = BMI08X_SET_BITS(data, BMI08X_GYRO_INT3_OD,
 706:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 707:BMI088/Src/bmi08g.c **** 			break;
 708:BMI088/Src/bmi08g.c **** 
 709:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_4:
 710:BMI088/Src/bmi08g.c **** 			/* Update data with user configured bmi08x_int_cfg structure */
 711:BMI088/Src/bmi08g.c **** 			data = BMI08X_SET_BITS(data, BMI08X_GYRO_INT4_LVL,
 712:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 713:BMI088/Src/bmi08g.c **** 			data = BMI08X_SET_BITS(data, BMI08X_GYRO_INT4_OD,
 714:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 715:BMI088/Src/bmi08g.c **** 			break;
 716:BMI088/Src/bmi08g.c **** 
 717:BMI088/Src/bmi08g.c **** 		default:
 718:BMI088/Src/bmi08g.c **** 			break;
 719:BMI088/Src/bmi08g.c **** 		}
 720:BMI088/Src/bmi08g.c **** 		/* write to interrupt configuration register */
 721:BMI088/Src/bmi08g.c **** 		rslt = set_regs(BMI08X_GYRO_INT3_INT4_IO_CONF_REG, &data, 1, dev);
 277              		.loc 1 721 3 is_stmt 1 view .LVU76
 278              		.loc 1 721 10 is_stmt 0 view .LVU77
 279 0020 2346     		mov	r3, r4
 280 0022 0122     		movs	r2, #1
 281 0024 0DF10701 		add	r1, sp, #7
 282 0028 1620     		movs	r0, #22
 283 002a FFF7FEFF 		bl	set_regs
 284              	.LVL36:
 285              	.L23:
 722:BMI088/Src/bmi08g.c **** 	}
 723:BMI088/Src/bmi08g.c **** 
 724:BMI088/Src/bmi08g.c **** 	return rslt;
 286              		.loc 1 724 2 is_stmt 1 view .LVU78
 725:BMI088/Src/bmi08g.c **** }
 287              		.loc 1 725 1 is_stmt 0 view .LVU79
 288 002e 03B0     		add	sp, sp, #12
 289              	.LCFI4:
 290              		.cfi_remember_state
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 19


 291              		.cfi_def_cfa_offset 12
 292              		@ sp needed
 293 0030 30BD     		pop	{r4, r5, pc}
 294              	.LVL37:
 295              	.L24:
 296              	.LCFI5:
 297              		.cfi_restore_state
 703:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 298              		.loc 1 703 4 is_stmt 1 view .LVU80
 703:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 299              		.loc 1 703 11 is_stmt 0 view .LVU81
 300 0032 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 301 0036 23F00103 		bic	r3, r3, #1
 302 003a 5BB2     		sxtb	r3, r3
 303 003c AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 304 003e 02F00101 		and	r1, r2, #1
 305 0042 0B43     		orrs	r3, r3, r1
 703:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 306              		.loc 1 703 9 view .LVU82
 307 0044 8DF80730 		strb	r3, [sp, #7]
 705:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 308              		.loc 1 705 4 is_stmt 1 view .LVU83
 705:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 309              		.loc 1 705 11 is_stmt 0 view .LVU84
 310 0048 23F00203 		bic	r3, r3, #2
 311 004c 02F00202 		and	r2, r2, #2
 312 0050 1343     		orrs	r3, r3, r2
 705:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 313              		.loc 1 705 9 view .LVU85
 314 0052 8DF80730 		strb	r3, [sp, #7]
 707:BMI088/Src/bmi08g.c **** 
 315              		.loc 1 707 4 is_stmt 1 view .LVU86
 316 0056 E3E7     		b	.L26
 317              	.L25:
 711:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 318              		.loc 1 711 4 view .LVU87
 711:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 319              		.loc 1 711 11 is_stmt 0 view .LVU88
 320 0058 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 321 005c 23F00403 		bic	r3, r3, #4
 322 0060 5BB2     		sxtb	r3, r3
 323 0062 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 324 0064 02F00101 		and	r1, r2, #1
 325 0068 43EA8103 		orr	r3, r3, r1, lsl #2
 711:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.lvl);
 326              		.loc 1 711 9 view .LVU89
 327 006c 8DF80730 		strb	r3, [sp, #7]
 713:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 328              		.loc 1 713 4 is_stmt 1 view .LVU90
 713:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 329              		.loc 1 713 11 is_stmt 0 view .LVU91
 330 0070 23F00803 		bic	r3, r3, #8
 331 0074 C2F34002 		ubfx	r2, r2, #1, #1
 332 0078 43EAC203 		orr	r3, r3, r2, lsl #3
 713:BMI088/Src/bmi08g.c **** 					int_config->int_pin_cfg.output_mode);
 333              		.loc 1 713 9 view .LVU92
 334 007c 8DF80730 		strb	r3, [sp, #7]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 20


 715:BMI088/Src/bmi08g.c **** 
 335              		.loc 1 715 4 is_stmt 1 view .LVU93
 336 0080 CEE7     		b	.L26
 337              		.cfi_endproc
 338              	.LFE15:
 340              		.section	.text.set_gyro_data_ready_int,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	set_gyro_data_ready_int:
 347              	.LVL38:
 348              	.LFB14:
 629:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 349              		.loc 1 629 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 629:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 353              		.loc 1 629 1 is_stmt 0 view .LVU95
 354 0000 30B5     		push	{r4, r5, lr}
 355              	.LCFI6:
 356              		.cfi_def_cfa_offset 12
 357              		.cfi_offset 4, -12
 358              		.cfi_offset 5, -8
 359              		.cfi_offset 14, -4
 360 0002 83B0     		sub	sp, sp, #12
 361              	.LCFI7:
 362              		.cfi_def_cfa_offset 24
 363 0004 0546     		mov	r5, r0
 364 0006 0C46     		mov	r4, r1
 630:BMI088/Src/bmi08g.c **** 	uint8_t conf, data[2] = { 0 };
 365              		.loc 1 630 2 is_stmt 1 view .LVU96
 631:BMI088/Src/bmi08g.c **** 
 366              		.loc 1 631 2 view .LVU97
 631:BMI088/Src/bmi08g.c **** 
 367              		.loc 1 631 16 is_stmt 0 view .LVU98
 368 0008 0023     		movs	r3, #0
 369 000a ADF80430 		strh	r3, [sp, #4]	@ movhi
 634:BMI088/Src/bmi08g.c **** 
 370              		.loc 1 634 2 is_stmt 1 view .LVU99
 634:BMI088/Src/bmi08g.c **** 
 371              		.loc 1 634 9 is_stmt 0 view .LVU100
 372 000e 0B46     		mov	r3, r1
 373 0010 0122     		movs	r2, #1
 374 0012 01A9     		add	r1, sp, #4
 375              	.LVL39:
 634:BMI088/Src/bmi08g.c **** 
 376              		.loc 1 634 9 view .LVU101
 377 0014 1820     		movs	r0, #24
 378              	.LVL40:
 634:BMI088/Src/bmi08g.c **** 
 379              		.loc 1 634 9 view .LVU102
 380 0016 FFF7FEFF 		bl	get_regs
 381              	.LVL41:
 636:BMI088/Src/bmi08g.c **** 		conf = int_config->int_pin_cfg.enable_int_pin;
 382              		.loc 1 636 2 is_stmt 1 view .LVU103
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 21


 636:BMI088/Src/bmi08g.c **** 		conf = int_config->int_pin_cfg.enable_int_pin;
 383              		.loc 1 636 5 is_stmt 0 view .LVU104
 384 001a 40B9     		cbnz	r0, .L29
 637:BMI088/Src/bmi08g.c **** 
 385              		.loc 1 637 3 is_stmt 1 view .LVU105
 637:BMI088/Src/bmi08g.c **** 
 386              		.loc 1 637 33 is_stmt 0 view .LVU106
 387 001c AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 388 001e C3F38001 		ubfx	r1, r3, #2, #1
 389              	.LVL42:
 639:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_3:
 390              		.loc 1 639 3 is_stmt 1 view .LVU107
 639:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_3:
 391              		.loc 1 639 21 is_stmt 0 view .LVU108
 392 0022 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 639:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_3:
 393              		.loc 1 639 3 view .LVU109
 394 0024 2AB1     		cbz	r2, .L30
 395 0026 012A     		cmp	r2, #1
 396 0028 29D0     		beq	.L31
 397              	.LVL43:
 639:BMI088/Src/bmi08g.c **** 		case BMI08X_INT_CHANNEL_3:
 398              		.loc 1 639 3 view .LVU110
 399 002a 6FF00400 		mvn	r0, #4
 400              	.LVL44:
 401              	.L29:
 683:BMI088/Src/bmi08g.c **** }
 402              		.loc 1 683 2 is_stmt 1 view .LVU111
 684:BMI088/Src/bmi08g.c **** 
 403              		.loc 1 684 1 is_stmt 0 view .LVU112
 404 002e 03B0     		add	sp, sp, #12
 405              	.LCFI8:
 406              		.cfi_remember_state
 407              		.cfi_def_cfa_offset 12
 408              		@ sp needed
 409 0030 30BD     		pop	{r4, r5, pc}
 410              	.LVL45:
 411              	.L30:
 412              	.LCFI9:
 413              		.cfi_restore_state
 642:BMI088/Src/bmi08g.c **** 			break;
 414              		.loc 1 642 4 is_stmt 1 view .LVU113
 642:BMI088/Src/bmi08g.c **** 			break;
 415              		.loc 1 642 14 is_stmt 0 view .LVU114
 416 0032 9DF90430 		ldrsb	r3, [sp, #4]
 417 0036 23F00103 		bic	r3, r3, #1
 418 003a 49B2     		sxtb	r1, r1
 642:BMI088/Src/bmi08g.c **** 			break;
 419              		.loc 1 642 14 view .LVU115
 420 003c 1943     		orrs	r1, r1, r3
 421              	.LVL46:
 642:BMI088/Src/bmi08g.c **** 			break;
 422              		.loc 1 642 12 view .LVU116
 423 003e 8DF80410 		strb	r1, [sp, #4]
 643:BMI088/Src/bmi08g.c **** 
 424              		.loc 1 643 4 is_stmt 1 view .LVU117
 425              	.L32:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 22


 655:BMI088/Src/bmi08g.c **** 			/*condition to check disabling the interrupt in single channel when both interrupts channels
 426              		.loc 1 655 3 view .LVU118
 658:BMI088/Src/bmi08g.c **** 				/* Updating the data */
 427              		.loc 1 658 4 view .LVU119
 658:BMI088/Src/bmi08g.c **** 				/* Updating the data */
 428              		.loc 1 658 12 is_stmt 0 view .LVU120
 429 0042 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 658:BMI088/Src/bmi08g.c **** 				/* Updating the data */
 430              		.loc 1 658 7 view .LVU121
 431 0046 13F0810F 		tst	r3, #129
 432 004a 21D0     		beq	.L33
 661:BMI088/Src/bmi08g.c **** 			} else {
 433              		.loc 1 661 5 is_stmt 1 view .LVU122
 661:BMI088/Src/bmi08g.c **** 			} else {
 434              		.loc 1 661 13 is_stmt 0 view .LVU123
 435 004c 8023     		movs	r3, #128
 436 004e 8DF80530 		strb	r3, [sp, #5]
 437              	.L34:
 667:BMI088/Src/bmi08g.c **** 
 438              		.loc 1 667 4 is_stmt 1 view .LVU124
 667:BMI088/Src/bmi08g.c **** 
 439              		.loc 1 667 11 is_stmt 0 view .LVU125
 440 0052 2346     		mov	r3, r4
 441 0054 0122     		movs	r2, #1
 442 0056 01A9     		add	r1, sp, #4
 443 0058 1820     		movs	r0, #24
 444 005a FFF7FEFF 		bl	set_regs
 445              	.LVL47:
 669:BMI088/Src/bmi08g.c **** 				/* Configure interrupt pin */
 446              		.loc 1 669 4 is_stmt 1 view .LVU126
 669:BMI088/Src/bmi08g.c **** 				/* Configure interrupt pin */
 447              		.loc 1 669 7 is_stmt 0 view .LVU127
 448 005e 0028     		cmp	r0, #0
 449 0060 E5D1     		bne	.L29
 671:BMI088/Src/bmi08g.c **** 
 450              		.loc 1 671 5 is_stmt 1 view .LVU128
 671:BMI088/Src/bmi08g.c **** 
 451              		.loc 1 671 12 is_stmt 0 view .LVU129
 452 0062 2146     		mov	r1, r4
 453 0064 2846     		mov	r0, r5
 454 0066 FFF7FEFF 		bl	set_int_pin_config
 455              	.LVL48:
 673:BMI088/Src/bmi08g.c **** 					/* write data to interrupt control register */
 456              		.loc 1 673 5 is_stmt 1 view .LVU130
 673:BMI088/Src/bmi08g.c **** 					/* write data to interrupt control register */
 457              		.loc 1 673 8 is_stmt 0 view .LVU131
 458 006a 0028     		cmp	r0, #0
 459 006c DFD1     		bne	.L29
 675:BMI088/Src/bmi08g.c **** 				}
 460              		.loc 1 675 6 is_stmt 1 view .LVU132
 675:BMI088/Src/bmi08g.c **** 				}
 461              		.loc 1 675 13 is_stmt 0 view .LVU133
 462 006e 2346     		mov	r3, r4
 463 0070 0122     		movs	r2, #1
 464 0072 0DF10501 		add	r1, sp, #5
 465 0076 1520     		movs	r0, #21
 466 0078 FFF7FEFF 		bl	set_regs
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 23


 467              	.LVL49:
 675:BMI088/Src/bmi08g.c **** 				}
 468              		.loc 1 675 13 view .LVU134
 469 007c D7E7     		b	.L29
 470              	.LVL50:
 471              	.L31:
 647:BMI088/Src/bmi08g.c **** 			break;
 472              		.loc 1 647 4 is_stmt 1 view .LVU135
 647:BMI088/Src/bmi08g.c **** 			break;
 473              		.loc 1 647 14 is_stmt 0 view .LVU136
 474 007e 9DF90420 		ldrsb	r2, [sp, #4]
 475 0082 02F07F02 		and	r2, r2, #127
 476 0086 42EAC113 		orr	r3, r2, r1, lsl #7
 647:BMI088/Src/bmi08g.c **** 			break;
 477              		.loc 1 647 12 view .LVU137
 478 008a 8DF80430 		strb	r3, [sp, #4]
 648:BMI088/Src/bmi08g.c **** 
 479              		.loc 1 648 4 is_stmt 1 view .LVU138
 480 008e D8E7     		b	.L32
 481              	.LVL51:
 482              	.L33:
 663:BMI088/Src/bmi08g.c **** 			}
 483              		.loc 1 663 5 view .LVU139
 663:BMI088/Src/bmi08g.c **** 			}
 484              		.loc 1 663 13 is_stmt 0 view .LVU140
 485 0090 0023     		movs	r3, #0
 486 0092 8DF80530 		strb	r3, [sp, #5]
 487 0096 DCE7     		b	.L34
 488              		.cfi_endproc
 489              	.LFE14:
 491              		.section	.text.set_gyro_selftest,"ax",%progbits
 492              		.align	1
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	set_gyro_selftest:
 498              	.LVL52:
 499              	.LFB16:
 726:BMI088/Src/bmi08g.c **** 
 727:BMI088/Src/bmi08g.c **** /*!
 728:BMI088/Src/bmi08g.c ****  *  @brief This API enables or disables the Gyro Self test feature in the
 729:BMI088/Src/bmi08g.c ****  *  sensor.
 730:BMI088/Src/bmi08g.c ****  */
 731:BMI088/Src/bmi08g.c **** static int8_t set_gyro_selftest(uint8_t selftest, const struct bmi08x_dev *dev)
 732:BMI088/Src/bmi08g.c **** {
 500              		.loc 1 732 1 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 8
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		.loc 1 732 1 is_stmt 0 view .LVU142
 505 0000 30B5     		push	{r4, r5, lr}
 506              	.LCFI10:
 507              		.cfi_def_cfa_offset 12
 508              		.cfi_offset 4, -12
 509              		.cfi_offset 5, -8
 510              		.cfi_offset 14, -4
 511 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 24


 512              	.LCFI11:
 513              		.cfi_def_cfa_offset 24
 733:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 514              		.loc 1 733 2 is_stmt 1 view .LVU143
 734:BMI088/Src/bmi08g.c **** 	uint8_t data = 0;
 515              		.loc 1 734 2 view .LVU144
 516              		.loc 1 734 10 is_stmt 0 view .LVU145
 517 0004 0023     		movs	r3, #0
 518 0006 8DF80730 		strb	r3, [sp, #7]
 735:BMI088/Src/bmi08g.c **** 
 736:BMI088/Src/bmi08g.c **** 	/* Check for valid selftest input */
 737:BMI088/Src/bmi08g.c **** 	if ((selftest == BMI08X_ENABLE) || (selftest == BMI08X_DISABLE)) {
 519              		.loc 1 737 2 is_stmt 1 view .LVU146
 520              		.loc 1 737 5 is_stmt 0 view .LVU147
 521 000a 0128     		cmp	r0, #1
 522 000c 1DD8     		bhi	.L38
 523 000e 0446     		mov	r4, r0
 524 0010 0D46     		mov	r5, r1
 738:BMI088/Src/bmi08g.c **** 		/* Read self test register */
 739:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_SELF_TEST_REG, &data, 1, dev);
 525              		.loc 1 739 3 is_stmt 1 view .LVU148
 526              		.loc 1 739 10 is_stmt 0 view .LVU149
 527 0012 0B46     		mov	r3, r1
 528 0014 0122     		movs	r2, #1
 529 0016 0DF10701 		add	r1, sp, #7
 530              	.LVL53:
 531              		.loc 1 739 10 view .LVU150
 532 001a 3C20     		movs	r0, #60
 533              	.LVL54:
 534              		.loc 1 739 10 view .LVU151
 535 001c FFF7FEFF 		bl	get_regs
 536              	.LVL55:
 740:BMI088/Src/bmi08g.c **** 
 741:BMI088/Src/bmi08g.c **** 		if (rslt == BMI08X_OK) {
 537              		.loc 1 741 3 is_stmt 1 view .LVU152
 538              		.loc 1 741 6 is_stmt 0 view .LVU153
 539 0020 08B1     		cbz	r0, .L40
 540              	.LVL56:
 541              	.L37:
 742:BMI088/Src/bmi08g.c **** 			/* Enable self-test */
 743:BMI088/Src/bmi08g.c **** 			data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_SELF_TEST_EN, selftest);
 744:BMI088/Src/bmi08g.c **** 			/* write self test input value to self-test register */
 745:BMI088/Src/bmi08g.c **** 			rslt = set_regs(BMI08X_GYRO_SELF_TEST_REG, &data, 1, dev);
 746:BMI088/Src/bmi08g.c **** 		}
 747:BMI088/Src/bmi08g.c **** 
 748:BMI088/Src/bmi08g.c **** 	} else {
 749:BMI088/Src/bmi08g.c **** 		rslt = BMI08X_E_INVALID_INPUT;
 750:BMI088/Src/bmi08g.c **** 	}
 751:BMI088/Src/bmi08g.c **** 
 752:BMI088/Src/bmi08g.c **** 	return rslt;
 542              		.loc 1 752 2 is_stmt 1 view .LVU154
 753:BMI088/Src/bmi08g.c **** }
 543              		.loc 1 753 1 is_stmt 0 view .LVU155
 544 0022 03B0     		add	sp, sp, #12
 545              	.LCFI12:
 546              		.cfi_remember_state
 547              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 25


 548              		@ sp needed
 549 0024 30BD     		pop	{r4, r5, pc}
 550              	.LVL57:
 551              	.L40:
 552              	.LCFI13:
 553              		.cfi_restore_state
 743:BMI088/Src/bmi08g.c **** 			/* write self test input value to self-test register */
 554              		.loc 1 743 4 is_stmt 1 view .LVU156
 743:BMI088/Src/bmi08g.c **** 			/* write self test input value to self-test register */
 555              		.loc 1 743 11 is_stmt 0 view .LVU157
 556 0026 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 557              	.LVL58:
 743:BMI088/Src/bmi08g.c **** 			/* write self test input value to self-test register */
 558              		.loc 1 743 11 view .LVU158
 559 002a 20F00100 		bic	r0, r0, #1
 560 002e 40B2     		sxtb	r0, r0
 561 0030 04F00104 		and	r4, r4, #1
 562 0034 0443     		orrs	r4, r4, r0
 743:BMI088/Src/bmi08g.c **** 			/* write self test input value to self-test register */
 563              		.loc 1 743 9 view .LVU159
 564 0036 8DF80740 		strb	r4, [sp, #7]
 745:BMI088/Src/bmi08g.c **** 		}
 565              		.loc 1 745 4 is_stmt 1 view .LVU160
 745:BMI088/Src/bmi08g.c **** 		}
 566              		.loc 1 745 11 is_stmt 0 view .LVU161
 567 003a 2B46     		mov	r3, r5
 568 003c 0122     		movs	r2, #1
 569 003e 0DF10701 		add	r1, sp, #7
 570 0042 3C20     		movs	r0, #60
 571 0044 FFF7FEFF 		bl	set_regs
 572              	.LVL59:
 745:BMI088/Src/bmi08g.c **** 		}
 573              		.loc 1 745 11 view .LVU162
 574 0048 EBE7     		b	.L37
 575              	.LVL60:
 576              	.L38:
 749:BMI088/Src/bmi08g.c **** 	}
 577              		.loc 1 749 8 view .LVU163
 578 004a 6FF00400 		mvn	r0, #4
 579              	.LVL61:
 749:BMI088/Src/bmi08g.c **** 	}
 580              		.loc 1 749 8 view .LVU164
 581 004e E8E7     		b	.L37
 582              		.cfi_endproc
 583              	.LFE16:
 585              		.section	.text.bmi08g_init,"ax",%progbits
 586              		.align	1
 587              		.global	bmi08g_init
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	bmi08g_init:
 593              	.LVL62:
 594              	.LFB0:
 160:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 595              		.loc 1 160 1 is_stmt 1 view -0
 596              		.cfi_startproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 26


 597              		@ args = 0, pretend = 0, frame = 8
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 160:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 599              		.loc 1 160 1 is_stmt 0 view .LVU166
 600 0000 10B5     		push	{r4, lr}
 601              	.LCFI14:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 82B0     		sub	sp, sp, #8
 606              	.LCFI15:
 607              		.cfi_def_cfa_offset 16
 608 0004 0446     		mov	r4, r0
 161:BMI088/Src/bmi08g.c **** 	uint8_t chip_id = 0;
 609              		.loc 1 161 2 is_stmt 1 view .LVU167
 162:BMI088/Src/bmi08g.c **** 
 610              		.loc 1 162 2 view .LVU168
 162:BMI088/Src/bmi08g.c **** 
 611              		.loc 1 162 10 is_stmt 0 view .LVU169
 612 0006 0023     		movs	r3, #0
 613 0008 8DF80730 		strb	r3, [sp, #7]
 165:BMI088/Src/bmi08g.c **** 
 614              		.loc 1 165 2 is_stmt 1 view .LVU170
 165:BMI088/Src/bmi08g.c **** 
 615              		.loc 1 165 9 is_stmt 0 view .LVU171
 616 000c FFF7FEFF 		bl	null_ptr_check
 617              	.LVL63:
 168:BMI088/Src/bmi08g.c **** 		/* Read gyro chip id */
 618              		.loc 1 168 2 is_stmt 1 view .LVU172
 168:BMI088/Src/bmi08g.c **** 		/* Read gyro chip id */
 619              		.loc 1 168 5 is_stmt 0 view .LVU173
 620 0010 08B1     		cbz	r0, .L45
 621              	.LVL64:
 622              	.L42:
 182:BMI088/Src/bmi08g.c **** }
 623              		.loc 1 182 2 is_stmt 1 view .LVU174
 183:BMI088/Src/bmi08g.c **** 
 624              		.loc 1 183 1 is_stmt 0 view .LVU175
 625 0012 02B0     		add	sp, sp, #8
 626              	.LCFI16:
 627              		.cfi_remember_state
 628              		.cfi_def_cfa_offset 8
 629              		@ sp needed
 630 0014 10BD     		pop	{r4, pc}
 631              	.LVL65:
 632              	.L45:
 633              	.LCFI17:
 634              		.cfi_restore_state
 170:BMI088/Src/bmi08g.c **** 
 635              		.loc 1 170 3 is_stmt 1 view .LVU176
 170:BMI088/Src/bmi08g.c **** 
 636              		.loc 1 170 10 is_stmt 0 view .LVU177
 637 0016 2346     		mov	r3, r4
 638 0018 0122     		movs	r2, #1
 639 001a 0DF10701 		add	r1, sp, #7
 640 001e 0020     		movs	r0, #0
 641              	.LVL66:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 27


 170:BMI088/Src/bmi08g.c **** 
 642              		.loc 1 170 10 view .LVU178
 643 0020 FFF7FEFF 		bl	get_regs
 644              	.LVL67:
 172:BMI088/Src/bmi08g.c **** 			if (chip_id == BMI08X_GYRO_CHIP_ID) {
 645              		.loc 1 172 3 is_stmt 1 view .LVU179
 172:BMI088/Src/bmi08g.c **** 			if (chip_id == BMI08X_GYRO_CHIP_ID) {
 646              		.loc 1 172 6 is_stmt 0 view .LVU180
 647 0024 0028     		cmp	r0, #0
 648 0026 F4D1     		bne	.L42
 173:BMI088/Src/bmi08g.c **** 				/* Store the chip ID in dev structure */
 649              		.loc 1 173 4 is_stmt 1 view .LVU181
 173:BMI088/Src/bmi08g.c **** 				/* Store the chip ID in dev structure */
 650              		.loc 1 173 16 is_stmt 0 view .LVU182
 651 0028 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 173:BMI088/Src/bmi08g.c **** 				/* Store the chip ID in dev structure */
 652              		.loc 1 173 7 view .LVU183
 653 002c 0F2B     		cmp	r3, #15
 654 002e 01D1     		bne	.L43
 175:BMI088/Src/bmi08g.c **** 			} else {
 655              		.loc 1 175 5 is_stmt 1 view .LVU184
 175:BMI088/Src/bmi08g.c **** 			} else {
 656              		.loc 1 175 23 is_stmt 0 view .LVU185
 657 0030 6370     		strb	r3, [r4, #1]
 658 0032 EEE7     		b	.L42
 659              	.L43:
 177:BMI088/Src/bmi08g.c **** 			}
 660              		.loc 1 177 10 view .LVU186
 661 0034 6FF00200 		mvn	r0, #2
 662              	.LVL68:
 177:BMI088/Src/bmi08g.c **** 			}
 663              		.loc 1 177 10 view .LVU187
 664 0038 EBE7     		b	.L42
 665              		.cfi_endproc
 666              	.LFE0:
 668              		.section	.text.bmi08g_get_regs,"ax",%progbits
 669              		.align	1
 670              		.global	bmi08g_get_regs
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 675              	bmi08g_get_regs:
 676              	.LVL69:
 677              	.LFB1:
 190:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 678              		.loc 1 190 1 is_stmt 1 view -0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 190:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 682              		.loc 1 190 1 is_stmt 0 view .LVU189
 683 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 684              	.LCFI18:
 685              		.cfi_def_cfa_offset 24
 686              		.cfi_offset 3, -24
 687              		.cfi_offset 4, -20
 688              		.cfi_offset 5, -16
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 28


 689              		.cfi_offset 6, -12
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 0746     		mov	r7, r0
 693 0004 0D46     		mov	r5, r1
 694 0006 1646     		mov	r6, r2
 695 0008 1C46     		mov	r4, r3
 191:BMI088/Src/bmi08g.c **** 
 696              		.loc 1 191 2 is_stmt 1 view .LVU190
 194:BMI088/Src/bmi08g.c **** 
 697              		.loc 1 194 2 view .LVU191
 194:BMI088/Src/bmi08g.c **** 
 698              		.loc 1 194 9 is_stmt 0 view .LVU192
 699 000a 1846     		mov	r0, r3
 700              	.LVL70:
 194:BMI088/Src/bmi08g.c **** 
 701              		.loc 1 194 9 view .LVU193
 702 000c FFF7FEFF 		bl	null_ptr_check
 703              	.LVL71:
 197:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 704              		.loc 1 197 2 is_stmt 1 view .LVU194
 197:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 705              		.loc 1 197 5 is_stmt 0 view .LVU195
 706 0010 40B9     		cbnz	r0, .L48
 197:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 707              		.loc 1 197 26 discriminator 1 view .LVU196
 708 0012 55B1     		cbz	r5, .L49
 198:BMI088/Src/bmi08g.c **** 			/* Reading from the register */
 709              		.loc 1 198 3 is_stmt 1 view .LVU197
 198:BMI088/Src/bmi08g.c **** 			/* Reading from the register */
 710              		.loc 1 198 6 is_stmt 0 view .LVU198
 711 0014 66B1     		cbz	r6, .L50
 200:BMI088/Src/bmi08g.c **** 		} else {
 712              		.loc 1 200 4 is_stmt 1 view .LVU199
 200:BMI088/Src/bmi08g.c **** 		} else {
 713              		.loc 1 200 11 is_stmt 0 view .LVU200
 714 0016 2346     		mov	r3, r4
 715 0018 3246     		mov	r2, r6
 716 001a 2946     		mov	r1, r5
 717 001c 3846     		mov	r0, r7
 718              	.LVL72:
 200:BMI088/Src/bmi08g.c **** 		} else {
 719              		.loc 1 200 11 view .LVU201
 720 001e FFF7FEFF 		bl	get_regs
 721              	.LVL73:
 722              	.L47:
 208:BMI088/Src/bmi08g.c **** }
 723              		.loc 1 208 2 is_stmt 1 view .LVU202
 209:BMI088/Src/bmi08g.c **** 
 724              		.loc 1 209 1 is_stmt 0 view .LVU203
 725 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 726              	.LVL74:
 727              	.L48:
 205:BMI088/Src/bmi08g.c **** 	}
 728              		.loc 1 205 8 view .LVU204
 729 0024 4FF0FF30 		mov	r0, #-1
 730              	.LVL75:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 29


 205:BMI088/Src/bmi08g.c **** 	}
 731              		.loc 1 205 8 view .LVU205
 732 0028 FBE7     		b	.L47
 733              	.LVL76:
 734              	.L49:
 205:BMI088/Src/bmi08g.c **** 	}
 735              		.loc 1 205 8 view .LVU206
 736 002a 4FF0FF30 		mov	r0, #-1
 737              	.LVL77:
 205:BMI088/Src/bmi08g.c **** 	}
 738              		.loc 1 205 8 view .LVU207
 739 002e F8E7     		b	.L47
 740              	.LVL78:
 741              	.L50:
 202:BMI088/Src/bmi08g.c **** 		}
 742              		.loc 1 202 9 view .LVU208
 743 0030 6FF00600 		mvn	r0, #6
 744              	.LVL79:
 202:BMI088/Src/bmi08g.c **** 		}
 745              		.loc 1 202 9 view .LVU209
 746 0034 F5E7     		b	.L47
 747              		.cfi_endproc
 748              	.LFE1:
 750              		.section	.text.bmi08g_set_regs,"ax",%progbits
 751              		.align	1
 752              		.global	bmi08g_set_regs
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 757              	bmi08g_set_regs:
 758              	.LVL80:
 759              	.LFB2:
 216:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 760              		.loc 1 216 1 is_stmt 1 view -0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 216:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 764              		.loc 1 216 1 is_stmt 0 view .LVU211
 765 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 766              	.LCFI19:
 767              		.cfi_def_cfa_offset 24
 768              		.cfi_offset 3, -24
 769              		.cfi_offset 4, -20
 770              		.cfi_offset 5, -16
 771              		.cfi_offset 6, -12
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 0746     		mov	r7, r0
 775 0004 0D46     		mov	r5, r1
 776 0006 1646     		mov	r6, r2
 777 0008 1C46     		mov	r4, r3
 217:BMI088/Src/bmi08g.c **** 
 778              		.loc 1 217 2 is_stmt 1 view .LVU212
 220:BMI088/Src/bmi08g.c **** 
 779              		.loc 1 220 2 view .LVU213
 220:BMI088/Src/bmi08g.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 30


 780              		.loc 1 220 9 is_stmt 0 view .LVU214
 781 000a 1846     		mov	r0, r3
 782              	.LVL81:
 220:BMI088/Src/bmi08g.c **** 
 783              		.loc 1 220 9 view .LVU215
 784 000c FFF7FEFF 		bl	null_ptr_check
 785              	.LVL82:
 223:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 786              		.loc 1 223 2 is_stmt 1 view .LVU216
 223:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 787              		.loc 1 223 5 is_stmt 0 view .LVU217
 788 0010 40B9     		cbnz	r0, .L54
 223:BMI088/Src/bmi08g.c **** 		if (len > 0) {
 789              		.loc 1 223 26 discriminator 1 view .LVU218
 790 0012 55B1     		cbz	r5, .L55
 224:BMI088/Src/bmi08g.c **** 			/* Writing to the register */
 791              		.loc 1 224 3 is_stmt 1 view .LVU219
 224:BMI088/Src/bmi08g.c **** 			/* Writing to the register */
 792              		.loc 1 224 6 is_stmt 0 view .LVU220
 793 0014 66B1     		cbz	r6, .L56
 226:BMI088/Src/bmi08g.c **** 		} else {
 794              		.loc 1 226 4 is_stmt 1 view .LVU221
 226:BMI088/Src/bmi08g.c **** 		} else {
 795              		.loc 1 226 11 is_stmt 0 view .LVU222
 796 0016 2346     		mov	r3, r4
 797 0018 3246     		mov	r2, r6
 798 001a 2946     		mov	r1, r5
 799 001c 3846     		mov	r0, r7
 800              	.LVL83:
 226:BMI088/Src/bmi08g.c **** 		} else {
 801              		.loc 1 226 11 view .LVU223
 802 001e FFF7FEFF 		bl	set_regs
 803              	.LVL84:
 804              	.L53:
 234:BMI088/Src/bmi08g.c **** }
 805              		.loc 1 234 2 is_stmt 1 view .LVU224
 235:BMI088/Src/bmi08g.c **** 
 806              		.loc 1 235 1 is_stmt 0 view .LVU225
 807 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 808              	.LVL85:
 809              	.L54:
 231:BMI088/Src/bmi08g.c **** 	}
 810              		.loc 1 231 8 view .LVU226
 811 0024 4FF0FF30 		mov	r0, #-1
 812              	.LVL86:
 231:BMI088/Src/bmi08g.c **** 	}
 813              		.loc 1 231 8 view .LVU227
 814 0028 FBE7     		b	.L53
 815              	.LVL87:
 816              	.L55:
 231:BMI088/Src/bmi08g.c **** 	}
 817              		.loc 1 231 8 view .LVU228
 818 002a 4FF0FF30 		mov	r0, #-1
 819              	.LVL88:
 231:BMI088/Src/bmi08g.c **** 	}
 820              		.loc 1 231 8 view .LVU229
 821 002e F8E7     		b	.L53
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 31


 822              	.LVL89:
 823              	.L56:
 228:BMI088/Src/bmi08g.c **** 		}
 824              		.loc 1 228 9 view .LVU230
 825 0030 6FF00600 		mvn	r0, #6
 826              	.LVL90:
 228:BMI088/Src/bmi08g.c **** 		}
 827              		.loc 1 228 9 view .LVU231
 828 0034 F5E7     		b	.L53
 829              		.cfi_endproc
 830              	.LFE2:
 832              		.section	.text.bmi08g_soft_reset,"ax",%progbits
 833              		.align	1
 834              		.global	bmi08g_soft_reset
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	bmi08g_soft_reset:
 840              	.LVL91:
 841              	.LFB3:
 241:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 842              		.loc 1 241 1 is_stmt 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 8
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 241:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 846              		.loc 1 241 1 is_stmt 0 view .LVU233
 847 0000 30B5     		push	{r4, r5, lr}
 848              	.LCFI20:
 849              		.cfi_def_cfa_offset 12
 850              		.cfi_offset 4, -12
 851              		.cfi_offset 5, -8
 852              		.cfi_offset 14, -4
 853 0002 83B0     		sub	sp, sp, #12
 854              	.LCFI21:
 855              		.cfi_def_cfa_offset 24
 856 0004 0446     		mov	r4, r0
 242:BMI088/Src/bmi08g.c **** 	uint8_t data;
 857              		.loc 1 242 2 is_stmt 1 view .LVU234
 243:BMI088/Src/bmi08g.c **** 
 858              		.loc 1 243 2 view .LVU235
 246:BMI088/Src/bmi08g.c **** 
 859              		.loc 1 246 2 view .LVU236
 246:BMI088/Src/bmi08g.c **** 
 860              		.loc 1 246 9 is_stmt 0 view .LVU237
 861 0006 FFF7FEFF 		bl	null_ptr_check
 862              	.LVL92:
 249:BMI088/Src/bmi08g.c **** 		/* Reset gyro device */
 863              		.loc 1 249 2 is_stmt 1 view .LVU238
 249:BMI088/Src/bmi08g.c **** 		/* Reset gyro device */
 864              		.loc 1 249 5 is_stmt 0 view .LVU239
 865 000a 0546     		mov	r5, r0
 866 000c 10B1     		cbz	r0, .L61
 867              	.LVL93:
 868              	.L59:
 260:BMI088/Src/bmi08g.c **** }
 869              		.loc 1 260 2 is_stmt 1 view .LVU240
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 32


 261:BMI088/Src/bmi08g.c **** 
 870              		.loc 1 261 1 is_stmt 0 view .LVU241
 871 000e 2846     		mov	r0, r5
 872 0010 03B0     		add	sp, sp, #12
 873              	.LCFI22:
 874              		.cfi_remember_state
 875              		.cfi_def_cfa_offset 12
 876              		@ sp needed
 877 0012 30BD     		pop	{r4, r5, pc}
 878              	.LVL94:
 879              	.L61:
 880              	.LCFI23:
 881              		.cfi_restore_state
 251:BMI088/Src/bmi08g.c **** 		rslt = set_regs(BMI08X_GYRO_SOFTRESET_REG, &data, 1, dev);
 882              		.loc 1 251 3 is_stmt 1 view .LVU242
 251:BMI088/Src/bmi08g.c **** 		rslt = set_regs(BMI08X_GYRO_SOFTRESET_REG, &data, 1, dev);
 883              		.loc 1 251 8 is_stmt 0 view .LVU243
 884 0014 B623     		movs	r3, #182
 885 0016 8DF80730 		strb	r3, [sp, #7]
 252:BMI088/Src/bmi08g.c **** 
 886              		.loc 1 252 3 is_stmt 1 view .LVU244
 252:BMI088/Src/bmi08g.c **** 
 887              		.loc 1 252 10 is_stmt 0 view .LVU245
 888 001a 2346     		mov	r3, r4
 889 001c 0122     		movs	r2, #1
 890 001e 0DF10701 		add	r1, sp, #7
 891 0022 1420     		movs	r0, #20
 892              	.LVL95:
 252:BMI088/Src/bmi08g.c **** 
 893              		.loc 1 252 10 view .LVU246
 894 0024 FFF7FEFF 		bl	set_regs
 895              	.LVL96:
 254:BMI088/Src/bmi08g.c **** 			/* delay 30 ms after writing reset value to its register */
 896              		.loc 1 254 3 is_stmt 1 view .LVU247
 254:BMI088/Src/bmi08g.c **** 			/* delay 30 ms after writing reset value to its register */
 897              		.loc 1 254 6 is_stmt 0 view .LVU248
 898 0028 0546     		mov	r5, r0
 899 002a 0028     		cmp	r0, #0
 900 002c EFD1     		bne	.L59
 256:BMI088/Src/bmi08g.c **** 		}
 901              		.loc 1 256 4 is_stmt 1 view .LVU249
 256:BMI088/Src/bmi08g.c **** 		}
 902              		.loc 1 256 7 is_stmt 0 view .LVU250
 903 002e 236A     		ldr	r3, [r4, #32]
 256:BMI088/Src/bmi08g.c **** 		}
 904              		.loc 1 256 4 view .LVU251
 905 0030 1E20     		movs	r0, #30
 906              	.LVL97:
 256:BMI088/Src/bmi08g.c **** 		}
 907              		.loc 1 256 4 view .LVU252
 908 0032 9847     		blx	r3
 909              	.LVL98:
 910 0034 EBE7     		b	.L59
 911              		.cfi_endproc
 912              	.LFE3:
 914              		.section	.text.bmi08g_get_meas_conf,"ax",%progbits
 915              		.align	1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 33


 916              		.global	bmi08g_get_meas_conf
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 921              	bmi08g_get_meas_conf:
 922              	.LVL99:
 923              	.LFB4:
 268:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 924              		.loc 1 268 1 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 8
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 268:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 928              		.loc 1 268 1 is_stmt 0 view .LVU254
 929 0000 10B5     		push	{r4, lr}
 930              	.LCFI24:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 4, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              	.LCFI25:
 936              		.cfi_def_cfa_offset 16
 937 0004 0446     		mov	r4, r0
 269:BMI088/Src/bmi08g.c **** 	uint8_t data[2];
 938              		.loc 1 269 2 is_stmt 1 view .LVU255
 270:BMI088/Src/bmi08g.c **** 
 939              		.loc 1 270 2 view .LVU256
 273:BMI088/Src/bmi08g.c **** 
 940              		.loc 1 273 2 view .LVU257
 273:BMI088/Src/bmi08g.c **** 
 941              		.loc 1 273 9 is_stmt 0 view .LVU258
 942 0006 FFF7FEFF 		bl	null_ptr_check
 943              	.LVL100:
 276:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_RANGE_REG, data, 2, dev);
 944              		.loc 1 276 2 is_stmt 1 view .LVU259
 276:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_RANGE_REG, data, 2, dev);
 945              		.loc 1 276 5 is_stmt 0 view .LVU260
 946 000a 08B1     		cbz	r0, .L65
 947              	.L63:
 948              	.LVL101:
 286:BMI088/Src/bmi08g.c **** }
 949              		.loc 1 286 2 is_stmt 1 view .LVU261
 287:BMI088/Src/bmi08g.c **** 
 950              		.loc 1 287 1 is_stmt 0 view .LVU262
 951 000c 02B0     		add	sp, sp, #8
 952              	.LCFI26:
 953              		.cfi_remember_state
 954              		.cfi_def_cfa_offset 8
 955              		@ sp needed
 956 000e 10BD     		pop	{r4, pc}
 957              	.LVL102:
 958              	.L65:
 959              	.LCFI27:
 960              		.cfi_restore_state
 277:BMI088/Src/bmi08g.c **** 
 961              		.loc 1 277 3 is_stmt 1 view .LVU263
 277:BMI088/Src/bmi08g.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 34


 962              		.loc 1 277 10 is_stmt 0 view .LVU264
 963 0010 2346     		mov	r3, r4
 964 0012 0222     		movs	r2, #2
 965 0014 01A9     		add	r1, sp, #4
 966 0016 0F20     		movs	r0, #15
 967 0018 FFF7FEFF 		bl	get_regs
 968              	.LVL103:
 279:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.range = data[0];
 969              		.loc 1 279 3 is_stmt 1 view .LVU265
 279:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.range = data[0];
 970              		.loc 1 279 6 is_stmt 0 view .LVU266
 971 001c 0028     		cmp	r0, #0
 972 001e F5D1     		bne	.L63
 280:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.odr = (data[1] & BMI08X_GYRO_BW_MASK);
 973              		.loc 1 280 4 is_stmt 1 view .LVU267
 280:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.odr = (data[1] & BMI08X_GYRO_BW_MASK);
 974              		.loc 1 280 30 is_stmt 0 view .LVU268
 975 0020 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 280:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.odr = (data[1] & BMI08X_GYRO_BW_MASK);
 976              		.loc 1 280 24 view .LVU269
 977 0024 E372     		strb	r3, [r4, #11]
 281:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.bw = dev->gyro_cfg.odr;
 978              		.loc 1 281 4 is_stmt 1 view .LVU270
 281:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.bw = dev->gyro_cfg.odr;
 979              		.loc 1 281 29 is_stmt 0 view .LVU271
 980 0026 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 281:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.bw = dev->gyro_cfg.odr;
 981              		.loc 1 281 33 view .LVU272
 982 002a 03F00F03 		and	r3, r3, #15
 281:BMI088/Src/bmi08g.c **** 			dev->gyro_cfg.bw = dev->gyro_cfg.odr;
 983              		.loc 1 281 22 view .LVU273
 984 002e 6373     		strb	r3, [r4, #13]
 282:BMI088/Src/bmi08g.c **** 		}
 985              		.loc 1 282 4 is_stmt 1 view .LVU274
 282:BMI088/Src/bmi08g.c **** 		}
 986              		.loc 1 282 21 is_stmt 0 view .LVU275
 987 0030 2373     		strb	r3, [r4, #12]
 988 0032 EBE7     		b	.L63
 989              		.cfi_endproc
 990              	.LFE4:
 992              		.section	.text.bmi08g_set_meas_conf,"ax",%progbits
 993              		.align	1
 994              		.global	bmi08g_set_meas_conf
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 999              	bmi08g_set_meas_conf:
 1000              	.LVL104:
 1001              	.LFB5:
 294:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1002              		.loc 1 294 1 is_stmt 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 294:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1006              		.loc 1 294 1 is_stmt 0 view .LVU277
 1007 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 35


 1008              	.LCFI28:
 1009              		.cfi_def_cfa_offset 16
 1010              		.cfi_offset 4, -16
 1011              		.cfi_offset 5, -12
 1012              		.cfi_offset 6, -8
 1013              		.cfi_offset 14, -4
 1014 0002 82B0     		sub	sp, sp, #8
 1015              	.LCFI29:
 1016              		.cfi_def_cfa_offset 24
 1017 0004 0446     		mov	r4, r0
 295:BMI088/Src/bmi08g.c **** 	uint8_t data;
 1018              		.loc 1 295 2 is_stmt 1 view .LVU278
 296:BMI088/Src/bmi08g.c **** 	uint8_t odr, range;
 1019              		.loc 1 296 2 view .LVU279
 297:BMI088/Src/bmi08g.c **** 	uint8_t is_range_invalid = FALSE, is_odr_invalid = FALSE;
 1020              		.loc 1 297 2 view .LVU280
 298:BMI088/Src/bmi08g.c **** 
 1021              		.loc 1 298 2 view .LVU281
 1022              	.LVL105:
 301:BMI088/Src/bmi08g.c **** 
 1023              		.loc 1 301 2 view .LVU282
 301:BMI088/Src/bmi08g.c **** 
 1024              		.loc 1 301 9 is_stmt 0 view .LVU283
 1025 0006 FFF7FEFF 		bl	null_ptr_check
 1026              	.LVL106:
 304:BMI088/Src/bmi08g.c **** 		odr = dev->gyro_cfg.odr;
 1027              		.loc 1 304 2 is_stmt 1 view .LVU284
 304:BMI088/Src/bmi08g.c **** 		odr = dev->gyro_cfg.odr;
 1028              		.loc 1 304 5 is_stmt 0 view .LVU285
 1029 000a A0B9     		cbnz	r0, .L67
 1030 000c 0346     		mov	r3, r0
 305:BMI088/Src/bmi08g.c **** 		range = dev->gyro_cfg.range;
 1031              		.loc 1 305 3 is_stmt 1 view .LVU286
 305:BMI088/Src/bmi08g.c **** 		range = dev->gyro_cfg.range;
 1032              		.loc 1 305 7 is_stmt 0 view .LVU287
 1033 000e 657B     		ldrb	r5, [r4, #13]	@ zero_extendqisi2
 1034              	.LVL107:
 306:BMI088/Src/bmi08g.c **** 
 1035              		.loc 1 306 3 is_stmt 1 view .LVU288
 306:BMI088/Src/bmi08g.c **** 
 1036              		.loc 1 306 9 is_stmt 0 view .LVU289
 1037 0010 E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
 1038              	.LVL108:
 308:BMI088/Src/bmi08g.c **** 			/* Updating the status */
 1039              		.loc 1 308 3 is_stmt 1 view .LVU290
 308:BMI088/Src/bmi08g.c **** 			/* Updating the status */
 1040              		.loc 1 308 6 is_stmt 0 view .LVU291
 1041 0012 072D     		cmp	r5, #7
 1042 0014 00D9     		bls	.L68
 310:BMI088/Src/bmi08g.c **** 		}
 1043              		.loc 1 310 19 view .LVU292
 1044 0016 0123     		movs	r3, #1
 1045              	.L68:
 1046              	.LVL109:
 313:BMI088/Src/bmi08g.c **** 			/* Updating the status */
 1047              		.loc 1 313 3 is_stmt 1 view .LVU293
 313:BMI088/Src/bmi08g.c **** 			/* Updating the status */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 36


 1048              		.loc 1 313 6 is_stmt 0 view .LVU294
 1049 0018 042E     		cmp	r6, #4
 1050 001a 0ED8     		bhi	.L71
 298:BMI088/Src/bmi08g.c **** 
 1051              		.loc 1 298 10 view .LVU295
 1052 001c 0022     		movs	r2, #0
 1053              	.L69:
 1054              	.LVL110:
 319:BMI088/Src/bmi08g.c **** 			/* Read range value from the range register */
 1055              		.loc 1 319 3 is_stmt 1 view .LVU296
 319:BMI088/Src/bmi08g.c **** 			/* Read range value from the range register */
 1056              		.loc 1 319 6 is_stmt 0 view .LVU297
 1057 001e 002B     		cmp	r3, #0
 1058 0020 3BD1     		bne	.L72
 319:BMI088/Src/bmi08g.c **** 			/* Read range value from the range register */
 1059              		.loc 1 319 25 discriminator 1 view .LVU298
 1060 0022 002A     		cmp	r2, #0
 1061 0024 3CD1     		bne	.L73
 321:BMI088/Src/bmi08g.c **** 
 1062              		.loc 1 321 4 is_stmt 1 view .LVU299
 321:BMI088/Src/bmi08g.c **** 
 1063              		.loc 1 321 11 is_stmt 0 view .LVU300
 1064 0026 2346     		mov	r3, r4
 1065              	.LVL111:
 321:BMI088/Src/bmi08g.c **** 
 1066              		.loc 1 321 11 view .LVU301
 1067 0028 0122     		movs	r2, #1
 1068              	.LVL112:
 321:BMI088/Src/bmi08g.c **** 
 1069              		.loc 1 321 11 view .LVU302
 1070 002a 0DF10701 		add	r1, sp, #7
 1071 002e 1020     		movs	r0, #16
 1072              	.LVL113:
 321:BMI088/Src/bmi08g.c **** 
 1073              		.loc 1 321 11 view .LVU303
 1074 0030 FFF7FEFF 		bl	get_regs
 1075              	.LVL114:
 323:BMI088/Src/bmi08g.c **** 				data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_BW, odr);
 1076              		.loc 1 323 4 is_stmt 1 view .LVU304
 323:BMI088/Src/bmi08g.c **** 				data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_BW, odr);
 1077              		.loc 1 323 7 is_stmt 0 view .LVU305
 1078 0034 18B1     		cbz	r0, .L75
 1079              	.LVL115:
 1080              	.L67:
 346:BMI088/Src/bmi08g.c **** }
 1081              		.loc 1 346 2 is_stmt 1 view .LVU306
 347:BMI088/Src/bmi08g.c **** 
 1082              		.loc 1 347 1 is_stmt 0 view .LVU307
 1083 0036 02B0     		add	sp, sp, #8
 1084              	.LCFI30:
 1085              		.cfi_remember_state
 1086              		.cfi_def_cfa_offset 16
 1087              		@ sp needed
 1088 0038 70BD     		pop	{r4, r5, r6, pc}
 1089              	.LVL116:
 1090              	.L71:
 1091              	.LCFI31:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 37


 1092              		.cfi_restore_state
 315:BMI088/Src/bmi08g.c **** 		}
 1093              		.loc 1 315 21 view .LVU308
 1094 003a 0122     		movs	r2, #1
 1095 003c EFE7     		b	.L69
 1096              	.LVL117:
 1097              	.L75:
 324:BMI088/Src/bmi08g.c **** 				/* Write odr value to odr register */
 1098              		.loc 1 324 5 is_stmt 1 view .LVU309
 324:BMI088/Src/bmi08g.c **** 				/* Write odr value to odr register */
 1099              		.loc 1 324 12 is_stmt 0 view .LVU310
 1100 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1101 0042 23F00F03 		bic	r3, r3, #15
 1102 0046 5BB2     		sxtb	r3, r3
 1103 0048 05F00F05 		and	r5, r5, #15
 1104              	.LVL118:
 324:BMI088/Src/bmi08g.c **** 				/* Write odr value to odr register */
 1105              		.loc 1 324 12 view .LVU311
 1106 004c 1D43     		orrs	r5, r5, r3
 324:BMI088/Src/bmi08g.c **** 				/* Write odr value to odr register */
 1107              		.loc 1 324 10 view .LVU312
 1108 004e 8DF80750 		strb	r5, [sp, #7]
 326:BMI088/Src/bmi08g.c **** 
 1109              		.loc 1 326 5 is_stmt 1 view .LVU313
 326:BMI088/Src/bmi08g.c **** 
 1110              		.loc 1 326 12 is_stmt 0 view .LVU314
 1111 0052 2346     		mov	r3, r4
 1112 0054 0122     		movs	r2, #1
 1113 0056 0DF10701 		add	r1, sp, #7
 1114 005a 1020     		movs	r0, #16
 1115              	.LVL119:
 326:BMI088/Src/bmi08g.c **** 
 1116              		.loc 1 326 12 view .LVU315
 1117 005c FFF7FEFF 		bl	set_regs
 1118              	.LVL120:
 328:BMI088/Src/bmi08g.c **** 					/* Read range value from the range register */
 1119              		.loc 1 328 5 is_stmt 1 view .LVU316
 328:BMI088/Src/bmi08g.c **** 					/* Read range value from the range register */
 1120              		.loc 1 328 8 is_stmt 0 view .LVU317
 1121 0060 0028     		cmp	r0, #0
 1122 0062 E8D1     		bne	.L67
 330:BMI088/Src/bmi08g.c **** 
 1123              		.loc 1 330 6 is_stmt 1 view .LVU318
 330:BMI088/Src/bmi08g.c **** 
 1124              		.loc 1 330 13 is_stmt 0 view .LVU319
 1125 0064 2346     		mov	r3, r4
 1126 0066 0122     		movs	r2, #1
 1127 0068 0DF10701 		add	r1, sp, #7
 1128 006c 0F20     		movs	r0, #15
 1129              	.LVL121:
 330:BMI088/Src/bmi08g.c **** 
 1130              		.loc 1 330 13 view .LVU320
 1131 006e FFF7FEFF 		bl	get_regs
 1132              	.LVL122:
 332:BMI088/Src/bmi08g.c **** 						data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_RANGE, range);
 1133              		.loc 1 332 6 is_stmt 1 view .LVU321
 332:BMI088/Src/bmi08g.c **** 						data = BMI08X_SET_BITS_POS_0(data, BMI08X_GYRO_RANGE, range);
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 38


 1134              		.loc 1 332 9 is_stmt 0 view .LVU322
 1135 0072 0028     		cmp	r0, #0
 1136 0074 DFD1     		bne	.L67
 333:BMI088/Src/bmi08g.c **** 						/* Write range value to range register */
 1137              		.loc 1 333 7 is_stmt 1 view .LVU323
 333:BMI088/Src/bmi08g.c **** 						/* Write range value to range register */
 1138              		.loc 1 333 14 is_stmt 0 view .LVU324
 1139 0076 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1140 007a 23F00703 		bic	r3, r3, #7
 1141 007e 5BB2     		sxtb	r3, r3
 1142 0080 06F00706 		and	r6, r6, #7
 1143              	.LVL123:
 333:BMI088/Src/bmi08g.c **** 						/* Write range value to range register */
 1144              		.loc 1 333 14 view .LVU325
 1145 0084 1E43     		orrs	r6, r6, r3
 333:BMI088/Src/bmi08g.c **** 						/* Write range value to range register */
 1146              		.loc 1 333 12 view .LVU326
 1147 0086 8DF80760 		strb	r6, [sp, #7]
 335:BMI088/Src/bmi08g.c **** 					}
 1148              		.loc 1 335 7 is_stmt 1 view .LVU327
 335:BMI088/Src/bmi08g.c **** 					}
 1149              		.loc 1 335 14 is_stmt 0 view .LVU328
 1150 008a 2346     		mov	r3, r4
 1151 008c 0122     		movs	r2, #1
 1152 008e 0DF10701 		add	r1, sp, #7
 1153 0092 0F20     		movs	r0, #15
 1154              	.LVL124:
 335:BMI088/Src/bmi08g.c **** 					}
 1155              		.loc 1 335 14 view .LVU329
 1156 0094 FFF7FEFF 		bl	set_regs
 1157              	.LVL125:
 335:BMI088/Src/bmi08g.c **** 					}
 1158              		.loc 1 335 14 view .LVU330
 1159 0098 CDE7     		b	.L67
 1160              	.LVL126:
 1161              	.L72:
 342:BMI088/Src/bmi08g.c **** 		}
 1162              		.loc 1 342 9 view .LVU331
 1163 009a 6FF00700 		mvn	r0, #7
 1164              	.LVL127:
 342:BMI088/Src/bmi08g.c **** 		}
 1165              		.loc 1 342 9 view .LVU332
 1166 009e CAE7     		b	.L67
 1167              	.LVL128:
 1168              	.L73:
 342:BMI088/Src/bmi08g.c **** 		}
 1169              		.loc 1 342 9 view .LVU333
 1170 00a0 6FF00700 		mvn	r0, #7
 1171              	.LVL129:
 342:BMI088/Src/bmi08g.c **** 		}
 1172              		.loc 1 342 9 view .LVU334
 1173 00a4 C7E7     		b	.L67
 1174              		.cfi_endproc
 1175              	.LFE5:
 1177              		.section	.text.bmi08g_get_power_mode,"ax",%progbits
 1178              		.align	1
 1179              		.global	bmi08g_get_power_mode
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 39


 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1184              	bmi08g_get_power_mode:
 1185              	.LVL130:
 1186              	.LFB6:
 356:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1187              		.loc 1 356 1 is_stmt 1 view -0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 8
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 356:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1191              		.loc 1 356 1 is_stmt 0 view .LVU336
 1192 0000 10B5     		push	{r4, lr}
 1193              	.LCFI32:
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 4, -8
 1196              		.cfi_offset 14, -4
 1197 0002 82B0     		sub	sp, sp, #8
 1198              	.LCFI33:
 1199              		.cfi_def_cfa_offset 16
 1200 0004 0446     		mov	r4, r0
 357:BMI088/Src/bmi08g.c **** 	uint8_t data;
 1201              		.loc 1 357 2 is_stmt 1 view .LVU337
 358:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 1202              		.loc 1 358 2 view .LVU338
 360:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 1203              		.loc 1 360 2 view .LVU339
 360:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 1204              		.loc 1 360 9 is_stmt 0 view .LVU340
 1205 0006 FFF7FEFF 		bl	null_ptr_check
 1206              	.LVL131:
 362:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_LPM1_REG, &data, 1, dev);
 1207              		.loc 1 362 2 is_stmt 1 view .LVU341
 362:BMI088/Src/bmi08g.c **** 		rslt = get_regs(BMI08X_GYRO_LPM1_REG, &data, 1, dev);
 1208              		.loc 1 362 5 is_stmt 0 view .LVU342
 1209 000a 08B1     		cbz	r0, .L79
 1210              	.L77:
 1211              	.LVL132:
 371:BMI088/Src/bmi08g.c **** }
 1212              		.loc 1 371 2 is_stmt 1 view .LVU343
 372:BMI088/Src/bmi08g.c **** 
 1213              		.loc 1 372 1 is_stmt 0 view .LVU344
 1214 000c 02B0     		add	sp, sp, #8
 1215              	.LCFI34:
 1216              		.cfi_remember_state
 1217              		.cfi_def_cfa_offset 8
 1218              		@ sp needed
 1219 000e 10BD     		pop	{r4, pc}
 1220              	.LVL133:
 1221              	.L79:
 1222              	.LCFI35:
 1223              		.cfi_restore_state
 363:BMI088/Src/bmi08g.c **** 
 1224              		.loc 1 363 3 is_stmt 1 view .LVU345
 363:BMI088/Src/bmi08g.c **** 
 1225              		.loc 1 363 10 is_stmt 0 view .LVU346
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 40


 1226 0010 2346     		mov	r3, r4
 1227 0012 0122     		movs	r2, #1
 1228 0014 0DF10701 		add	r1, sp, #7
 1229 0018 1120     		movs	r0, #17
 1230 001a FFF7FEFF 		bl	get_regs
 1231              	.LVL134:
 365:BMI088/Src/bmi08g.c **** 			/* Updating the power mode in the dev structure */
 1232              		.loc 1 365 3 is_stmt 1 view .LVU347
 365:BMI088/Src/bmi08g.c **** 			/* Updating the power mode in the dev structure */
 1233              		.loc 1 365 6 is_stmt 0 view .LVU348
 1234 001e 0028     		cmp	r0, #0
 1235 0020 F4D1     		bne	.L77
 367:BMI088/Src/bmi08g.c **** 		}
 1236              		.loc 1 367 4 is_stmt 1 view .LVU349
 367:BMI088/Src/bmi08g.c **** 		}
 1237              		.loc 1 367 24 is_stmt 0 view .LVU350
 1238 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1239 0026 A372     		strb	r3, [r4, #10]
 1240 0028 F0E7     		b	.L77
 1241              		.cfi_endproc
 1242              	.LFE6:
 1244              		.section	.text.bmi08g_set_power_mode,"ax",%progbits
 1245              		.align	1
 1246              		.global	bmi08g_set_power_mode
 1247              		.syntax unified
 1248              		.thumb
 1249              		.thumb_func
 1251              	bmi08g_set_power_mode:
 1252              	.LVL135:
 1253              	.LFB7:
 378:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1254              		.loc 1 378 1 is_stmt 1 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 8
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 378:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1258              		.loc 1 378 1 is_stmt 0 view .LVU352
 1259 0000 30B5     		push	{r4, r5, lr}
 1260              	.LCFI36:
 1261              		.cfi_def_cfa_offset 12
 1262              		.cfi_offset 4, -12
 1263              		.cfi_offset 5, -8
 1264              		.cfi_offset 14, -4
 1265 0002 83B0     		sub	sp, sp, #12
 1266              	.LCFI37:
 1267              		.cfi_def_cfa_offset 24
 1268 0004 0546     		mov	r5, r0
 379:BMI088/Src/bmi08g.c **** 	uint8_t power_mode, data;
 1269              		.loc 1 379 2 is_stmt 1 view .LVU353
 380:BMI088/Src/bmi08g.c **** 	uint8_t is_power_switching_mode_valid = TRUE;
 1270              		.loc 1 380 2 view .LVU354
 381:BMI088/Src/bmi08g.c **** 
 1271              		.loc 1 381 2 view .LVU355
 1272              	.LVL136:
 384:BMI088/Src/bmi08g.c **** 
 1273              		.loc 1 384 2 view .LVU356
 384:BMI088/Src/bmi08g.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 41


 1274              		.loc 1 384 9 is_stmt 0 view .LVU357
 1275 0006 FFF7FEFF 		bl	null_ptr_check
 1276              	.LVL137:
 387:BMI088/Src/bmi08g.c **** 		/*read the previous power state*/
 1277              		.loc 1 387 2 is_stmt 1 view .LVU358
 387:BMI088/Src/bmi08g.c **** 		/*read the previous power state*/
 1278              		.loc 1 387 5 is_stmt 0 view .LVU359
 1279 000a 0446     		mov	r4, r0
 1280 000c 10B1     		cbz	r0, .L89
 1281              	.LVL138:
 1282              	.L81:
 422:BMI088/Src/bmi08g.c **** }
 1283              		.loc 1 422 2 is_stmt 1 view .LVU360
 423:BMI088/Src/bmi08g.c **** 
 1284              		.loc 1 423 1 is_stmt 0 view .LVU361
 1285 000e 2046     		mov	r0, r4
 1286 0010 03B0     		add	sp, sp, #12
 1287              	.LCFI38:
 1288              		.cfi_remember_state
 1289              		.cfi_def_cfa_offset 12
 1290              		@ sp needed
 1291 0012 30BD     		pop	{r4, r5, pc}
 1292              	.LVL139:
 1293              	.L89:
 1294              	.LCFI39:
 1295              		.cfi_restore_state
 389:BMI088/Src/bmi08g.c **** 
 1296              		.loc 1 389 3 is_stmt 1 view .LVU362
 389:BMI088/Src/bmi08g.c **** 
 1297              		.loc 1 389 10 is_stmt 0 view .LVU363
 1298 0014 2B46     		mov	r3, r5
 1299 0016 0122     		movs	r2, #1
 1300 0018 0DF10601 		add	r1, sp, #6
 1301 001c 1120     		movs	r0, #17
 1302              	.LVL140:
 389:BMI088/Src/bmi08g.c **** 
 1303              		.loc 1 389 10 view .LVU364
 1304 001e FFF7FEFF 		bl	get_regs
 1305              	.LVL141:
 391:BMI088/Src/bmi08g.c **** 			power_mode = dev->gyro_cfg.power;
 1306              		.loc 1 391 3 is_stmt 1 view .LVU365
 391:BMI088/Src/bmi08g.c **** 			power_mode = dev->gyro_cfg.power;
 1307              		.loc 1 391 6 is_stmt 0 view .LVU366
 1308 0022 0446     		mov	r4, r0
 1309 0024 0028     		cmp	r0, #0
 1310 0026 F2D1     		bne	.L81
 392:BMI088/Src/bmi08g.c **** 			/*switching between normal mode and the suspend modes is allowed, it is not possible to switch
 1311              		.loc 1 392 4 is_stmt 1 view .LVU367
 392:BMI088/Src/bmi08g.c **** 			/*switching between normal mode and the suspend modes is allowed, it is not possible to switch
 1312              		.loc 1 392 30 is_stmt 0 view .LVU368
 1313 0028 AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 392:BMI088/Src/bmi08g.c **** 			/*switching between normal mode and the suspend modes is allowed, it is not possible to switch
 1314              		.loc 1 392 15 view .LVU369
 1315 002a 8DF80730 		strb	r3, [sp, #7]
 396:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 1316              		.loc 1 396 4 is_stmt 1 view .LVU370
 396:BMI088/Src/bmi08g.c **** 				/* Updating the status */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 42


 1317              		.loc 1 396 7 is_stmt 0 view .LVU371
 1318 002e 802B     		cmp	r3, #128
 1319 0030 11D0     		beq	.L90
 381:BMI088/Src/bmi08g.c **** 
 1320              		.loc 1 381 10 view .LVU372
 1321 0032 0122     		movs	r2, #1
 1322              	.L82:
 1323              	.LVL142:
 401:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 1324              		.loc 1 401 4 is_stmt 1 view .LVU373
 401:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 1325              		.loc 1 401 7 is_stmt 0 view .LVU374
 1326 0034 202B     		cmp	r3, #32
 1327 0036 16D0     		beq	.L91
 1328              	.L83:
 406:BMI088/Src/bmi08g.c **** 				/* Write power to power register */
 1329              		.loc 1 406 4 is_stmt 1 view .LVU375
 406:BMI088/Src/bmi08g.c **** 				/* Write power to power register */
 1330              		.loc 1 406 7 is_stmt 0 view .LVU376
 1331 0038 E2B1     		cbz	r2, .L87
 408:BMI088/Src/bmi08g.c **** 
 1332              		.loc 1 408 5 is_stmt 1 view .LVU377
 408:BMI088/Src/bmi08g.c **** 
 1333              		.loc 1 408 12 is_stmt 0 view .LVU378
 1334 003a 2B46     		mov	r3, r5
 1335 003c 0122     		movs	r2, #1
 1336              	.LVL143:
 408:BMI088/Src/bmi08g.c **** 
 1337              		.loc 1 408 12 view .LVU379
 1338 003e 0DF10701 		add	r1, sp, #7
 1339 0042 1120     		movs	r0, #17
 1340              	.LVL144:
 408:BMI088/Src/bmi08g.c **** 
 1341              		.loc 1 408 12 view .LVU380
 1342 0044 FFF7FEFF 		bl	set_regs
 1343              	.LVL145:
 410:BMI088/Src/bmi08g.c **** 					/* Time required to switch the power mode */
 1344              		.loc 1 410 5 is_stmt 1 view .LVU381
 410:BMI088/Src/bmi08g.c **** 					/* Time required to switch the power mode */
 1345              		.loc 1 410 8 is_stmt 0 view .LVU382
 1346 0048 0446     		mov	r4, r0
 1347 004a 0028     		cmp	r0, #0
 1348 004c DFD1     		bne	.L81
 412:BMI088/Src/bmi08g.c **** 				}
 1349              		.loc 1 412 6 is_stmt 1 view .LVU383
 412:BMI088/Src/bmi08g.c **** 				}
 1350              		.loc 1 412 9 is_stmt 0 view .LVU384
 1351 004e 2B6A     		ldr	r3, [r5, #32]
 412:BMI088/Src/bmi08g.c **** 				}
 1352              		.loc 1 412 6 view .LVU385
 1353 0050 1E20     		movs	r0, #30
 1354              	.LVL146:
 412:BMI088/Src/bmi08g.c **** 				}
 1355              		.loc 1 412 6 view .LVU386
 1356 0052 9847     		blx	r3
 1357              	.LVL147:
 1358 0054 DBE7     		b	.L81
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 43


 1359              	.LVL148:
 1360              	.L90:
 396:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 1361              		.loc 1 396 56 discriminator 1 view .LVU387
 1362 0056 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 396:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 1363              		.loc 1 396 47 discriminator 1 view .LVU388
 1364 005a 202A     		cmp	r2, #32
 1365 005c 01D0     		beq	.L85
 381:BMI088/Src/bmi08g.c **** 
 1366              		.loc 1 381 10 view .LVU389
 1367 005e 0122     		movs	r2, #1
 1368 0060 E8E7     		b	.L82
 1369              	.L85:
 398:BMI088/Src/bmi08g.c **** 			}
 1370              		.loc 1 398 35 view .LVU390
 1371 0062 0022     		movs	r2, #0
 1372 0064 E6E7     		b	.L82
 1373              	.LVL149:
 1374              	.L91:
 401:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 1375              		.loc 1 401 61 discriminator 1 view .LVU391
 1376 0066 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 401:BMI088/Src/bmi08g.c **** 				/* Updating the status */
 1377              		.loc 1 401 52 discriminator 1 view .LVU392
 1378 006a 802B     		cmp	r3, #128
 1379 006c E4D1     		bne	.L83
 417:BMI088/Src/bmi08g.c **** 			}
 1380              		.loc 1 417 10 view .LVU393
 1381 006e 6FF00404 		mvn	r4, #4
 1382 0072 CCE7     		b	.L81
 1383              	.L87:
 417:BMI088/Src/bmi08g.c **** 			}
 1384              		.loc 1 417 10 view .LVU394
 1385 0074 6FF00404 		mvn	r4, #4
 1386 0078 C9E7     		b	.L81
 1387              		.cfi_endproc
 1388              	.LFE7:
 1390              		.section	.text.bmi08g_get_data,"ax",%progbits
 1391              		.align	1
 1392              		.global	bmi08g_get_data
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1397              	bmi08g_get_data:
 1398              	.LVL150:
 1399              	.LFB8:
 431:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1400              		.loc 1 431 1 is_stmt 1 view -0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 8
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 431:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1404              		.loc 1 431 1 is_stmt 0 view .LVU396
 1405 0000 30B5     		push	{r4, r5, lr}
 1406              	.LCFI40:
 1407              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 44


 1408              		.cfi_offset 4, -12
 1409              		.cfi_offset 5, -8
 1410              		.cfi_offset 14, -4
 1411 0002 83B0     		sub	sp, sp, #12
 1412              	.LCFI41:
 1413              		.cfi_def_cfa_offset 24
 1414 0004 0446     		mov	r4, r0
 1415 0006 0D46     		mov	r5, r1
 432:BMI088/Src/bmi08g.c **** 	uint8_t data[6];
 1416              		.loc 1 432 2 is_stmt 1 view .LVU397
 433:BMI088/Src/bmi08g.c **** 	uint8_t lsb, msb;
 1417              		.loc 1 433 2 view .LVU398
 434:BMI088/Src/bmi08g.c **** 	uint16_t msblsb;
 1418              		.loc 1 434 2 view .LVU399
 435:BMI088/Src/bmi08g.c **** 
 1419              		.loc 1 435 2 view .LVU400
 438:BMI088/Src/bmi08g.c **** 
 1420              		.loc 1 438 2 view .LVU401
 438:BMI088/Src/bmi08g.c **** 
 1421              		.loc 1 438 9 is_stmt 0 view .LVU402
 1422 0008 0846     		mov	r0, r1
 1423              	.LVL151:
 438:BMI088/Src/bmi08g.c **** 
 1424              		.loc 1 438 9 view .LVU403
 1425 000a FFF7FEFF 		bl	null_ptr_check
 1426              	.LVL152:
 441:BMI088/Src/bmi08g.c **** 		/* read gyro sensor data */
 1427              		.loc 1 441 2 is_stmt 1 view .LVU404
 441:BMI088/Src/bmi08g.c **** 		/* read gyro sensor data */
 1428              		.loc 1 441 5 is_stmt 0 view .LVU405
 1429 000e 08BB     		cbnz	r0, .L94
 441:BMI088/Src/bmi08g.c **** 		/* read gyro sensor data */
 1430              		.loc 1 441 26 discriminator 1 view .LVU406
 1431 0010 1CB3     		cbz	r4, .L95
 443:BMI088/Src/bmi08g.c **** 
 1432              		.loc 1 443 3 is_stmt 1 view .LVU407
 443:BMI088/Src/bmi08g.c **** 
 1433              		.loc 1 443 10 is_stmt 0 view .LVU408
 1434 0012 2B46     		mov	r3, r5
 1435 0014 0622     		movs	r2, #6
 1436 0016 6946     		mov	r1, sp
 1437 0018 0220     		movs	r0, #2
 1438              	.LVL153:
 443:BMI088/Src/bmi08g.c **** 
 1439              		.loc 1 443 10 view .LVU409
 1440 001a FFF7FEFF 		bl	get_regs
 1441              	.LVL154:
 445:BMI088/Src/bmi08g.c **** 			lsb = data[0];
 1442              		.loc 1 445 3 is_stmt 1 view .LVU410
 445:BMI088/Src/bmi08g.c **** 			lsb = data[0];
 1443              		.loc 1 445 6 is_stmt 0 view .LVU411
 1444 001e B8B9     		cbnz	r0, .L93
 446:BMI088/Src/bmi08g.c **** 			msb = data[1];
 1445              		.loc 1 446 4 is_stmt 1 view .LVU412
 446:BMI088/Src/bmi08g.c **** 			msb = data[1];
 1446              		.loc 1 446 8 is_stmt 0 view .LVU413
 1447 0020 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 45


 1448              	.LVL155:
 447:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 1449              		.loc 1 447 4 is_stmt 1 view .LVU414
 447:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 1450              		.loc 1 447 8 is_stmt 0 view .LVU415
 1451 0024 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2
 1452              	.LVL156:
 448:BMI088/Src/bmi08g.c **** 			gyro->x = (int16_t)msblsb; /* Data in X axis */
 1453              		.loc 1 448 4 is_stmt 1 view .LVU416
 448:BMI088/Src/bmi08g.c **** 			gyro->x = (int16_t)msblsb; /* Data in X axis */
 1454              		.loc 1 448 24 is_stmt 0 view .LVU417
 1455 0028 43EA0223 		orr	r3, r3, r2, lsl #8
 1456              	.LVL157:
 448:BMI088/Src/bmi08g.c **** 			gyro->x = (int16_t)msblsb; /* Data in X axis */
 1457              		.loc 1 448 24 view .LVU418
 1458 002c 1BB2     		sxth	r3, r3
 1459              	.LVL158:
 449:BMI088/Src/bmi08g.c **** 
 1460              		.loc 1 449 4 is_stmt 1 view .LVU419
 449:BMI088/Src/bmi08g.c **** 
 1461              		.loc 1 449 12 is_stmt 0 view .LVU420
 1462 002e 2360     		str	r3, [r4]
 1463              	.LVL159:
 451:BMI088/Src/bmi08g.c **** 			msb = data[3];
 1464              		.loc 1 451 4 is_stmt 1 view .LVU421
 451:BMI088/Src/bmi08g.c **** 			msb = data[3];
 1465              		.loc 1 451 8 is_stmt 0 view .LVU422
 1466 0030 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 1467              	.LVL160:
 452:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 1468              		.loc 1 452 4 is_stmt 1 view .LVU423
 452:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 1469              		.loc 1 452 8 is_stmt 0 view .LVU424
 1470 0034 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 1471              	.LVL161:
 453:BMI088/Src/bmi08g.c **** 			gyro->y = (int16_t)msblsb; /* Data in Y axis */
 1472              		.loc 1 453 4 is_stmt 1 view .LVU425
 453:BMI088/Src/bmi08g.c **** 			gyro->y = (int16_t)msblsb; /* Data in Y axis */
 1473              		.loc 1 453 24 is_stmt 0 view .LVU426
 1474 0038 43EA0223 		orr	r3, r3, r2, lsl #8
 1475              	.LVL162:
 453:BMI088/Src/bmi08g.c **** 			gyro->y = (int16_t)msblsb; /* Data in Y axis */
 1476              		.loc 1 453 24 view .LVU427
 1477 003c 1BB2     		sxth	r3, r3
 1478              	.LVL163:
 454:BMI088/Src/bmi08g.c **** 
 1479              		.loc 1 454 4 is_stmt 1 view .LVU428
 454:BMI088/Src/bmi08g.c **** 
 1480              		.loc 1 454 12 is_stmt 0 view .LVU429
 1481 003e 6360     		str	r3, [r4, #4]
 456:BMI088/Src/bmi08g.c **** 			msb = data[5];
 1482              		.loc 1 456 4 is_stmt 1 view .LVU430
 456:BMI088/Src/bmi08g.c **** 			msb = data[5];
 1483              		.loc 1 456 8 is_stmt 0 view .LVU431
 1484 0040 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1485              	.LVL164:
 457:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 46


 1486              		.loc 1 457 4 is_stmt 1 view .LVU432
 457:BMI088/Src/bmi08g.c **** 			msblsb = (msb << 8) | lsb;
 1487              		.loc 1 457 8 is_stmt 0 view .LVU433
 1488 0044 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 1489              	.LVL165:
 458:BMI088/Src/bmi08g.c **** 			gyro->z = (int16_t)msblsb; /* Data in Z axis */
 1490              		.loc 1 458 4 is_stmt 1 view .LVU434
 458:BMI088/Src/bmi08g.c **** 			gyro->z = (int16_t)msblsb; /* Data in Z axis */
 1491              		.loc 1 458 24 is_stmt 0 view .LVU435
 1492 0048 43EA0223 		orr	r3, r3, r2, lsl #8
 1493              	.LVL166:
 458:BMI088/Src/bmi08g.c **** 			gyro->z = (int16_t)msblsb; /* Data in Z axis */
 1494              		.loc 1 458 24 view .LVU436
 1495 004c 1BB2     		sxth	r3, r3
 1496              	.LVL167:
 459:BMI088/Src/bmi08g.c **** 		}
 1497              		.loc 1 459 4 is_stmt 1 view .LVU437
 459:BMI088/Src/bmi08g.c **** 		}
 1498              		.loc 1 459 12 is_stmt 0 view .LVU438
 1499 004e A360     		str	r3, [r4, #8]
 1500              	.LVL168:
 1501              	.L93:
 466:BMI088/Src/bmi08g.c **** }
 1502              		.loc 1 466 2 is_stmt 1 view .LVU439
 467:BMI088/Src/bmi08g.c **** 
 1503              		.loc 1 467 1 is_stmt 0 view .LVU440
 1504 0050 03B0     		add	sp, sp, #12
 1505              	.LCFI42:
 1506              		.cfi_remember_state
 1507              		.cfi_def_cfa_offset 12
 1508              		@ sp needed
 1509 0052 30BD     		pop	{r4, r5, pc}
 1510              	.LVL169:
 1511              	.L94:
 1512              	.LCFI43:
 1513              		.cfi_restore_state
 463:BMI088/Src/bmi08g.c **** 	}
 1514              		.loc 1 463 8 view .LVU441
 1515 0054 4FF0FF30 		mov	r0, #-1
 1516              	.LVL170:
 463:BMI088/Src/bmi08g.c **** 	}
 1517              		.loc 1 463 8 view .LVU442
 1518 0058 FAE7     		b	.L93
 1519              	.LVL171:
 1520              	.L95:
 463:BMI088/Src/bmi08g.c **** 	}
 1521              		.loc 1 463 8 view .LVU443
 1522 005a 4FF0FF30 		mov	r0, #-1
 1523              	.LVL172:
 463:BMI088/Src/bmi08g.c **** 	}
 1524              		.loc 1 463 8 view .LVU444
 1525 005e F7E7     		b	.L93
 1526              		.cfi_endproc
 1527              	.LFE8:
 1529              		.section	.text.bmi08g_set_int_config,"ax",%progbits
 1530              		.align	1
 1531              		.global	bmi08g_set_int_config
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 47


 1532              		.syntax unified
 1533              		.thumb
 1534              		.thumb_func
 1536              	bmi08g_set_int_config:
 1537              	.LVL173:
 1538              	.LFB9:
 475:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1539              		.loc 1 475 1 is_stmt 1 view -0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 475:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1543              		.loc 1 475 1 is_stmt 0 view .LVU446
 1544 0000 38B5     		push	{r3, r4, r5, lr}
 1545              	.LCFI44:
 1546              		.cfi_def_cfa_offset 16
 1547              		.cfi_offset 3, -16
 1548              		.cfi_offset 4, -12
 1549              		.cfi_offset 5, -8
 1550              		.cfi_offset 14, -4
 1551 0002 0446     		mov	r4, r0
 1552 0004 0D46     		mov	r5, r1
 476:BMI088/Src/bmi08g.c **** 	/* Check for null pointer in the device structure*/
 1553              		.loc 1 476 2 is_stmt 1 view .LVU447
 478:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 1554              		.loc 1 478 2 view .LVU448
 478:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 1555              		.loc 1 478 9 is_stmt 0 view .LVU449
 1556 0006 0846     		mov	r0, r1
 1557              	.LVL174:
 478:BMI088/Src/bmi08g.c **** 	/* Proceed if null check is fine */
 1558              		.loc 1 478 9 view .LVU450
 1559 0008 FFF7FEFF 		bl	null_ptr_check
 1560              	.LVL175:
 480:BMI088/Src/bmi08g.c **** 
 1561              		.loc 1 480 2 is_stmt 1 view .LVU451
 480:BMI088/Src/bmi08g.c **** 
 1562              		.loc 1 480 5 is_stmt 0 view .LVU452
 1563 000c 38B9     		cbnz	r0, .L99
 480:BMI088/Src/bmi08g.c **** 
 1564              		.loc 1 480 26 discriminator 1 view .LVU453
 1565 000e 4CB1     		cbz	r4, .L100
 482:BMI088/Src/bmi08g.c **** 		case BMI08X_GYRO_DATA_RDY_INT: {
 1566              		.loc 1 482 3 is_stmt 1 view .LVU454
 482:BMI088/Src/bmi08g.c **** 		case BMI08X_GYRO_DATA_RDY_INT: {
 1567              		.loc 1 482 21 is_stmt 0 view .LVU455
 1568 0010 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 482:BMI088/Src/bmi08g.c **** 		case BMI08X_GYRO_DATA_RDY_INT: {
 1569              		.loc 1 482 3 view .LVU456
 1570 0012 53B9     		cbnz	r3, .L101
 485:BMI088/Src/bmi08g.c **** 		}
 1571              		.loc 1 485 4 is_stmt 1 view .LVU457
 485:BMI088/Src/bmi08g.c **** 		}
 1572              		.loc 1 485 11 is_stmt 0 view .LVU458
 1573 0014 2946     		mov	r1, r5
 1574 0016 2046     		mov	r0, r4
 1575              	.LVL176:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 48


 485:BMI088/Src/bmi08g.c **** 		}
 1576              		.loc 1 485 11 view .LVU459
 1577 0018 FFF7FEFF 		bl	set_gyro_data_ready_int
 1578              	.LVL177:
 487:BMI088/Src/bmi08g.c **** 
 1579              		.loc 1 487 4 is_stmt 1 view .LVU460
 1580              	.L98:
 498:BMI088/Src/bmi08g.c **** }
 1581              		.loc 1 498 2 view .LVU461
 499:BMI088/Src/bmi08g.c **** /*!
 1582              		.loc 1 499 1 is_stmt 0 view .LVU462
 1583 001c 38BD     		pop	{r3, r4, r5, pc}
 1584              	.LVL178:
 1585              	.L99:
 495:BMI088/Src/bmi08g.c **** 	}
 1586              		.loc 1 495 8 view .LVU463
 1587 001e 4FF0FF30 		mov	r0, #-1
 1588              	.LVL179:
 495:BMI088/Src/bmi08g.c **** 	}
 1589              		.loc 1 495 8 view .LVU464
 1590 0022 FBE7     		b	.L98
 1591              	.LVL180:
 1592              	.L100:
 495:BMI088/Src/bmi08g.c **** 	}
 1593              		.loc 1 495 8 view .LVU465
 1594 0024 4FF0FF30 		mov	r0, #-1
 1595              	.LVL181:
 495:BMI088/Src/bmi08g.c **** 	}
 1596              		.loc 1 495 8 view .LVU466
 1597 0028 F8E7     		b	.L98
 1598              	.LVL182:
 1599              	.L101:
 490:BMI088/Src/bmi08g.c **** 			break;
 1600              		.loc 1 490 9 view .LVU467
 1601 002a 6FF00700 		mvn	r0, #7
 1602              	.LVL183:
 490:BMI088/Src/bmi08g.c **** 			break;
 1603              		.loc 1 490 9 view .LVU468
 1604 002e F5E7     		b	.L98
 1605              		.cfi_endproc
 1606              	.LFE9:
 1608              		.section	.text.bmi08g_perform_selftest,"ax",%progbits
 1609              		.align	1
 1610              		.global	bmi08g_perform_selftest
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1615              	bmi08g_perform_selftest:
 1616              	.LVL184:
 1617              	.LFB10:
 505:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1618              		.loc 1 505 1 is_stmt 1 view -0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 8
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 505:BMI088/Src/bmi08g.c **** 	int8_t rslt;
 1622              		.loc 1 505 1 is_stmt 0 view .LVU470
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 49


 1623 0000 10B5     		push	{r4, lr}
 1624              	.LCFI45:
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
 1628 0002 82B0     		sub	sp, sp, #8
 1629              	.LCFI46:
 1630              		.cfi_def_cfa_offset 16
 1631 0004 0446     		mov	r4, r0
 506:BMI088/Src/bmi08g.c **** 	uint8_t data = 0, loop_break = 1;
 1632              		.loc 1 506 2 is_stmt 1 view .LVU471
 507:BMI088/Src/bmi08g.c **** 
 1633              		.loc 1 507 2 view .LVU472
 507:BMI088/Src/bmi08g.c **** 
 1634              		.loc 1 507 10 is_stmt 0 view .LVU473
 1635 0006 0023     		movs	r3, #0
 1636 0008 8DF80730 		strb	r3, [sp, #7]
 1637              	.LVL185:
 510:BMI088/Src/bmi08g.c **** 
 1638              		.loc 1 510 2 is_stmt 1 view .LVU474
 510:BMI088/Src/bmi08g.c **** 
 1639              		.loc 1 510 9 is_stmt 0 view .LVU475
 1640 000c FFF7FEFF 		bl	null_ptr_check
 1641              	.LVL186:
 513:BMI088/Src/bmi08g.c **** 		/* Enable the gyro self-test */
 1642              		.loc 1 513 2 is_stmt 1 view .LVU476
 513:BMI088/Src/bmi08g.c **** 		/* Enable the gyro self-test */
 1643              		.loc 1 513 5 is_stmt 0 view .LVU477
 1644 0010 0346     		mov	r3, r0
 1645 0012 10B1     		cbz	r0, .L109
 1646              	.LVL187:
 1647              	.L104:
 555:BMI088/Src/bmi08g.c **** }
 1648              		.loc 1 555 2 is_stmt 1 view .LVU478
 556:BMI088/Src/bmi08g.c **** 
 1649              		.loc 1 556 1 is_stmt 0 view .LVU479
 1650 0014 1846     		mov	r0, r3
 1651 0016 02B0     		add	sp, sp, #8
 1652              	.LCFI47:
 1653              		.cfi_remember_state
 1654              		.cfi_def_cfa_offset 8
 1655              		@ sp needed
 1656 0018 10BD     		pop	{r4, pc}
 1657              	.LVL188:
 1658              	.L109:
 1659              	.LCFI48:
 1660              		.cfi_restore_state
 515:BMI088/Src/bmi08g.c **** 
 1661              		.loc 1 515 3 is_stmt 1 view .LVU480
 515:BMI088/Src/bmi08g.c **** 
 1662              		.loc 1 515 10 is_stmt 0 view .LVU481
 1663 001a 2146     		mov	r1, r4
 1664 001c 0120     		movs	r0, #1
 1665              	.LVL189:
 515:BMI088/Src/bmi08g.c **** 
 1666              		.loc 1 515 10 view .LVU482
 1667 001e FFF7FEFF 		bl	set_gyro_selftest
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 50


 1668              	.LVL190:
 517:BMI088/Src/bmi08g.c **** 			/* Loop till self-test ready bit is set */
 1669              		.loc 1 517 3 is_stmt 1 view .LVU483
 517:BMI088/Src/bmi08g.c **** 			/* Loop till self-test ready bit is set */
 1670              		.loc 1 517 6 is_stmt 0 view .LVU484
 1671 0022 0346     		mov	r3, r0
 1672 0024 0028     		cmp	r0, #0
 1673 0026 F5D1     		bne	.L104
 1674              	.L105:
 1675              	.LVL191:
 519:BMI088/Src/bmi08g.c **** 				/* Read self-test register to check if self-test ready bit is set */
 1676              		.loc 1 519 10 is_stmt 1 view .LVU485
 521:BMI088/Src/bmi08g.c **** 
 1677              		.loc 1 521 5 view .LVU486
 521:BMI088/Src/bmi08g.c **** 
 1678              		.loc 1 521 12 is_stmt 0 view .LVU487
 1679 0028 2346     		mov	r3, r4
 1680 002a 0122     		movs	r2, #1
 1681 002c 0DF10701 		add	r1, sp, #7
 1682 0030 3C20     		movs	r0, #60
 1683 0032 FFF7FEFF 		bl	get_regs
 1684              	.LVL192:
 523:BMI088/Src/bmi08g.c **** 					data = BMI08X_GET_BITS(data, BMI08X_GYRO_SELF_TEST_RDY);
 1685              		.loc 1 523 5 is_stmt 1 view .LVU488
 523:BMI088/Src/bmi08g.c **** 					data = BMI08X_GET_BITS(data, BMI08X_GYRO_SELF_TEST_RDY);
 1686              		.loc 1 523 8 is_stmt 0 view .LVU489
 1687 0036 0346     		mov	r3, r0
 1688 0038 38B9     		cbnz	r0, .L106
 524:BMI088/Src/bmi08g.c **** 
 1689              		.loc 1 524 6 is_stmt 1 view .LVU490
 524:BMI088/Src/bmi08g.c **** 
 1690              		.loc 1 524 13 is_stmt 0 view .LVU491
 1691 003a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1692 003e C2F34002 		ubfx	r2, r2, #1, #1
 524:BMI088/Src/bmi08g.c **** 
 1693              		.loc 1 524 11 view .LVU492
 1694 0042 8DF80720 		strb	r2, [sp, #7]
 526:BMI088/Src/bmi08g.c **** 						/* If self-test ready bit is set, exit the loop */
 1695              		.loc 1 526 6 is_stmt 1 view .LVU493
 526:BMI088/Src/bmi08g.c **** 						/* If self-test ready bit is set, exit the loop */
 1696              		.loc 1 526 9 is_stmt 0 view .LVU494
 1697 0046 002A     		cmp	r2, #0
 1698 0048 EED0     		beq	.L105
 1699              	.L106:
 1700              	.LVL193:
 537:BMI088/Src/bmi08g.c **** 				/* Read self-test register to check for self-test Ok bit */
 1701              		.loc 1 537 4 is_stmt 1 view .LVU495
 537:BMI088/Src/bmi08g.c **** 				/* Read self-test register to check for self-test Ok bit */
 1702              		.loc 1 537 7 is_stmt 0 view .LVU496
 1703 004a 002B     		cmp	r3, #0
 1704 004c E2D1     		bne	.L104
 539:BMI088/Src/bmi08g.c **** 
 1705              		.loc 1 539 5 is_stmt 1 view .LVU497
 539:BMI088/Src/bmi08g.c **** 
 1706              		.loc 1 539 12 is_stmt 0 view .LVU498
 1707 004e 2346     		mov	r3, r4
 1708 0050 0122     		movs	r2, #1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 51


 1709 0052 0DF10701 		add	r1, sp, #7
 1710 0056 3C20     		movs	r0, #60
 1711 0058 FFF7FEFF 		bl	get_regs
 1712              	.LVL194:
 541:BMI088/Src/bmi08g.c **** 					data = BMI08X_GET_BITS(data, BMI08X_GYRO_SELF_TEST_RESULT);
 1713              		.loc 1 541 5 is_stmt 1 view .LVU499
 541:BMI088/Src/bmi08g.c **** 					data = BMI08X_GET_BITS(data, BMI08X_GYRO_SELF_TEST_RESULT);
 1714              		.loc 1 541 8 is_stmt 0 view .LVU500
 1715 005c 0346     		mov	r3, r0
 1716 005e 0028     		cmp	r0, #0
 1717 0060 D8D1     		bne	.L104
 542:BMI088/Src/bmi08g.c **** 
 1718              		.loc 1 542 6 is_stmt 1 view .LVU501
 542:BMI088/Src/bmi08g.c **** 
 1719              		.loc 1 542 13 is_stmt 0 view .LVU502
 1720 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1721 0066 C3F38003 		ubfx	r3, r3, #2, #1
 542:BMI088/Src/bmi08g.c **** 
 1722              		.loc 1 542 11 view .LVU503
 1723 006a 8DF80730 		strb	r3, [sp, #7]
 544:BMI088/Src/bmi08g.c **** 
 1724              		.loc 1 544 6 is_stmt 1 view .LVU504
 544:BMI088/Src/bmi08g.c **** 
 1725              		.loc 1 544 13 is_stmt 0 view .LVU505
 1726 006e 2046     		mov	r0, r4
 1727              	.LVL195:
 544:BMI088/Src/bmi08g.c **** 
 1728              		.loc 1 544 13 view .LVU506
 1729 0070 FFF7FEFF 		bl	bmi08g_soft_reset
 1730              	.LVL196:
 546:BMI088/Src/bmi08g.c **** 						/* Updating the self test result */
 1731              		.loc 1 546 6 is_stmt 1 view .LVU507
 546:BMI088/Src/bmi08g.c **** 						/* Updating the self test result */
 1732              		.loc 1 546 9 is_stmt 0 view .LVU508
 1733 0074 0346     		mov	r3, r0
 1734 0076 0028     		cmp	r0, #0
 1735 0078 CCD1     		bne	.L104
 548:BMI088/Src/bmi08g.c **** 					}
 1736              		.loc 1 548 7 is_stmt 1 view .LVU509
 548:BMI088/Src/bmi08g.c **** 					}
 1737              		.loc 1 548 12 is_stmt 0 view .LVU510
 1738 007a 9DF90730 		ldrsb	r3, [sp, #7]
 1739              	.LVL197:
 548:BMI088/Src/bmi08g.c **** 					}
 1740              		.loc 1 548 12 view .LVU511
 1741 007e C9E7     		b	.L104
 1742              		.cfi_endproc
 1743              	.LFE10:
 1745              		.text
 1746              	.Letext0:
 1747              		.file 2 "d:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 1748              		.file 3 "d:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1749              		.file 4 "BMI088/Inc/bmi08x_defs.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s 			page 52


DEFINED SYMBOLS
                            *ABS*:00000000 bmi08g.c
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:18     .text.null_ptr_check:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:23     .text.null_ptr_check:00000000 null_ptr_check
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:86     .text.get_regs:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:91     .text.get_regs:00000000 get_regs
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:157    .text.set_regs:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:162    .text.set_regs:00000000 set_regs
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:228    .text.set_int_pin_config:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:233    .text.set_int_pin_config:00000000 set_int_pin_config
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:341    .text.set_gyro_data_ready_int:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:346    .text.set_gyro_data_ready_int:00000000 set_gyro_data_ready_int
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:492    .text.set_gyro_selftest:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:497    .text.set_gyro_selftest:00000000 set_gyro_selftest
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:586    .text.bmi08g_init:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:592    .text.bmi08g_init:00000000 bmi08g_init
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:669    .text.bmi08g_get_regs:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:675    .text.bmi08g_get_regs:00000000 bmi08g_get_regs
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:751    .text.bmi08g_set_regs:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:757    .text.bmi08g_set_regs:00000000 bmi08g_set_regs
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:833    .text.bmi08g_soft_reset:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:839    .text.bmi08g_soft_reset:00000000 bmi08g_soft_reset
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:915    .text.bmi08g_get_meas_conf:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:921    .text.bmi08g_get_meas_conf:00000000 bmi08g_get_meas_conf
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:993    .text.bmi08g_set_meas_conf:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:999    .text.bmi08g_set_meas_conf:00000000 bmi08g_set_meas_conf
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1178   .text.bmi08g_get_power_mode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1184   .text.bmi08g_get_power_mode:00000000 bmi08g_get_power_mode
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1245   .text.bmi08g_set_power_mode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1251   .text.bmi08g_set_power_mode:00000000 bmi08g_set_power_mode
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1391   .text.bmi08g_get_data:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1397   .text.bmi08g_get_data:00000000 bmi08g_get_data
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1530   .text.bmi08g_set_int_config:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1536   .text.bmi08g_set_int_config:00000000 bmi08g_set_int_config
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1609   .text.bmi08g_perform_selftest:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCo7Qin.s:1615   .text.bmi08g_perform_selftest:00000000 bmi08g_perform_selftest

NO UNDEFINED SYMBOLS
