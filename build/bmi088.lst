ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bmi088.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.null_ptr_check,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	null_ptr_check:
  24              	.LVL0:
  25              	.LFB6:
  26              		.file 1 "BMI088/Src/bmi088.c"
   1:BMI088/Src/bmi088.c **** /**\mainpage
   2:BMI088/Src/bmi088.c ****  * Copyright (C) 2017 - 2018 Bosch Sensortec GmbH
   3:BMI088/Src/bmi088.c ****  *
   4:BMI088/Src/bmi088.c ****  * Redistribution and use in source and binary forms, with or without
   5:BMI088/Src/bmi088.c ****  * modification, are permitted provided that the following conditions are met:
   6:BMI088/Src/bmi088.c ****  *
   7:BMI088/Src/bmi088.c ****  * Redistributions of source code must retain the above copyright
   8:BMI088/Src/bmi088.c ****  * notice, this list of conditions and the following disclaimer.
   9:BMI088/Src/bmi088.c ****  *
  10:BMI088/Src/bmi088.c ****  * Redistributions in binary form must reproduce the above copyright
  11:BMI088/Src/bmi088.c ****  * notice, this list of conditions and the following disclaimer in the
  12:BMI088/Src/bmi088.c ****  * documentation and/or other materials provided with the distribution.
  13:BMI088/Src/bmi088.c ****  *
  14:BMI088/Src/bmi088.c ****  * Neither the name of the copyright holder nor the names of the
  15:BMI088/Src/bmi088.c ****  * contributors may be used to endorse or promote products derived from
  16:BMI088/Src/bmi088.c ****  * this software without specific prior written permission.
  17:BMI088/Src/bmi088.c ****  *
  18:BMI088/Src/bmi088.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  19:BMI088/Src/bmi088.c ****  * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
  20:BMI088/Src/bmi088.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  21:BMI088/Src/bmi088.c ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  22:BMI088/Src/bmi088.c ****  * DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDER
  23:BMI088/Src/bmi088.c ****  * OR CONTRIBUTORS BE LIABLE FOR ANY
  24:BMI088/Src/bmi088.c ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
  25:BMI088/Src/bmi088.c ****  * OR CONSEQUENTIAL DAMAGES(INCLUDING, BUT NOT LIMITED TO,
  26:BMI088/Src/bmi088.c ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  27:BMI088/Src/bmi088.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:BMI088/Src/bmi088.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  29:BMI088/Src/bmi088.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  30:BMI088/Src/bmi088.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:BMI088/Src/bmi088.c ****  * ANY WAY OUT OF THE USE OF THIS
  32:BMI088/Src/bmi088.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 2


  33:BMI088/Src/bmi088.c ****  *
  34:BMI088/Src/bmi088.c ****  * The information provided is believed to be accurate and reliable.
  35:BMI088/Src/bmi088.c ****  * The copyright holder assumes no responsibility
  36:BMI088/Src/bmi088.c ****  * for the consequences of use
  37:BMI088/Src/bmi088.c ****  * of such information nor for any infringement of patents or
  38:BMI088/Src/bmi088.c ****  * other rights of third parties which may result from its use.
  39:BMI088/Src/bmi088.c ****  * No license is granted by implication or otherwise under any patent or
  40:BMI088/Src/bmi088.c ****  * patent rights of the copyright holder.
  41:BMI088/Src/bmi088.c ****  *
  42:BMI088/Src/bmi088.c ****  * @file        bmi088.c
  43:BMI088/Src/bmi088.c ****  * @date        24 Aug 2018
  44:BMI088/Src/bmi088.c ****  * @version     1.2.0
  45:BMI088/Src/bmi088.c ****  *
  46:BMI088/Src/bmi088.c ****  */
  47:BMI088/Src/bmi088.c **** 
  48:BMI088/Src/bmi088.c **** /*! \file bmi088.c
  49:BMI088/Src/bmi088.c ****  \brief Sensor Driver for BMI085 family of sensors */
  50:BMI088/Src/bmi088.c **** /****************************************************************************/
  51:BMI088/Src/bmi088.c **** /**\name        Header files
  52:BMI088/Src/bmi088.c ****  ****************************************************************************/
  53:BMI088/Src/bmi088.c **** #include "bmi08x.h"
  54:BMI088/Src/bmi088.c **** #include "bmi088.h"
  55:BMI088/Src/bmi088.c **** 
  56:BMI088/Src/bmi088.c **** #if BMI08X_FEATURE_BMI088 == 1
  57:BMI088/Src/bmi088.c **** /****************************************************************************/
  58:BMI088/Src/bmi088.c **** /** \name       Macros
  59:BMI088/Src/bmi088.c ****  ****************************************************************************/
  60:BMI088/Src/bmi088.c **** 
  61:BMI088/Src/bmi088.c **** /****************************************************************************/
  62:BMI088/Src/bmi088.c **** /**\name        Local structures
  63:BMI088/Src/bmi088.c ****  ****************************************************************************/
  64:BMI088/Src/bmi088.c **** 
  65:BMI088/Src/bmi088.c **** /****************************************************************************/
  66:BMI088/Src/bmi088.c **** /*! Static Function Declarations
  67:BMI088/Src/bmi088.c ****  ****************************************************************************/
  68:BMI088/Src/bmi088.c **** /*!
  69:BMI088/Src/bmi088.c ****  * @brief This API is used to validate the device structure pointer for
  70:BMI088/Src/bmi088.c ****  * null conditions.
  71:BMI088/Src/bmi088.c ****  *
  72:BMI088/Src/bmi088.c ****  * @param[in] dev : Structure instance of bmi08x_dev.
  73:BMI088/Src/bmi088.c ****  *
  74:BMI088/Src/bmi088.c ****  * @return Result of API execution status
  75:BMI088/Src/bmi088.c ****  * @retval zero -> Success / -ve value -> Error
  76:BMI088/Src/bmi088.c ****  */
  77:BMI088/Src/bmi088.c **** static int8_t null_ptr_check(const struct bmi08x_dev *dev);
  78:BMI088/Src/bmi088.c **** /****************************************************************************/
  79:BMI088/Src/bmi088.c **** /**\name        Extern Declarations
  80:BMI088/Src/bmi088.c ****  ****************************************************************************/
  81:BMI088/Src/bmi088.c **** extern const uint8_t bmi08x_config_file[];
  82:BMI088/Src/bmi088.c **** /**\name        Globals
  83:BMI088/Src/bmi088.c ****  ****************************************************************************/
  84:BMI088/Src/bmi088.c **** 
  85:BMI088/Src/bmi088.c **** /****************************************************************************/
  86:BMI088/Src/bmi088.c **** /**\name        Function definitions
  87:BMI088/Src/bmi088.c ****  ****************************************************************************/
  88:BMI088/Src/bmi088.c **** /*!
  89:BMI088/Src/bmi088.c ****  *  @brief This API is the entry point for bmi088 sensors.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 3


  90:BMI088/Src/bmi088.c ****  *  It performs the selection of I2C/SPI read mechanism according to the
  91:BMI088/Src/bmi088.c ****  *  selected interface and reads the chip-id of accel & gyro sensors.
  92:BMI088/Src/bmi088.c ****  */
  93:BMI088/Src/bmi088.c **** int8_t bmi088_init(struct bmi08x_dev *dev)
  94:BMI088/Src/bmi088.c **** {
  95:BMI088/Src/bmi088.c **** 	int8_t rslt;
  96:BMI088/Src/bmi088.c **** 	/*initialize bmi088 accel sensor*/
  97:BMI088/Src/bmi088.c **** 	rslt = bmi08a_init(dev);
  98:BMI088/Src/bmi088.c **** 
  99:BMI088/Src/bmi088.c **** 	if (rslt == BMI08X_OK) {
 100:BMI088/Src/bmi088.c **** 		/*initialize bmi088 gyro sensor*/
 101:BMI088/Src/bmi088.c **** 		rslt = bmi08g_init(dev);
 102:BMI088/Src/bmi088.c **** 	}
 103:BMI088/Src/bmi088.c **** 
 104:BMI088/Src/bmi088.c **** 	return rslt;
 105:BMI088/Src/bmi088.c **** }
 106:BMI088/Src/bmi088.c **** 
 107:BMI088/Src/bmi088.c **** /*!
 108:BMI088/Src/bmi088.c ****  *  @brief This API uploads the bmi088 config file onto the device.
 109:BMI088/Src/bmi088.c ****  */
 110:BMI088/Src/bmi088.c **** int8_t bmi088_apply_config_file(struct bmi08x_dev *dev)
 111:BMI088/Src/bmi088.c **** {
 112:BMI088/Src/bmi088.c **** 	int8_t rslt;
 113:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 114:BMI088/Src/bmi088.c **** 	rslt = null_ptr_check(dev);
 115:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 116:BMI088/Src/bmi088.c **** 	if (rslt == BMI08X_OK) {
 117:BMI088/Src/bmi088.c **** 		/* Assign stream file */
 118:BMI088/Src/bmi088.c **** 		dev->config_file_ptr = bmi08x_config_file;
 119:BMI088/Src/bmi088.c **** 		/* Upload binary */
 120:BMI088/Src/bmi088.c **** 		rslt = bmi08a_write_config_file(dev);
 121:BMI088/Src/bmi088.c **** 	}
 122:BMI088/Src/bmi088.c **** 
 123:BMI088/Src/bmi088.c **** 	return rslt;
 124:BMI088/Src/bmi088.c **** }
 125:BMI088/Src/bmi088.c **** 
 126:BMI088/Src/bmi088.c **** /*!
 127:BMI088/Src/bmi088.c ****  *  @brief This API is used to enable/disable and configure the data synchronization
 128:BMI088/Src/bmi088.c ****  *  feature.
 129:BMI088/Src/bmi088.c ****  */
 130:BMI088/Src/bmi088.c **** int8_t bmi088_configure_data_synchronization(struct bmi08x_data_sync_cfg sync_cfg, struct bmi08x_de
 131:BMI088/Src/bmi088.c **** {
 132:BMI088/Src/bmi088.c **** 	int8_t rslt;
 133:BMI088/Src/bmi088.c **** 	uint16_t data[BMI08X_ACCEL_DATA_SYNC_LEN];
 134:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 135:BMI088/Src/bmi088.c **** 	rslt = null_ptr_check(dev);
 136:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 137:BMI088/Src/bmi088.c **** 	if (rslt == BMI08X_OK) {
 138:BMI088/Src/bmi088.c **** 		/* change sensor meas config */
 139:BMI088/Src/bmi088.c **** 		switch (sync_cfg.mode) {
 140:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_2000HZ:
 141:BMI088/Src/bmi088.c **** 			dev->accel_cfg.odr = BMI08X_ACCEL_ODR_1600_HZ;
 142:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 143:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_230_ODR_2000_HZ;
 144:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_230_ODR_2000_HZ;
 145:BMI088/Src/bmi088.c **** 			break;
 146:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_1000HZ:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 4


 147:BMI088/Src/bmi088.c **** 			dev->accel_cfg.odr = BMI08X_ACCEL_ODR_800_HZ;
 148:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 149:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_116_ODR_1000_HZ;
 150:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_116_ODR_1000_HZ;
 151:BMI088/Src/bmi088.c **** 			break;
 152:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_400HZ:
 153:BMI088/Src/bmi088.c **** 			dev->accel_cfg.odr = BMI08X_ACCEL_ODR_400_HZ;
 154:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 155:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_47_ODR_400_HZ;
 156:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_47_ODR_400_HZ;
 157:BMI088/Src/bmi088.c **** 			break;
 158:BMI088/Src/bmi088.c **** 		default:
 159:BMI088/Src/bmi088.c **** 			break;
 160:BMI088/Src/bmi088.c **** 		}
 161:BMI088/Src/bmi088.c **** 		rslt = bmi08a_set_meas_conf(dev);
 162:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 163:BMI088/Src/bmi088.c **** 			return rslt;
 164:BMI088/Src/bmi088.c **** 
 165:BMI088/Src/bmi088.c **** 		rslt = bmi08g_set_meas_conf(dev);
 166:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 167:BMI088/Src/bmi088.c **** 			return rslt;
 168:BMI088/Src/bmi088.c **** 
 169:BMI088/Src/bmi088.c **** 		/* Enable data synchronization */
 170:BMI088/Src/bmi088.c **** 		data[0] = (sync_cfg.mode & BMI08X_ACCEL_DATA_SYNC_MODE_MASK);
 171:BMI088/Src/bmi088.c **** 		rslt = bmi08a_write_feature_config(BMI08X_ACCEL_DATA_SYNC_ADR, &data[0],
 172:BMI088/Src/bmi088.c **** 				BMI08X_ACCEL_DATA_SYNC_LEN, dev);
 173:BMI088/Src/bmi088.c **** 	}
 174:BMI088/Src/bmi088.c **** 
 175:BMI088/Src/bmi088.c **** 	return rslt;
 176:BMI088/Src/bmi088.c **** }
 177:BMI088/Src/bmi088.c **** 
 178:BMI088/Src/bmi088.c **** /*!
 179:BMI088/Src/bmi088.c ****  *  @brief This API is used to enable/disable and configure the anymotion
 180:BMI088/Src/bmi088.c ****  *  feature.
 181:BMI088/Src/bmi088.c ****  */
 182:BMI088/Src/bmi088.c **** int8_t bmi088_configure_anymotion(struct bmi08x_anymotion_cfg anymotion_cfg, const struct bmi08x_de
 183:BMI088/Src/bmi088.c **** {
 184:BMI088/Src/bmi088.c **** 	int8_t rslt;
 185:BMI088/Src/bmi088.c **** 	uint16_t data[BMI08X_ACCEL_ANYMOTION_LEN];
 186:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 187:BMI088/Src/bmi088.c **** 	rslt = null_ptr_check(dev);
 188:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 189:BMI088/Src/bmi088.c **** 	if (rslt == BMI08X_OK) {
 190:BMI088/Src/bmi088.c **** 		/* Enable data synchronization */
 191:BMI088/Src/bmi088.c **** 		data[0] = (anymotion_cfg.threshold & BMI08X_ACCEL_ANYMOTION_THRESHOLD_MASK);
 192:BMI088/Src/bmi088.c **** 		data[0] |= ((anymotion_cfg.nomotion_sel << BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_SHIFT) &
 193:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_MASK);
 194:BMI088/Src/bmi088.c **** 		data[1] = (anymotion_cfg.duration & BMI08X_ACCEL_ANYMOTION_DURATION_MASK);
 195:BMI088/Src/bmi088.c **** 		data[1] |= ((anymotion_cfg.x_en << BMI08X_ACCEL_ANYMOTION_X_EN_SHIFT) &
 196:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_X_EN_MASK);
 197:BMI088/Src/bmi088.c **** 		data[1] |= ((anymotion_cfg.y_en << BMI08X_ACCEL_ANYMOTION_Y_EN_SHIFT) &
 198:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Y_EN_MASK);
 199:BMI088/Src/bmi088.c **** 		data[1] |= ((anymotion_cfg.z_en << BMI08X_ACCEL_ANYMOTION_Z_EN_SHIFT) &
 200:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Z_EN_MASK);
 201:BMI088/Src/bmi088.c **** 		rslt = bmi08a_write_feature_config(BMI08X_ACCEL_ANYMOTION_ADR, &data[0],
 202:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_LEN, dev);
 203:BMI088/Src/bmi088.c **** 	}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 5


 204:BMI088/Src/bmi088.c **** 
 205:BMI088/Src/bmi088.c **** 	return rslt;
 206:BMI088/Src/bmi088.c **** }
 207:BMI088/Src/bmi088.c **** 
 208:BMI088/Src/bmi088.c **** uint8_t data1[6];
 209:BMI088/Src/bmi088.c **** /*!
 210:BMI088/Src/bmi088.c ****  *  @brief This API reads the synchronized accel & gyro data from the sensor,
 211:BMI088/Src/bmi088.c ****  *  store it in the bmi08x_sensor_data structure instance
 212:BMI088/Src/bmi088.c ****  *  passed by the user.
 213:BMI088/Src/bmi088.c ****  */
 214:BMI088/Src/bmi088.c **** int8_t bmi088_get_synchronized_data(struct bmi08x_sensor_data *accel, struct bmi08x_sensor_data *gy
 215:BMI088/Src/bmi088.c **** 		const struct bmi08x_dev *dev)
 216:BMI088/Src/bmi088.c **** {
 217:BMI088/Src/bmi088.c **** 	int8_t rslt;
 218:BMI088/Src/bmi088.c **** 	uint8_t reg_addr, data[6];
 219:BMI088/Src/bmi088.c **** 	uint8_t lsb, msb;
 220:BMI088/Src/bmi088.c **** 	uint16_t msblsb;
 221:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 222:BMI088/Src/bmi088.c **** 	rslt = null_ptr_check(dev);
 223:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 224:BMI088/Src/bmi088.c **** 	if ((rslt == BMI08X_OK) && (accel != NULL) && (gyro != NULL)) {
 225:BMI088/Src/bmi088.c **** 		/* Read accel x,y sensor data */
 226:BMI088/Src/bmi088.c **** 		reg_addr = BMI08X_ACCEL_GP_0_REG;
 227:BMI088/Src/bmi088.c **** 		rslt = bmi08a_get_regs(reg_addr, &data[0], 4, dev);
 228:BMI088/Src/bmi088.c **** 
 229:BMI088/Src/bmi088.c **** 		if (rslt == BMI08X_OK) {
 230:BMI088/Src/bmi088.c **** 			/* Read accel sensor data */
 231:BMI088/Src/bmi088.c **** 			reg_addr = BMI08X_ACCEL_GP_4_REG;
 232:BMI088/Src/bmi088.c **** 			rslt = bmi08a_get_regs(reg_addr, &data[4], 2, dev);
 233:BMI088/Src/bmi088.c **** 
 234:BMI088/Src/bmi088.c **** 			if (rslt == BMI08X_OK) {
 235:BMI088/Src/bmi088.c **** 				lsb = data[0];
 236:BMI088/Src/bmi088.c **** 				msb = data[1];
 237:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 238:BMI088/Src/bmi088.c **** 				accel->x = ((int16_t) msblsb); /* Data in X axis */
 239:BMI088/Src/bmi088.c **** 
 240:BMI088/Src/bmi088.c **** 				lsb = data[2];
 241:BMI088/Src/bmi088.c **** 				msb = data[3];
 242:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 243:BMI088/Src/bmi088.c **** 				accel->y = ((int16_t) msblsb); /* Data in Y axis */
 244:BMI088/Src/bmi088.c **** 
 245:BMI088/Src/bmi088.c **** 				lsb = data[4];
 246:BMI088/Src/bmi088.c **** 				msb = data[5];
 247:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 248:BMI088/Src/bmi088.c **** 				accel->z = ((int16_t) msblsb); /* Data in Z axis */
 249:BMI088/Src/bmi088.c **** 
 250:BMI088/Src/bmi088.c **** 				/* Read gyro sensor data */
 251:BMI088/Src/bmi088.c **** 				rslt = bmi08g_get_data(gyro, dev);
 252:BMI088/Src/bmi088.c **** 			}
 253:BMI088/Src/bmi088.c **** 		}
 254:BMI088/Src/bmi088.c **** 
 255:BMI088/Src/bmi088.c **** 	} else {
 256:BMI088/Src/bmi088.c **** 		rslt = BMI08X_E_NULL_PTR;
 257:BMI088/Src/bmi088.c **** 	}
 258:BMI088/Src/bmi088.c **** 
 259:BMI088/Src/bmi088.c **** 	return rslt;
 260:BMI088/Src/bmi088.c **** }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 6


 261:BMI088/Src/bmi088.c **** /*!
 262:BMI088/Src/bmi088.c ****  *  @brief This API configures the synchronization interrupt
 263:BMI088/Src/bmi088.c ****  *  based on the user settings in the bmi08x_int_cfg
 264:BMI088/Src/bmi088.c ****  *  structure instance.
 265:BMI088/Src/bmi088.c ****  */
 266:BMI088/Src/bmi088.c **** int8_t bmi088_set_data_sync_int_config(const struct bmi08x_int_cfg *int_config,
 267:BMI088/Src/bmi088.c **** 	const struct bmi08x_dev *dev)
 268:BMI088/Src/bmi088.c **** {
 269:BMI088/Src/bmi088.c **** 	int8_t rslt;
 270:BMI088/Src/bmi088.c **** 	/*configure accel sync data ready interrupt configuration*/
 271:BMI088/Src/bmi088.c **** 	rslt = bmi08a_set_int_config(&int_config->accel_int_config_1, dev);
 272:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 273:BMI088/Src/bmi088.c **** 		return rslt;
 274:BMI088/Src/bmi088.c **** 
 275:BMI088/Src/bmi088.c **** 	rslt = bmi08a_set_int_config(&int_config->accel_int_config_2, dev);
 276:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 277:BMI088/Src/bmi088.c **** 		return rslt;
 278:BMI088/Src/bmi088.c **** 
 279:BMI088/Src/bmi088.c **** 	/*configure gyro data ready interrupt configuration*/
 280:BMI088/Src/bmi088.c **** 	rslt = bmi08g_set_int_config(&int_config->gyro_int_config_1, dev);
 281:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 282:BMI088/Src/bmi088.c **** 		return rslt;
 283:BMI088/Src/bmi088.c **** 
 284:BMI088/Src/bmi088.c **** 	rslt = bmi08g_set_int_config(&int_config->gyro_int_config_2, dev);
 285:BMI088/Src/bmi088.c **** 
 286:BMI088/Src/bmi088.c **** 	return rslt;
 287:BMI088/Src/bmi088.c **** }
 288:BMI088/Src/bmi088.c **** 
 289:BMI088/Src/bmi088.c **** /*****************************************************************************/
 290:BMI088/Src/bmi088.c **** /* Static function definition */
 291:BMI088/Src/bmi088.c **** /*!
 292:BMI088/Src/bmi088.c ****  * @brief This API is used to validate the device structure pointer for
 293:BMI088/Src/bmi088.c ****  * null conditions.
 294:BMI088/Src/bmi088.c ****  */
 295:BMI088/Src/bmi088.c **** static int8_t null_ptr_check(const struct bmi08x_dev *dev)
 296:BMI088/Src/bmi088.c **** {
  27              		.loc 1 296 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 297:BMI088/Src/bmi088.c **** 	int8_t rslt;
  32              		.loc 1 297 2 view .LVU1
 298:BMI088/Src/bmi088.c **** 
 299:BMI088/Src/bmi088.c **** 	if ((dev == NULL) || (dev->read == NULL) || (dev->write == NULL) || (dev->delay_ms == NULL)) {
  33              		.loc 1 299 2 view .LVU2
  34              		.loc 1 299 5 is_stmt 0 view .LVU3
  35 0000 50B1     		cbz	r0, .L3
  36              		.loc 1 299 27 discriminator 1 view .LVU4
  37 0002 8269     		ldr	r2, [r0, #24]
  38              		.loc 1 299 20 discriminator 1 view .LVU5
  39 0004 5AB1     		cbz	r2, .L4
  40              		.loc 1 299 50 discriminator 2 view .LVU6
  41 0006 C269     		ldr	r2, [r0, #28]
  42              		.loc 1 299 43 discriminator 2 view .LVU7
  43 0008 62B1     		cbz	r2, .L5
  44              		.loc 1 299 74 discriminator 3 view .LVU8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 7


  45 000a 036A     		ldr	r3, [r0, #32]
  46              		.loc 1 299 67 discriminator 3 view .LVU9
  47 000c 0BB1     		cbz	r3, .L7
 300:BMI088/Src/bmi088.c **** 		/* Device structure pointer is not valid */
 301:BMI088/Src/bmi088.c **** 		rslt = BMI08X_E_NULL_PTR;
 302:BMI088/Src/bmi088.c **** 	} else {
 303:BMI088/Src/bmi088.c **** 		/* Device structure is fine */
 304:BMI088/Src/bmi088.c **** 		rslt = BMI08X_OK;
  48              		.loc 1 304 8 view .LVU10
  49 000e 0020     		movs	r0, #0
  50              	.LVL1:
 305:BMI088/Src/bmi088.c **** 	}
 306:BMI088/Src/bmi088.c **** 
 307:BMI088/Src/bmi088.c **** 	return rslt;
  51              		.loc 1 307 2 is_stmt 1 view .LVU11
 308:BMI088/Src/bmi088.c **** }
  52              		.loc 1 308 1 is_stmt 0 view .LVU12
  53 0010 7047     		bx	lr
  54              	.LVL2:
  55              	.L7:
 301:BMI088/Src/bmi088.c **** 	} else {
  56              		.loc 1 301 8 view .LVU13
  57 0012 4FF0FF30 		mov	r0, #-1
  58              	.LVL3:
 301:BMI088/Src/bmi088.c **** 	} else {
  59              		.loc 1 301 8 view .LVU14
  60 0016 7047     		bx	lr
  61              	.LVL4:
  62              	.L3:
 301:BMI088/Src/bmi088.c **** 	} else {
  63              		.loc 1 301 8 view .LVU15
  64 0018 4FF0FF30 		mov	r0, #-1
  65              	.LVL5:
 301:BMI088/Src/bmi088.c **** 	} else {
  66              		.loc 1 301 8 view .LVU16
  67 001c 7047     		bx	lr
  68              	.LVL6:
  69              	.L4:
 301:BMI088/Src/bmi088.c **** 	} else {
  70              		.loc 1 301 8 view .LVU17
  71 001e 4FF0FF30 		mov	r0, #-1
  72              	.LVL7:
 301:BMI088/Src/bmi088.c **** 	} else {
  73              		.loc 1 301 8 view .LVU18
  74 0022 7047     		bx	lr
  75              	.LVL8:
  76              	.L5:
 301:BMI088/Src/bmi088.c **** 	} else {
  77              		.loc 1 301 8 view .LVU19
  78 0024 4FF0FF30 		mov	r0, #-1
  79              	.LVL9:
 301:BMI088/Src/bmi088.c **** 	} else {
  80              		.loc 1 301 8 view .LVU20
  81 0028 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE6:
  85              		.section	.text.bmi088_init,"ax",%progbits
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 8


  86              		.align	1
  87              		.global	bmi088_init
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	bmi088_init:
  93              	.LVL10:
  94              	.LFB0:
  94:BMI088/Src/bmi088.c **** 	int8_t rslt;
  95              		.loc 1 94 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  94:BMI088/Src/bmi088.c **** 	int8_t rslt;
  99              		.loc 1 94 1 is_stmt 0 view .LVU22
 100 0000 10B5     		push	{r4, lr}
 101              	.LCFI0:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 4, -8
 104              		.cfi_offset 14, -4
 105 0002 0446     		mov	r4, r0
  95:BMI088/Src/bmi088.c **** 	/*initialize bmi088 accel sensor*/
 106              		.loc 1 95 2 is_stmt 1 view .LVU23
  97:BMI088/Src/bmi088.c **** 
 107              		.loc 1 97 2 view .LVU24
  97:BMI088/Src/bmi088.c **** 
 108              		.loc 1 97 9 is_stmt 0 view .LVU25
 109 0004 FFF7FEFF 		bl	bmi08a_init
 110              	.LVL11:
  99:BMI088/Src/bmi088.c **** 		/*initialize bmi088 gyro sensor*/
 111              		.loc 1 99 2 is_stmt 1 view .LVU26
  99:BMI088/Src/bmi088.c **** 		/*initialize bmi088 gyro sensor*/
 112              		.loc 1 99 5 is_stmt 0 view .LVU27
 113 0008 00B1     		cbz	r0, .L11
 114              	.L9:
 115              	.LVL12:
 104:BMI088/Src/bmi088.c **** }
 116              		.loc 1 104 2 is_stmt 1 view .LVU28
 105:BMI088/Src/bmi088.c **** 
 117              		.loc 1 105 1 is_stmt 0 view .LVU29
 118 000a 10BD     		pop	{r4, pc}
 119              	.LVL13:
 120              	.L11:
 101:BMI088/Src/bmi088.c **** 	}
 121              		.loc 1 101 3 is_stmt 1 view .LVU30
 101:BMI088/Src/bmi088.c **** 	}
 122              		.loc 1 101 10 is_stmt 0 view .LVU31
 123 000c 2046     		mov	r0, r4
 124 000e FFF7FEFF 		bl	bmi08g_init
 125              	.LVL14:
 101:BMI088/Src/bmi088.c **** 	}
 126              		.loc 1 101 10 view .LVU32
 127 0012 FAE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE0:
 131              		.section	.text.bmi088_apply_config_file,"ax",%progbits
 132              		.align	1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 9


 133              		.global	bmi088_apply_config_file
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	bmi088_apply_config_file:
 139              	.LVL15:
 140              	.LFB1:
 111:BMI088/Src/bmi088.c **** 	int8_t rslt;
 141              		.loc 1 111 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 111:BMI088/Src/bmi088.c **** 	int8_t rslt;
 145              		.loc 1 111 1 is_stmt 0 view .LVU34
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 151 0002 0446     		mov	r4, r0
 112:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 152              		.loc 1 112 2 is_stmt 1 view .LVU35
 114:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 153              		.loc 1 114 2 view .LVU36
 114:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 154              		.loc 1 114 9 is_stmt 0 view .LVU37
 155 0004 FFF7FEFF 		bl	null_ptr_check
 156              	.LVL16:
 116:BMI088/Src/bmi088.c **** 		/* Assign stream file */
 157              		.loc 1 116 2 is_stmt 1 view .LVU38
 116:BMI088/Src/bmi088.c **** 		/* Assign stream file */
 158              		.loc 1 116 5 is_stmt 0 view .LVU39
 159 0008 00B1     		cbz	r0, .L15
 160              	.L13:
 161              	.LVL17:
 123:BMI088/Src/bmi088.c **** }
 162              		.loc 1 123 2 is_stmt 1 view .LVU40
 124:BMI088/Src/bmi088.c **** 
 163              		.loc 1 124 1 is_stmt 0 view .LVU41
 164 000a 10BD     		pop	{r4, pc}
 165              	.LVL18:
 166              	.L15:
 118:BMI088/Src/bmi088.c **** 		/* Upload binary */
 167              		.loc 1 118 3 is_stmt 1 view .LVU42
 118:BMI088/Src/bmi088.c **** 		/* Upload binary */
 168              		.loc 1 118 24 is_stmt 0 view .LVU43
 169 000c 024B     		ldr	r3, .L16
 170 000e 2361     		str	r3, [r4, #16]
 120:BMI088/Src/bmi088.c **** 	}
 171              		.loc 1 120 3 is_stmt 1 view .LVU44
 120:BMI088/Src/bmi088.c **** 	}
 172              		.loc 1 120 10 is_stmt 0 view .LVU45
 173 0010 2046     		mov	r0, r4
 174 0012 FFF7FEFF 		bl	bmi08a_write_config_file
 175              	.LVL19:
 120:BMI088/Src/bmi088.c **** 	}
 176              		.loc 1 120 10 view .LVU46
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 10


 177 0016 F8E7     		b	.L13
 178              	.L17:
 179              		.align	2
 180              	.L16:
 181 0018 00000000 		.word	bmi08x_config_file
 182              		.cfi_endproc
 183              	.LFE1:
 185              		.section	.text.bmi088_configure_data_synchronization,"ax",%progbits
 186              		.align	1
 187              		.global	bmi088_configure_data_synchronization
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	bmi088_configure_data_synchronization:
 193              	.LVL20:
 194              	.LFB2:
 131:BMI088/Src/bmi088.c **** 	int8_t rslt;
 195              		.loc 1 131 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 131:BMI088/Src/bmi088.c **** 	int8_t rslt;
 199              		.loc 1 131 1 is_stmt 0 view .LVU48
 200 0000 30B5     		push	{r4, r5, lr}
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 12
 203              		.cfi_offset 4, -12
 204              		.cfi_offset 5, -8
 205              		.cfi_offset 14, -4
 206 0002 83B0     		sub	sp, sp, #12
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 24
 209 0004 0546     		mov	r5, r0
 210              	.LVL21:
 131:BMI088/Src/bmi088.c **** 	int8_t rslt;
 211              		.loc 1 131 1 view .LVU49
 212 0006 0C46     		mov	r4, r1
 132:BMI088/Src/bmi088.c **** 	uint16_t data[BMI08X_ACCEL_DATA_SYNC_LEN];
 213              		.loc 1 132 2 is_stmt 1 view .LVU50
 133:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 214              		.loc 1 133 2 view .LVU51
 135:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 215              		.loc 1 135 2 view .LVU52
 135:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 216              		.loc 1 135 9 is_stmt 0 view .LVU53
 217 0008 0846     		mov	r0, r1
 218 000a FFF7FEFF 		bl	null_ptr_check
 219              	.LVL22:
 137:BMI088/Src/bmi088.c **** 		/* change sensor meas config */
 220              		.loc 1 137 2 is_stmt 1 view .LVU54
 137:BMI088/Src/bmi088.c **** 		/* change sensor meas config */
 221              		.loc 1 137 5 is_stmt 0 view .LVU55
 222 000e 0346     		mov	r3, r0
 223 0010 58B9     		cbnz	r0, .L19
 139:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_2000HZ:
 224              		.loc 1 139 3 is_stmt 1 view .LVU56
 225              	.LVL23:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 11


 139:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_2000HZ:
 226              		.loc 1 139 19 is_stmt 0 view .LVU57
 227 0012 EDB2     		uxtb	r5, r5
 228              	.LVL24:
 139:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_2000HZ:
 229              		.loc 1 139 3 view .LVU58
 230 0014 022D     		cmp	r5, #2
 231 0016 13D0     		beq	.L20
 232 0018 032D     		cmp	r5, #3
 233 001a 09D0     		beq	.L21
 234 001c 012D     		cmp	r5, #1
 235 001e 16D0     		beq	.L25
 236              	.L23:
 161:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 237              		.loc 1 161 3 is_stmt 1 view .LVU59
 161:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 238              		.loc 1 161 10 is_stmt 0 view .LVU60
 239 0020 2046     		mov	r0, r4
 240              	.LVL25:
 161:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 241              		.loc 1 161 10 view .LVU61
 242 0022 FFF7FEFF 		bl	bmi08a_set_meas_conf
 243              	.LVL26:
 162:BMI088/Src/bmi088.c **** 			return rslt;
 244              		.loc 1 162 3 is_stmt 1 view .LVU62
 162:BMI088/Src/bmi088.c **** 			return rslt;
 245              		.loc 1 162 6 is_stmt 0 view .LVU63
 246 0026 0346     		mov	r3, r0
 247 0028 C8B1     		cbz	r0, .L26
 248              	.LVL27:
 249              	.L19:
 176:BMI088/Src/bmi088.c **** 
 250              		.loc 1 176 1 view .LVU64
 251 002a 1846     		mov	r0, r3
 252 002c 03B0     		add	sp, sp, #12
 253              	.LCFI4:
 254              		.cfi_remember_state
 255              		.cfi_def_cfa_offset 12
 256              		@ sp needed
 257 002e 30BD     		pop	{r4, r5, pc}
 258              	.LVL28:
 259              	.L21:
 260              	.LCFI5:
 261              		.cfi_restore_state
 141:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 262              		.loc 1 141 4 is_stmt 1 view .LVU65
 141:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 263              		.loc 1 141 23 is_stmt 0 view .LVU66
 264 0030 0C23     		movs	r3, #12
 265 0032 6372     		strb	r3, [r4, #9]
 142:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_230_ODR_2000_HZ;
 266              		.loc 1 142 4 is_stmt 1 view .LVU67
 142:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_230_ODR_2000_HZ;
 267              		.loc 1 142 22 is_stmt 0 view .LVU68
 268 0034 0223     		movs	r3, #2
 269 0036 2372     		strb	r3, [r4, #8]
 143:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_230_ODR_2000_HZ;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 12


 270              		.loc 1 143 4 is_stmt 1 view .LVU69
 143:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_230_ODR_2000_HZ;
 271              		.loc 1 143 22 is_stmt 0 view .LVU70
 272 0038 0123     		movs	r3, #1
 273 003a 6373     		strb	r3, [r4, #13]
 144:BMI088/Src/bmi088.c **** 			break;
 274              		.loc 1 144 4 is_stmt 1 view .LVU71
 144:BMI088/Src/bmi088.c **** 			break;
 275              		.loc 1 144 21 is_stmt 0 view .LVU72
 276 003c 2373     		strb	r3, [r4, #12]
 145:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_1000HZ:
 277              		.loc 1 145 4 is_stmt 1 view .LVU73
 278 003e EFE7     		b	.L23
 279              	.L20:
 147:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 280              		.loc 1 147 4 view .LVU74
 147:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 281              		.loc 1 147 23 is_stmt 0 view .LVU75
 282 0040 0B23     		movs	r3, #11
 283 0042 6372     		strb	r3, [r4, #9]
 148:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_116_ODR_1000_HZ;
 284              		.loc 1 148 4 is_stmt 1 view .LVU76
 148:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_116_ODR_1000_HZ;
 285              		.loc 1 148 22 is_stmt 0 view .LVU77
 286 0044 0223     		movs	r3, #2
 287 0046 2372     		strb	r3, [r4, #8]
 149:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_116_ODR_1000_HZ;
 288              		.loc 1 149 4 is_stmt 1 view .LVU78
 149:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_116_ODR_1000_HZ;
 289              		.loc 1 149 22 is_stmt 0 view .LVU79
 290 0048 6373     		strb	r3, [r4, #13]
 150:BMI088/Src/bmi088.c **** 			break;
 291              		.loc 1 150 4 is_stmt 1 view .LVU80
 150:BMI088/Src/bmi088.c **** 			break;
 292              		.loc 1 150 21 is_stmt 0 view .LVU81
 293 004a 2373     		strb	r3, [r4, #12]
 151:BMI088/Src/bmi088.c **** 		case BMI08X_ACCEL_DATA_SYNC_MODE_400HZ:
 294              		.loc 1 151 4 is_stmt 1 view .LVU82
 295 004c E8E7     		b	.L23
 296              	.L25:
 153:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 297              		.loc 1 153 4 view .LVU83
 153:BMI088/Src/bmi088.c **** 			dev->accel_cfg.bw = BMI08X_ACCEL_BW_NORMAL;
 298              		.loc 1 153 23 is_stmt 0 view .LVU84
 299 004e 0A23     		movs	r3, #10
 300 0050 6372     		strb	r3, [r4, #9]
 154:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_47_ODR_400_HZ;
 301              		.loc 1 154 4 is_stmt 1 view .LVU85
 154:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.odr = BMI08X_GYRO_BW_47_ODR_400_HZ;
 302              		.loc 1 154 22 is_stmt 0 view .LVU86
 303 0052 0223     		movs	r3, #2
 304 0054 2372     		strb	r3, [r4, #8]
 155:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_47_ODR_400_HZ;
 305              		.loc 1 155 4 is_stmt 1 view .LVU87
 155:BMI088/Src/bmi088.c **** 			dev->gyro_cfg.bw = BMI08X_GYRO_BW_47_ODR_400_HZ;
 306              		.loc 1 155 22 is_stmt 0 view .LVU88
 307 0056 0323     		movs	r3, #3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 13


 308 0058 6373     		strb	r3, [r4, #13]
 156:BMI088/Src/bmi088.c **** 			break;
 309              		.loc 1 156 4 is_stmt 1 view .LVU89
 156:BMI088/Src/bmi088.c **** 			break;
 310              		.loc 1 156 21 is_stmt 0 view .LVU90
 311 005a 2373     		strb	r3, [r4, #12]
 157:BMI088/Src/bmi088.c **** 		default:
 312              		.loc 1 157 4 is_stmt 1 view .LVU91
 313 005c E0E7     		b	.L23
 314              	.L26:
 165:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 315              		.loc 1 165 3 view .LVU92
 165:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 316              		.loc 1 165 10 is_stmt 0 view .LVU93
 317 005e 2046     		mov	r0, r4
 318              	.LVL29:
 165:BMI088/Src/bmi088.c **** 		if (rslt != BMI08X_OK)
 319              		.loc 1 165 10 view .LVU94
 320 0060 FFF7FEFF 		bl	bmi08g_set_meas_conf
 321              	.LVL30:
 166:BMI088/Src/bmi088.c **** 			return rslt;
 322              		.loc 1 166 3 is_stmt 1 view .LVU95
 166:BMI088/Src/bmi088.c **** 			return rslt;
 323              		.loc 1 166 6 is_stmt 0 view .LVU96
 324 0064 0346     		mov	r3, r0
 325 0066 0028     		cmp	r0, #0
 326 0068 DFD1     		bne	.L19
 170:BMI088/Src/bmi088.c **** 		rslt = bmi08a_write_feature_config(BMI08X_ACCEL_DATA_SYNC_ADR, &data[0],
 327              		.loc 1 170 3 is_stmt 1 view .LVU97
 170:BMI088/Src/bmi088.c **** 		rslt = bmi08a_write_feature_config(BMI08X_ACCEL_DATA_SYNC_ADR, &data[0],
 328              		.loc 1 170 28 is_stmt 0 view .LVU98
 329 006a 05F00305 		and	r5, r5, #3
 170:BMI088/Src/bmi088.c **** 		rslt = bmi08a_write_feature_config(BMI08X_ACCEL_DATA_SYNC_ADR, &data[0],
 330              		.loc 1 170 11 view .LVU99
 331 006e ADF80450 		strh	r5, [sp, #4]	@ movhi
 171:BMI088/Src/bmi088.c **** 				BMI08X_ACCEL_DATA_SYNC_LEN, dev);
 332              		.loc 1 171 3 is_stmt 1 view .LVU100
 171:BMI088/Src/bmi088.c **** 				BMI08X_ACCEL_DATA_SYNC_LEN, dev);
 333              		.loc 1 171 10 is_stmt 0 view .LVU101
 334 0072 2346     		mov	r3, r4
 335 0074 0122     		movs	r2, #1
 336 0076 01A9     		add	r1, sp, #4
 337 0078 0220     		movs	r0, #2
 338              	.LVL31:
 171:BMI088/Src/bmi088.c **** 				BMI08X_ACCEL_DATA_SYNC_LEN, dev);
 339              		.loc 1 171 10 view .LVU102
 340 007a FFF7FEFF 		bl	bmi08a_write_feature_config
 341              	.LVL32:
 342 007e 0346     		mov	r3, r0
 343              	.LVL33:
 171:BMI088/Src/bmi088.c **** 				BMI08X_ACCEL_DATA_SYNC_LEN, dev);
 344              		.loc 1 171 10 view .LVU103
 345 0080 D3E7     		b	.L19
 346              		.cfi_endproc
 347              	.LFE2:
 349              		.section	.text.bmi088_configure_anymotion,"ax",%progbits
 350              		.align	1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 14


 351              		.global	bmi088_configure_anymotion
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 356              	bmi088_configure_anymotion:
 357              	.LVL34:
 358              	.LFB3:
 183:BMI088/Src/bmi088.c **** 	int8_t rslt;
 359              		.loc 1 183 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 24
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 183:BMI088/Src/bmi088.c **** 	int8_t rslt;
 363              		.loc 1 183 1 is_stmt 0 view .LVU105
 364 0000 10B5     		push	{r4, lr}
 365              	.LCFI6:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369 0002 86B0     		sub	sp, sp, #24
 370              	.LCFI7:
 371              		.cfi_def_cfa_offset 32
 372 0004 01AC     		add	r4, sp, #4
 373 0006 84E80700 		stm	r4, {r0, r1, r2}
 374 000a 1C46     		mov	r4, r3
 184:BMI088/Src/bmi088.c **** 	uint16_t data[BMI08X_ACCEL_ANYMOTION_LEN];
 375              		.loc 1 184 2 is_stmt 1 view .LVU106
 185:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 376              		.loc 1 185 2 view .LVU107
 187:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 377              		.loc 1 187 2 view .LVU108
 187:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 378              		.loc 1 187 9 is_stmt 0 view .LVU109
 379 000c 1846     		mov	r0, r3
 380 000e FFF7FEFF 		bl	null_ptr_check
 381              	.LVL35:
 189:BMI088/Src/bmi088.c **** 		/* Enable data synchronization */
 382              		.loc 1 189 2 is_stmt 1 view .LVU110
 189:BMI088/Src/bmi088.c **** 		/* Enable data synchronization */
 383              		.loc 1 189 5 is_stmt 0 view .LVU111
 384 0012 08B1     		cbz	r0, .L30
 385              	.LVL36:
 386              	.L28:
 205:BMI088/Src/bmi088.c **** }
 387              		.loc 1 205 2 is_stmt 1 view .LVU112
 206:BMI088/Src/bmi088.c **** 
 388              		.loc 1 206 1 is_stmt 0 view .LVU113
 389 0014 06B0     		add	sp, sp, #24
 390              	.LCFI8:
 391              		.cfi_remember_state
 392              		.cfi_def_cfa_offset 8
 393              		@ sp needed
 394 0016 10BD     		pop	{r4, pc}
 395              	.LVL37:
 396              	.L30:
 397              	.LCFI9:
 398              		.cfi_restore_state
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 15


 191:BMI088/Src/bmi088.c **** 		data[0] |= ((anymotion_cfg.nomotion_sel << BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_SHIFT) &
 399              		.loc 1 191 3 is_stmt 1 view .LVU114
 191:BMI088/Src/bmi088.c **** 		data[0] |= ((anymotion_cfg.nomotion_sel << BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_SHIFT) &
 400              		.loc 1 191 27 is_stmt 0 view .LVU115
 401 0018 BDF80430 		ldrh	r3, [sp, #4]
 191:BMI088/Src/bmi088.c **** 		data[0] |= ((anymotion_cfg.nomotion_sel << BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_SHIFT) &
 402              		.loc 1 191 38 view .LVU116
 403 001c C3F30A02 		ubfx	r2, r3, #0, #11
 191:BMI088/Src/bmi088.c **** 		data[0] |= ((anymotion_cfg.nomotion_sel << BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_SHIFT) &
 404              		.loc 1 191 11 view .LVU117
 405 0020 ADF81420 		strh	r2, [sp, #20]	@ movhi
 192:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_MASK);
 406              		.loc 1 192 3 is_stmt 1 view .LVU118
 192:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_MASK);
 407              		.loc 1 192 29 is_stmt 0 view .LVU119
 408 0024 BDF80630 		ldrh	r3, [sp, #6]
 192:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_MASK);
 409              		.loc 1 192 43 view .LVU120
 410 0028 DB02     		lsls	r3, r3, #11
 192:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_MASK);
 411              		.loc 1 192 89 view .LVU121
 412 002a 03F40063 		and	r3, r3, #2048
 192:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_NOMOTION_SEL_MASK);
 413              		.loc 1 192 11 view .LVU122
 414 002e 1343     		orrs	r3, r3, r2
 415 0030 ADF81430 		strh	r3, [sp, #20]	@ movhi
 194:BMI088/Src/bmi088.c **** 		data[1] |= ((anymotion_cfg.x_en << BMI08X_ACCEL_ANYMOTION_X_EN_SHIFT) &
 416              		.loc 1 194 3 is_stmt 1 view .LVU123
 194:BMI088/Src/bmi088.c **** 		data[1] |= ((anymotion_cfg.x_en << BMI08X_ACCEL_ANYMOTION_X_EN_SHIFT) &
 417              		.loc 1 194 27 is_stmt 0 view .LVU124
 418 0034 BDF80820 		ldrh	r2, [sp, #8]
 194:BMI088/Src/bmi088.c **** 		data[1] |= ((anymotion_cfg.x_en << BMI08X_ACCEL_ANYMOTION_X_EN_SHIFT) &
 419              		.loc 1 194 37 view .LVU125
 420 0038 C2F30C03 		ubfx	r3, r2, #0, #13
 194:BMI088/Src/bmi088.c **** 		data[1] |= ((anymotion_cfg.x_en << BMI08X_ACCEL_ANYMOTION_X_EN_SHIFT) &
 421              		.loc 1 194 11 view .LVU126
 422 003c ADF81630 		strh	r3, [sp, #22]	@ movhi
 195:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_X_EN_MASK);
 423              		.loc 1 195 3 is_stmt 1 view .LVU127
 195:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_X_EN_MASK);
 424              		.loc 1 195 29 is_stmt 0 view .LVU128
 425 0040 BDF80A20 		ldrh	r2, [sp, #10]
 195:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_X_EN_MASK);
 426              		.loc 1 195 35 view .LVU129
 427 0044 5203     		lsls	r2, r2, #13
 195:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_X_EN_MASK);
 428              		.loc 1 195 73 view .LVU130
 429 0046 02F40052 		and	r2, r2, #8192
 195:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_X_EN_MASK);
 430              		.loc 1 195 11 view .LVU131
 431 004a 1A43     		orrs	r2, r2, r3
 432 004c ADF81620 		strh	r2, [sp, #22]	@ movhi
 197:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Y_EN_MASK);
 433              		.loc 1 197 3 is_stmt 1 view .LVU132
 197:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Y_EN_MASK);
 434              		.loc 1 197 29 is_stmt 0 view .LVU133
 435 0050 BDF80C30 		ldrh	r3, [sp, #12]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 16


 197:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Y_EN_MASK);
 436              		.loc 1 197 35 view .LVU134
 437 0054 9B03     		lsls	r3, r3, #14
 197:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Y_EN_MASK);
 438              		.loc 1 197 73 view .LVU135
 439 0056 03F48043 		and	r3, r3, #16384
 197:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Y_EN_MASK);
 440              		.loc 1 197 11 view .LVU136
 441 005a 1A43     		orrs	r2, r2, r3
 442 005c ADF81620 		strh	r2, [sp, #22]	@ movhi
 199:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Z_EN_MASK);
 443              		.loc 1 199 3 is_stmt 1 view .LVU137
 199:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Z_EN_MASK);
 444              		.loc 1 199 29 is_stmt 0 view .LVU138
 445 0060 BDF80E30 		ldrh	r3, [sp, #14]
 199:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_Z_EN_MASK);
 446              		.loc 1 199 11 view .LVU139
 447 0064 42EAC332 		orr	r2, r2, r3, lsl #15
 448 0068 ADF81620 		strh	r2, [sp, #22]	@ movhi
 201:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_LEN, dev);
 449              		.loc 1 201 3 is_stmt 1 view .LVU140
 201:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_LEN, dev);
 450              		.loc 1 201 10 is_stmt 0 view .LVU141
 451 006c 2346     		mov	r3, r4
 452 006e 0222     		movs	r2, #2
 453 0070 05A9     		add	r1, sp, #20
 454 0072 0020     		movs	r0, #0
 455 0074 FFF7FEFF 		bl	bmi08a_write_feature_config
 456              	.LVL38:
 201:BMI088/Src/bmi088.c **** 					BMI08X_ACCEL_ANYMOTION_LEN, dev);
 457              		.loc 1 201 10 view .LVU142
 458 0078 CCE7     		b	.L28
 459              		.cfi_endproc
 460              	.LFE3:
 462              		.section	.text.bmi088_get_synchronized_data,"ax",%progbits
 463              		.align	1
 464              		.global	bmi088_get_synchronized_data
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	bmi088_get_synchronized_data:
 470              	.LVL39:
 471              	.LFB4:
 216:BMI088/Src/bmi088.c **** 	int8_t rslt;
 472              		.loc 1 216 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 216:BMI088/Src/bmi088.c **** 	int8_t rslt;
 476              		.loc 1 216 1 is_stmt 0 view .LVU144
 477 0000 70B5     		push	{r4, r5, r6, lr}
 478              	.LCFI10:
 479              		.cfi_def_cfa_offset 16
 480              		.cfi_offset 4, -16
 481              		.cfi_offset 5, -12
 482              		.cfi_offset 6, -8
 483              		.cfi_offset 14, -4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 17


 484 0002 82B0     		sub	sp, sp, #8
 485              	.LCFI11:
 486              		.cfi_def_cfa_offset 24
 487 0004 0546     		mov	r5, r0
 488 0006 0E46     		mov	r6, r1
 489 0008 1446     		mov	r4, r2
 217:BMI088/Src/bmi088.c **** 	uint8_t reg_addr, data[6];
 490              		.loc 1 217 2 is_stmt 1 view .LVU145
 218:BMI088/Src/bmi088.c **** 	uint8_t lsb, msb;
 491              		.loc 1 218 2 view .LVU146
 219:BMI088/Src/bmi088.c **** 	uint16_t msblsb;
 492              		.loc 1 219 2 view .LVU147
 220:BMI088/Src/bmi088.c **** 	/* Check for null pointer in the device structure */
 493              		.loc 1 220 2 view .LVU148
 222:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 494              		.loc 1 222 2 view .LVU149
 222:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 495              		.loc 1 222 9 is_stmt 0 view .LVU150
 496 000a 1046     		mov	r0, r2
 497              	.LVL40:
 222:BMI088/Src/bmi088.c **** 	/* Proceed if null check is fine */
 498              		.loc 1 222 9 view .LVU151
 499 000c FFF7FEFF 		bl	null_ptr_check
 500              	.LVL41:
 224:BMI088/Src/bmi088.c **** 		/* Read accel x,y sensor data */
 501              		.loc 1 224 2 is_stmt 1 view .LVU152
 224:BMI088/Src/bmi088.c **** 		/* Read accel x,y sensor data */
 502              		.loc 1 224 5 is_stmt 0 view .LVU153
 503 0010 78BB     		cbnz	r0, .L33
 224:BMI088/Src/bmi088.c **** 		/* Read accel x,y sensor data */
 504              		.loc 1 224 26 discriminator 1 view .LVU154
 505 0012 8DB3     		cbz	r5, .L34
 224:BMI088/Src/bmi088.c **** 		/* Read accel x,y sensor data */
 506              		.loc 1 224 45 discriminator 2 view .LVU155
 507 0014 9EB3     		cbz	r6, .L35
 226:BMI088/Src/bmi088.c **** 		rslt = bmi08a_get_regs(reg_addr, &data[0], 4, dev);
 508              		.loc 1 226 3 is_stmt 1 view .LVU156
 509              	.LVL42:
 227:BMI088/Src/bmi088.c **** 
 510              		.loc 1 227 3 view .LVU157
 227:BMI088/Src/bmi088.c **** 
 511              		.loc 1 227 10 is_stmt 0 view .LVU158
 512 0016 2346     		mov	r3, r4
 513 0018 0422     		movs	r2, #4
 514 001a 6946     		mov	r1, sp
 515 001c 1E20     		movs	r0, #30
 516              	.LVL43:
 227:BMI088/Src/bmi088.c **** 
 517              		.loc 1 227 10 view .LVU159
 518 001e FFF7FEFF 		bl	bmi08a_get_regs
 519              	.LVL44:
 229:BMI088/Src/bmi088.c **** 			/* Read accel sensor data */
 520              		.loc 1 229 3 is_stmt 1 view .LVU160
 229:BMI088/Src/bmi088.c **** 			/* Read accel sensor data */
 521              		.loc 1 229 6 is_stmt 0 view .LVU161
 522 0022 08B1     		cbz	r0, .L37
 523              	.LVL45:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 18


 524              	.L32:
 259:BMI088/Src/bmi088.c **** }
 525              		.loc 1 259 2 is_stmt 1 view .LVU162
 260:BMI088/Src/bmi088.c **** /*!
 526              		.loc 1 260 1 is_stmt 0 view .LVU163
 527 0024 02B0     		add	sp, sp, #8
 528              	.LCFI12:
 529              		.cfi_remember_state
 530              		.cfi_def_cfa_offset 16
 531              		@ sp needed
 532 0026 70BD     		pop	{r4, r5, r6, pc}
 533              	.LVL46:
 534              	.L37:
 535              	.LCFI13:
 536              		.cfi_restore_state
 231:BMI088/Src/bmi088.c **** 			rslt = bmi08a_get_regs(reg_addr, &data[4], 2, dev);
 537              		.loc 1 231 4 is_stmt 1 view .LVU164
 232:BMI088/Src/bmi088.c **** 
 538              		.loc 1 232 4 view .LVU165
 232:BMI088/Src/bmi088.c **** 
 539              		.loc 1 232 11 is_stmt 0 view .LVU166
 540 0028 2346     		mov	r3, r4
 541 002a 0222     		movs	r2, #2
 542 002c 01A9     		add	r1, sp, #4
 543 002e 2720     		movs	r0, #39
 544              	.LVL47:
 232:BMI088/Src/bmi088.c **** 
 545              		.loc 1 232 11 view .LVU167
 546 0030 FFF7FEFF 		bl	bmi08a_get_regs
 547              	.LVL48:
 234:BMI088/Src/bmi088.c **** 				lsb = data[0];
 548              		.loc 1 234 4 is_stmt 1 view .LVU168
 234:BMI088/Src/bmi088.c **** 				lsb = data[0];
 549              		.loc 1 234 7 is_stmt 0 view .LVU169
 550 0034 0028     		cmp	r0, #0
 551 0036 F5D1     		bne	.L32
 235:BMI088/Src/bmi088.c **** 				msb = data[1];
 552              		.loc 1 235 5 is_stmt 1 view .LVU170
 235:BMI088/Src/bmi088.c **** 				msb = data[1];
 553              		.loc 1 235 9 is_stmt 0 view .LVU171
 554 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 555              	.LVL49:
 236:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 556              		.loc 1 236 5 is_stmt 1 view .LVU172
 236:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 557              		.loc 1 236 9 is_stmt 0 view .LVU173
 558 003c 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2
 559              	.LVL50:
 237:BMI088/Src/bmi088.c **** 				accel->x = ((int16_t) msblsb); /* Data in X axis */
 560              		.loc 1 237 5 is_stmt 1 view .LVU174
 237:BMI088/Src/bmi088.c **** 				accel->x = ((int16_t) msblsb); /* Data in X axis */
 561              		.loc 1 237 25 is_stmt 0 view .LVU175
 562 0040 43EA0223 		orr	r3, r3, r2, lsl #8
 563              	.LVL51:
 237:BMI088/Src/bmi088.c **** 				accel->x = ((int16_t) msblsb); /* Data in X axis */
 564              		.loc 1 237 25 view .LVU176
 565 0044 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 19


 566              	.LVL52:
 238:BMI088/Src/bmi088.c **** 
 567              		.loc 1 238 5 is_stmt 1 view .LVU177
 238:BMI088/Src/bmi088.c **** 
 568              		.loc 1 238 14 is_stmt 0 view .LVU178
 569 0046 2B60     		str	r3, [r5]
 570              	.LVL53:
 240:BMI088/Src/bmi088.c **** 				msb = data[3];
 571              		.loc 1 240 5 is_stmt 1 view .LVU179
 240:BMI088/Src/bmi088.c **** 				msb = data[3];
 572              		.loc 1 240 9 is_stmt 0 view .LVU180
 573 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 574              	.LVL54:
 241:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 575              		.loc 1 241 5 is_stmt 1 view .LVU181
 241:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 576              		.loc 1 241 9 is_stmt 0 view .LVU182
 577 004c 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 578              	.LVL55:
 242:BMI088/Src/bmi088.c **** 				accel->y = ((int16_t) msblsb); /* Data in Y axis */
 579              		.loc 1 242 5 is_stmt 1 view .LVU183
 242:BMI088/Src/bmi088.c **** 				accel->y = ((int16_t) msblsb); /* Data in Y axis */
 580              		.loc 1 242 25 is_stmt 0 view .LVU184
 581 0050 43EA0223 		orr	r3, r3, r2, lsl #8
 582              	.LVL56:
 242:BMI088/Src/bmi088.c **** 				accel->y = ((int16_t) msblsb); /* Data in Y axis */
 583              		.loc 1 242 25 view .LVU185
 584 0054 1BB2     		sxth	r3, r3
 585              	.LVL57:
 243:BMI088/Src/bmi088.c **** 
 586              		.loc 1 243 5 is_stmt 1 view .LVU186
 243:BMI088/Src/bmi088.c **** 
 587              		.loc 1 243 14 is_stmt 0 view .LVU187
 588 0056 6B60     		str	r3, [r5, #4]
 245:BMI088/Src/bmi088.c **** 				msb = data[5];
 589              		.loc 1 245 5 is_stmt 1 view .LVU188
 245:BMI088/Src/bmi088.c **** 				msb = data[5];
 590              		.loc 1 245 9 is_stmt 0 view .LVU189
 591 0058 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 592              	.LVL58:
 246:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 593              		.loc 1 246 5 is_stmt 1 view .LVU190
 246:BMI088/Src/bmi088.c **** 				msblsb = (msb << 8) | lsb;
 594              		.loc 1 246 9 is_stmt 0 view .LVU191
 595 005c 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 596              	.LVL59:
 247:BMI088/Src/bmi088.c **** 				accel->z = ((int16_t) msblsb); /* Data in Z axis */
 597              		.loc 1 247 5 is_stmt 1 view .LVU192
 247:BMI088/Src/bmi088.c **** 				accel->z = ((int16_t) msblsb); /* Data in Z axis */
 598              		.loc 1 247 25 is_stmt 0 view .LVU193
 599 0060 43EA0223 		orr	r3, r3, r2, lsl #8
 600              	.LVL60:
 247:BMI088/Src/bmi088.c **** 				accel->z = ((int16_t) msblsb); /* Data in Z axis */
 601              		.loc 1 247 25 view .LVU194
 602 0064 1BB2     		sxth	r3, r3
 603              	.LVL61:
 248:BMI088/Src/bmi088.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 20


 604              		.loc 1 248 5 is_stmt 1 view .LVU195
 248:BMI088/Src/bmi088.c **** 
 605              		.loc 1 248 14 is_stmt 0 view .LVU196
 606 0066 AB60     		str	r3, [r5, #8]
 251:BMI088/Src/bmi088.c **** 			}
 607              		.loc 1 251 5 is_stmt 1 view .LVU197
 251:BMI088/Src/bmi088.c **** 			}
 608              		.loc 1 251 12 is_stmt 0 view .LVU198
 609 0068 2146     		mov	r1, r4
 610 006a 3046     		mov	r0, r6
 611              	.LVL62:
 251:BMI088/Src/bmi088.c **** 			}
 612              		.loc 1 251 12 view .LVU199
 613 006c FFF7FEFF 		bl	bmi08g_get_data
 614              	.LVL63:
 251:BMI088/Src/bmi088.c **** 			}
 615              		.loc 1 251 12 view .LVU200
 616 0070 D8E7     		b	.L32
 617              	.LVL64:
 618              	.L33:
 256:BMI088/Src/bmi088.c **** 	}
 619              		.loc 1 256 8 view .LVU201
 620 0072 4FF0FF30 		mov	r0, #-1
 621              	.LVL65:
 256:BMI088/Src/bmi088.c **** 	}
 622              		.loc 1 256 8 view .LVU202
 623 0076 D5E7     		b	.L32
 624              	.LVL66:
 625              	.L34:
 256:BMI088/Src/bmi088.c **** 	}
 626              		.loc 1 256 8 view .LVU203
 627 0078 4FF0FF30 		mov	r0, #-1
 628              	.LVL67:
 256:BMI088/Src/bmi088.c **** 	}
 629              		.loc 1 256 8 view .LVU204
 630 007c D2E7     		b	.L32
 631              	.LVL68:
 632              	.L35:
 256:BMI088/Src/bmi088.c **** 	}
 633              		.loc 1 256 8 view .LVU205
 634 007e 4FF0FF30 		mov	r0, #-1
 635              	.LVL69:
 256:BMI088/Src/bmi088.c **** 	}
 636              		.loc 1 256 8 view .LVU206
 637 0082 CFE7     		b	.L32
 638              		.cfi_endproc
 639              	.LFE4:
 641              		.section	.text.bmi088_set_data_sync_int_config,"ax",%progbits
 642              		.align	1
 643              		.global	bmi088_set_data_sync_int_config
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 648              	bmi088_set_data_sync_int_config:
 649              	.LVL70:
 650              	.LFB5:
 268:BMI088/Src/bmi088.c **** 	int8_t rslt;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 21


 651              		.loc 1 268 1 is_stmt 1 view -0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 268:BMI088/Src/bmi088.c **** 	int8_t rslt;
 655              		.loc 1 268 1 is_stmt 0 view .LVU208
 656 0000 38B5     		push	{r3, r4, r5, lr}
 657              	.LCFI14:
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 3, -16
 660              		.cfi_offset 4, -12
 661              		.cfi_offset 5, -8
 662              		.cfi_offset 14, -4
 663 0002 0446     		mov	r4, r0
 664 0004 0D46     		mov	r5, r1
 269:BMI088/Src/bmi088.c **** 	/*configure accel sync data ready interrupt configuration*/
 665              		.loc 1 269 2 is_stmt 1 view .LVU209
 271:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 666              		.loc 1 271 2 view .LVU210
 271:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 667              		.loc 1 271 9 is_stmt 0 view .LVU211
 668 0006 FFF7FEFF 		bl	bmi08a_set_int_config
 669              	.LVL71:
 272:BMI088/Src/bmi088.c **** 		return rslt;
 670              		.loc 1 272 2 is_stmt 1 view .LVU212
 272:BMI088/Src/bmi088.c **** 		return rslt;
 671              		.loc 1 272 5 is_stmt 0 view .LVU213
 672 000a 0346     		mov	r3, r0
 673 000c 08B1     		cbz	r0, .L41
 674              	.LVL72:
 675              	.L39:
 287:BMI088/Src/bmi088.c **** 
 676              		.loc 1 287 1 view .LVU214
 677 000e 1846     		mov	r0, r3
 678 0010 38BD     		pop	{r3, r4, r5, pc}
 679              	.LVL73:
 680              	.L41:
 275:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 681              		.loc 1 275 2 is_stmt 1 view .LVU215
 275:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 682              		.loc 1 275 9 is_stmt 0 view .LVU216
 683 0012 2946     		mov	r1, r5
 684 0014 E01C     		adds	r0, r4, #3
 685              	.LVL74:
 275:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 686              		.loc 1 275 9 view .LVU217
 687 0016 FFF7FEFF 		bl	bmi08a_set_int_config
 688              	.LVL75:
 276:BMI088/Src/bmi088.c **** 		return rslt;
 689              		.loc 1 276 2 is_stmt 1 view .LVU218
 276:BMI088/Src/bmi088.c **** 		return rslt;
 690              		.loc 1 276 5 is_stmt 0 view .LVU219
 691 001a 0346     		mov	r3, r0
 692 001c 0028     		cmp	r0, #0
 693 001e F6D1     		bne	.L39
 280:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 694              		.loc 1 280 2 is_stmt 1 view .LVU220
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 22


 280:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 695              		.loc 1 280 9 is_stmt 0 view .LVU221
 696 0020 2946     		mov	r1, r5
 697 0022 A01D     		adds	r0, r4, #6
 698              	.LVL76:
 280:BMI088/Src/bmi088.c **** 	if (rslt != BMI08X_OK)
 699              		.loc 1 280 9 view .LVU222
 700 0024 FFF7FEFF 		bl	bmi08g_set_int_config
 701              	.LVL77:
 281:BMI088/Src/bmi088.c **** 		return rslt;
 702              		.loc 1 281 2 is_stmt 1 view .LVU223
 281:BMI088/Src/bmi088.c **** 		return rslt;
 703              		.loc 1 281 5 is_stmt 0 view .LVU224
 704 0028 0346     		mov	r3, r0
 705 002a 0028     		cmp	r0, #0
 706 002c EFD1     		bne	.L39
 284:BMI088/Src/bmi088.c **** 
 707              		.loc 1 284 2 is_stmt 1 view .LVU225
 284:BMI088/Src/bmi088.c **** 
 708              		.loc 1 284 9 is_stmt 0 view .LVU226
 709 002e 2946     		mov	r1, r5
 710 0030 04F10900 		add	r0, r4, #9
 711              	.LVL78:
 284:BMI088/Src/bmi088.c **** 
 712              		.loc 1 284 9 view .LVU227
 713 0034 FFF7FEFF 		bl	bmi08g_set_int_config
 714              	.LVL79:
 715 0038 0346     		mov	r3, r0
 716              	.LVL80:
 286:BMI088/Src/bmi088.c **** }
 717              		.loc 1 286 2 is_stmt 1 view .LVU228
 286:BMI088/Src/bmi088.c **** }
 718              		.loc 1 286 9 is_stmt 0 view .LVU229
 719 003a E8E7     		b	.L39
 720              		.cfi_endproc
 721              	.LFE5:
 723              		.global	data1
 724              		.section	.bss.data1,"aw",%nobits
 725              		.align	2
 728              	data1:
 729 0000 00000000 		.space	6
 729      0000
 730              		.text
 731              	.Letext0:
 732              		.file 2 "d:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 733              		.file 3 "d:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 734              		.file 4 "BMI088/Inc/bmi08x_defs.h"
 735              		.file 5 "BMI088/Inc/bmi08x.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 bmi088.c
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:18     .text.null_ptr_check:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:23     .text.null_ptr_check:00000000 null_ptr_check
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:86     .text.bmi088_init:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:92     .text.bmi088_init:00000000 bmi088_init
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:132    .text.bmi088_apply_config_file:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:138    .text.bmi088_apply_config_file:00000000 bmi088_apply_config_file
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:181    .text.bmi088_apply_config_file:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:186    .text.bmi088_configure_data_synchronization:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:192    .text.bmi088_configure_data_synchronization:00000000 bmi088_configure_data_synchronization
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:350    .text.bmi088_configure_anymotion:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:356    .text.bmi088_configure_anymotion:00000000 bmi088_configure_anymotion
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:463    .text.bmi088_get_synchronized_data:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:469    .text.bmi088_get_synchronized_data:00000000 bmi088_get_synchronized_data
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:642    .text.bmi088_set_data_sync_int_config:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:648    .text.bmi088_set_data_sync_int_config:00000000 bmi088_set_data_sync_int_config
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:728    .bss.data1:00000000 data1
C:\Users\Lenovo\AppData\Local\Temp\ccFchJq2.s:725    .bss.data1:00000000 $d

UNDEFINED SYMBOLS
bmi08a_init
bmi08g_init
bmi08a_write_config_file
bmi08x_config_file
bmi08a_set_meas_conf
bmi08g_set_meas_conf
bmi08a_write_feature_config
bmi08a_get_regs
bmi08g_get_data
bmi08a_set_int_config
bmi08g_set_int_config
