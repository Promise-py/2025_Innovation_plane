ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Movebase.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fcmplt
  18              		.section	.text.ABS,"ax",%progbits
  19              		.align	1
  20              		.global	ABS
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	ABS:
  26              	.LVL0:
  27              	.LFB129:
  28              		.file 1 "move/Src/Movebase.c"
   1:move/Src/Movebase.c **** #include "Movebase.h"
   2:move/Src/Movebase.c **** #include <stdint.h>
   3:move/Src/Movebase.c **** #include "command.h"
   4:move/Src/Movebase.c **** #include "trilateration.h"
   5:move/Src/Movebase.c **** #include "data_pool.h"
   6:move/Src/Movebase.c **** #include "pid.h"
   7:move/Src/Movebase.c **** #include "usart.h"
   8:move/Src/Movebase.c **** #include "measure.h"
   9:move/Src/Movebase.c **** 
  10:move/Src/Movebase.c **** 
  11:move/Src/Movebase.c **** UWB_Data data;
  12:move/Src/Movebase.c **** pid point_pid;
  13:move/Src/Movebase.c **** pid height_pid;
  14:move/Src/Movebase.c **** 
  15:move/Src/Movebase.c **** float Plane_V[3] = {0,0,0};
  16:move/Src/Movebase.c **** uint8_t command[8] = {0x66,0x80,0x80,0x80,0x80,0x00,0x00,0x99};
  17:move/Src/Movebase.c **** 
  18:move/Src/Movebase.c **** float ABS(float a)
  19:move/Src/Movebase.c **** {
  29              		.loc 1 19 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 19 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 2


  20:move/Src/Movebase.c ****     if(a < 0)
  40              		.loc 1 20 5 is_stmt 1 view .LVU2
  41              		.loc 1 20 7 is_stmt 0 view .LVU3
  42 0004 0021     		movs	r1, #0
  43 0006 FFF7FEFF 		bl	__aeabi_fcmplt
  44              	.LVL1:
  45              		.loc 1 20 7 view .LVU4
  46 000a 08B9     		cbnz	r0, .L6
  47              	.LVL2:
  48              	.L2:
  21:move/Src/Movebase.c ****         return -a;
  22:move/Src/Movebase.c ****     else
  23:move/Src/Movebase.c ****         return a;
  24:move/Src/Movebase.c **** }
  49              		.loc 1 24 1 view .LVU5
  50 000c 2046     		mov	r0, r4
  51 000e 10BD     		pop	{r4, pc}
  52              	.LVL3:
  53              	.L6:
  21:move/Src/Movebase.c ****         return -a;
  54              		.loc 1 21 9 is_stmt 1 view .LVU6
  21:move/Src/Movebase.c ****         return -a;
  55              		.loc 1 21 16 is_stmt 0 view .LVU7
  56 0010 04F10044 		add	r4, r4, #-2147483648
  57              	.LVL4:
  21:move/Src/Movebase.c ****         return -a;
  58              		.loc 1 21 16 view .LVU8
  59 0014 FAE7     		b	.L2
  60              		.cfi_endproc
  61              	.LFE129:
  63              		.section	.text.Fly_init,"ax",%progbits
  64              		.align	1
  65              		.global	Fly_init
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	Fly_init:
  71              	.LFB130:
  25:move/Src/Movebase.c **** 
  26:move/Src/Movebase.c **** void Fly_init(void)
  27:move/Src/Movebase.c **** {
  72              		.loc 1 27 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 4, -8
  80              		.cfi_offset 14, -4
  81 0002 84B0     		sub	sp, sp, #16
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 24
  28:move/Src/Movebase.c ****     PID_parameter_init(&point_pid,1.0f,0.3f, 0.5f, 128, 0, 0.005);
  84              		.loc 1 28 5 view .LVU10
  85 0004 0D4B     		ldr	r3, .L9
  86 0006 0293     		str	r3, [sp, #8]	@ float
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 3


  87 0008 0024     		movs	r4, #0
  88 000a 0194     		str	r4, [sp, #4]	@ float
  89 000c 4FF08643 		mov	r3, #1124073472
  90 0010 0093     		str	r3, [sp]	@ float
  91 0012 4FF07C53 		mov	r3, #1056964608
  92 0016 0A4A     		ldr	r2, .L9+4
  93 0018 4FF07E51 		mov	r1, #1065353216
  94 001c 0948     		ldr	r0, .L9+8
  95 001e FFF7FEFF 		bl	PID_parameter_init
  96              	.LVL5:
  29:move/Src/Movebase.c **** 
  30:move/Src/Movebase.c ****     PID_parameter_init(&height_pid,6.0f,0.1f, 0.2f, 90, 0, 50);
  97              		.loc 1 30 5 view .LVU11
  98 0022 094B     		ldr	r3, .L9+12
  99 0024 0293     		str	r3, [sp, #8]	@ float
 100 0026 0194     		str	r4, [sp, #4]	@ float
 101 0028 084B     		ldr	r3, .L9+16
 102 002a 0093     		str	r3, [sp]	@ float
 103 002c 084B     		ldr	r3, .L9+20
 104 002e 094A     		ldr	r2, .L9+24
 105 0030 0949     		ldr	r1, .L9+28
 106 0032 0A48     		ldr	r0, .L9+32
 107 0034 FFF7FEFF 		bl	PID_parameter_init
 108              	.LVL6:
  31:move/Src/Movebase.c **** }
 109              		.loc 1 31 1 is_stmt 0 view .LVU12
 110 0038 04B0     		add	sp, sp, #16
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 8
 113              		@ sp needed
 114 003a 10BD     		pop	{r4, pc}
 115              	.L10:
 116              		.align	2
 117              	.L9:
 118 003c 0AD7A33B 		.word	1000593162
 119 0040 9A99993E 		.word	1050253722
 120 0044 00000000 		.word	.LANCHOR0
 121 0048 00004842 		.word	1112014848
 122 004c 0000B442 		.word	1119092736
 123 0050 CDCC4C3E 		.word	1045220557
 124 0054 CDCCCC3D 		.word	1036831949
 125 0058 0000C040 		.word	1086324736
 126 005c 00000000 		.word	.LANCHOR1
 127              		.cfi_endproc
 128              	.LFE130:
 130              		.section	.text.StartFly,"ax",%progbits
 131              		.align	1
 132              		.global	StartFly
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 137              	StartFly:
 138              	.LFB133:
  32:move/Src/Movebase.c **** 
  33:move/Src/Movebase.c **** 
  34:move/Src/Movebase.c **** int q;
  35:move/Src/Movebase.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 4


  36:move/Src/Movebase.c **** uint8_t LockZ(void)
  37:move/Src/Movebase.c **** {
  38:move/Src/Movebase.c ****     command[3]= (uint8_t)(160);
  39:move/Src/Movebase.c ****     command[6] = calculate_xor_checksum(command+1, 5);
  40:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
  41:move/Src/Movebase.c **** }
  42:move/Src/Movebase.c **** 
  43:move/Src/Movebase.c **** uint8_t Fly_KEEP(float height)
  44:move/Src/Movebase.c **** {
  45:move/Src/Movebase.c ****     float pos_z;
  46:move/Src/Movebase.c ****     if(xQueueReceiveFromISR(HIGH_RxPort, &pos_z, 0) == pdPASS)
  47:move/Src/Movebase.c ****     {
  48:move/Src/Movebase.c ****         // q++;
  49:move/Src/Movebase.c ****         float height_error = 0;
  50:move/Src/Movebase.c ****         height_error=height-pos_z;
  51:move/Src/Movebase.c ****         PID_position_PID_calculation_by_error(&height_pid, height_error);
  52:move/Src/Movebase.c ****         command[4] = 128;//不转动
  53:move/Src/Movebase.c ****         command[3]= (uint8_t)(height_pid.output+165);
  54:move/Src/Movebase.c ****         command[6] = calculate_xor_checksum(command+1, 5);
  55:move/Src/Movebase.c ****         HAL_UART_Transmit(&huart3, command, 8, 1000);
  56:move/Src/Movebase.c ****         // command[3]= (uint8_t)(180);
  57:move/Src/Movebase.c ****         // command[3]= (uint8_t)(255);
  58:move/Src/Movebase.c ****        
  59:move/Src/Movebase.c ****     }
  60:move/Src/Movebase.c **** 
  61:move/Src/Movebase.c ****     // command[3]=0xFF;
  62:move/Src/Movebase.c ****     // command[6] = calculate_xor_checksum(command+1, 5);
  63:move/Src/Movebase.c ****     // HAL_UART_Transmit(&huart3, command, 8, 1000);
  64:move/Src/Movebase.c **** 
  65:move/Src/Movebase.c ****     // HAL_Delay(3000);
  66:move/Src/Movebase.c **** 
  67:move/Src/Movebase.c ****     // command[3]=0x80;
  68:move/Src/Movebase.c ****     // command[6] = calculate_xor_checksum(command+1, 5);
  69:move/Src/Movebase.c ****     // HAL_UART_Transmit(&huart3, command, 8, 1000);
  70:move/Src/Movebase.c **** 
  71:move/Src/Movebase.c ****     // command[4] = 0x80;//不转动
  72:move/Src/Movebase.c ****     // command[3]= (uint8_t)(165);
  73:move/Src/Movebase.c ****     // command[6] = calculate_xor_checksum(command+1, 5);
  74:move/Src/Movebase.c ****     // // uint8_t up[8] = {0x66, 0x80 ,0x80 ,0xFF ,0x80 ,0x00 ,0x7F ,0x99};
  75:move/Src/Movebase.c ****     // HAL_UART_Transmit(&huart3, command, 8, 1000);
  76:move/Src/Movebase.c ****     return 1;
  77:move/Src/Movebase.c **** }
  78:move/Src/Movebase.c **** 
  79:move/Src/Movebase.c **** 
  80:move/Src/Movebase.c **** 
  81:move/Src/Movebase.c **** uint8_t  StartFly(void)
  82:move/Src/Movebase.c **** {
 139              		.loc 1 82 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 24
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143 0000 70B5     		push	{r4, r5, r6, lr}
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 16
 146              		.cfi_offset 4, -16
 147              		.cfi_offset 5, -12
 148              		.cfi_offset 6, -8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 5


 149              		.cfi_offset 14, -4
 150 0002 86B0     		sub	sp, sp, #24
 151              	.LCFI5:
 152              		.cfi_def_cfa_offset 40
  83:move/Src/Movebase.c ****     uint8_t Height[8] = {0x66, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x99};
 153              		.loc 1 83 5 view .LVU14
 154              		.loc 1 83 13 is_stmt 0 view .LVU15
 155 0004 1D4B     		ldr	r3, .L13
 156 0006 04AE     		add	r6, sp, #16
 157 0008 93E80300 		ldm	r3, {r0, r1}
 158 000c 86E80300 		stm	r6, {r0, r1}
  84:move/Src/Movebase.c ****     uint8_t up[8] = {0x66, 0x80 ,0x80 ,0xFF ,0x80 ,0x00 ,0x7F ,0x99};
 159              		.loc 1 84 5 is_stmt 1 view .LVU16
 160              		.loc 1 84 13 is_stmt 0 view .LVU17
 161 0010 02AD     		add	r5, sp, #8
 162 0012 03F10802 		add	r2, r3, #8
 163 0016 92E80300 		ldm	r2, {r0, r1}
 164 001a 85E80300 		stm	r5, {r0, r1}
  85:move/Src/Movebase.c ****     uint8_t down[8] = {0x66, 0x80 ,0x80 ,0x00 ,0x80 ,0x00 ,0x80 ,0x99};
 165              		.loc 1 85 5 is_stmt 1 view .LVU18
 166              		.loc 1 85 13 is_stmt 0 view .LVU19
 167 001e 6A46     		mov	r2, sp
 168 0020 1033     		adds	r3, r3, #16
 169 0022 93E80300 		ldm	r3, {r0, r1}
 170 0026 82E80300 		stm	r2, {r0, r1}
  86:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, Height, 8, 1000);
 171              		.loc 1 86 5 is_stmt 1 view .LVU20
 172 002a 154C     		ldr	r4, .L13+4
 173 002c 4FF47A73 		mov	r3, #1000
 174 0030 0822     		movs	r2, #8
 175 0032 3146     		mov	r1, r6
 176 0034 2046     		mov	r0, r4
 177 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 178              	.LVL7:
  87:move/Src/Movebase.c ****     HAL_Delay(10);
 179              		.loc 1 87 5 view .LVU21
 180 003a 0A20     		movs	r0, #10
 181 003c FFF7FEFF 		bl	HAL_Delay
 182              	.LVL8:
  88:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, up, 8, 1000);
 183              		.loc 1 88 5 view .LVU22
 184 0040 4FF47A73 		mov	r3, #1000
 185 0044 0822     		movs	r2, #8
 186 0046 2946     		mov	r1, r5
 187 0048 2046     		mov	r0, r4
 188 004a FFF7FEFF 		bl	HAL_UART_Transmit
 189              	.LVL9:
  89:move/Src/Movebase.c ****     HAL_Delay(10);
 190              		.loc 1 89 5 view .LVU23
 191 004e 0A20     		movs	r0, #10
 192 0050 FFF7FEFF 		bl	HAL_Delay
 193              	.LVL10:
  90:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, Height, 8, 1000);
 194              		.loc 1 90 5 view .LVU24
 195 0054 4FF47A73 		mov	r3, #1000
 196 0058 0822     		movs	r2, #8
 197 005a 3146     		mov	r1, r6
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 6


 198 005c 2046     		mov	r0, r4
 199 005e FFF7FEFF 		bl	HAL_UART_Transmit
 200              	.LVL11:
  91:move/Src/Movebase.c ****     HAL_Delay(10);
 201              		.loc 1 91 5 view .LVU25
 202 0062 0A20     		movs	r0, #10
 203 0064 FFF7FEFF 		bl	HAL_Delay
 204              	.LVL12:
  92:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, up, 8, 1000);
 205              		.loc 1 92 5 view .LVU26
 206 0068 4FF47A73 		mov	r3, #1000
 207 006c 0822     		movs	r2, #8
 208 006e 2946     		mov	r1, r5
 209 0070 2046     		mov	r0, r4
 210 0072 FFF7FEFF 		bl	HAL_UART_Transmit
 211              	.LVL13:
  93:move/Src/Movebase.c ****     // HAL_Delay(10);
  94:move/Src/Movebase.c ****     // HAL_UART_Transmit(&huart3, down, 8, 1000);
  95:move/Src/Movebase.c ****     return 1;
 212              		.loc 1 95 5 view .LVU27
  96:move/Src/Movebase.c **** }
 213              		.loc 1 96 1 is_stmt 0 view .LVU28
 214 0076 0120     		movs	r0, #1
 215 0078 06B0     		add	sp, sp, #24
 216              	.LCFI6:
 217              		.cfi_def_cfa_offset 16
 218              		@ sp needed
 219 007a 70BD     		pop	{r4, r5, r6, pc}
 220              	.L14:
 221              		.align	2
 222              	.L13:
 223 007c 00000000 		.word	.LANCHOR2
 224 0080 00000000 		.word	huart3
 225              		.cfi_endproc
 226              	.LFE133:
 228              		.section	.text.calculate_xor_checksum,"ax",%progbits
 229              		.align	1
 230              		.global	calculate_xor_checksum
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	calculate_xor_checksum:
 236              	.LVL14:
 237              	.LFB135:
  97:move/Src/Movebase.c **** 
  98:move/Src/Movebase.c **** 
  99:move/Src/Movebase.c **** float error;
 100:move/Src/Movebase.c **** 
 101:move/Src/Movebase.c **** /**
 102:move/Src/Movebase.c ****  * @function: PointTrace
 103:move/Src/Movebase.c ****  * @brief: ָ立体点追踪
 104:move/Src/Movebase.c ****  * @param: x,y,z
 105:move/Src/Movebase.c ****  * @param: yaw 锁航向角度
 106:move/Src/Movebase.c ****  * @param: priority xyz坐标追踪顺序
 107:move/Src/Movebase.c ****  * @retval: 0:ing 1:finfish
 108:move/Src/Movebase.c ****  */
 109:move/Src/Movebase.c **** uint8_t PointTrace(float POS_X,float POS_Y,float POS_Z)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 7


 110:move/Src/Movebase.c **** {
 111:move/Src/Movebase.c ****     // YawAdjust(POS_YAW);
 112:move/Src/Movebase.c ****     Fly_KEEP(POS_Z);
 113:move/Src/Movebase.c ****     if(xQueueReceive(UWB_RxPort, &data, 0) == pdPASS)
 114:move/Src/Movebase.c ****     {
 115:move/Src/Movebase.c ****         //计算误差
 116:move/Src/Movebase.c ****         error = sqrt((data.x - POS_X) * (data.x - POS_X) + (data.y - POS_Y) * (data.y - POS_Y));  /
 117:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 118:move/Src/Movebase.c ****         PID_position_PID_calculation_by_error(&point_pid, error);
 119:move/Src/Movebase.c **** 
 120:move/Src/Movebase.c ****         Plane_V[0] =-(float)(point_pid.output * 10.0f*(data.x - POS_X) /error);//x轴
 121:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 122:move/Src/Movebase.c ****         // Plane_V[2] = (float)(point_pid.output * 1.0f*(data.z - POS_Z) /error);//z轴
 123:move/Src/Movebase.c **** 
 124:move/Src/Movebase.c ****         if(ABS(data.x - POS_X)<50 && ABS(data.y- POS_Y)<50)
 125:move/Src/Movebase.c ****         {
 126:move/Src/Movebase.c ****             return 1;
 127:move/Src/Movebase.c ****         }
 128:move/Src/Movebase.c ****         else
 129:move/Src/Movebase.c ****         {
 130:move/Src/Movebase.c ****             Plane_V[0] = 100;
 131:move/Src/Movebase.c ****             Plane_V[1] = 128+Plane_V[1];
 132:move/Src/Movebase.c ****             // Plane_V[2] = 128+Plane_V[2];
 133:move/Src/Movebase.c ****             command[1] = (uint8_t)(Plane_V[0]);
 134:move/Src/Movebase.c ****             command[2] = (uint8_t)(Plane_V[1]);
 135:move/Src/Movebase.c **** 
 136:move/Src/Movebase.c ****             command[4] = 128;//不转动
 137:move/Src/Movebase.c ****             
 138:move/Src/Movebase.c ****             return 0;
 139:move/Src/Movebase.c ****         }
 140:move/Src/Movebase.c ****     }
 141:move/Src/Movebase.c ****     command[6] = calculate_xor_checksum(command+1, 5);
 142:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 143:move/Src/Movebase.c **** 
 144:move/Src/Movebase.c **** 
 145:move/Src/Movebase.c **** 
 146:move/Src/Movebase.c **** }
 147:move/Src/Movebase.c **** 
 148:move/Src/Movebase.c **** 
 149:move/Src/Movebase.c **** unsigned char calculate_xor_checksum(const unsigned char* data, uint8_t length) 
 150:move/Src/Movebase.c **** {
 238              		.loc 1 150 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              		.loc 1 150 1 is_stmt 0 view .LVU30
 244 0000 8446     		mov	ip, r0
 151:move/Src/Movebase.c ****     unsigned char checksum = 0;
 245              		.loc 1 151 5 is_stmt 1 view .LVU31
 246              	.LVL15:
 152:move/Src/Movebase.c ****     for (uint8_t i = 0; i < length; i++) 
 247              		.loc 1 152 5 view .LVU32
 248              	.LBB2:
 249              		.loc 1 152 10 view .LVU33
 250              		.loc 1 152 18 is_stmt 0 view .LVU34
 251 0002 0023     		movs	r3, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 8


 252              	.LBE2:
 151:move/Src/Movebase.c ****     unsigned char checksum = 0;
 253              		.loc 1 151 19 view .LVU35
 254 0004 1846     		mov	r0, r3
 255              	.LVL16:
 256              	.LBB3:
 257              		.loc 1 152 5 view .LVU36
 258 0006 04E0     		b	.L16
 259              	.LVL17:
 260              	.L17:
 153:move/Src/Movebase.c ****     {
 154:move/Src/Movebase.c ****         checksum ^= data[i];
 261              		.loc 1 154 9 is_stmt 1 discriminator 3 view .LVU37
 262              		.loc 1 154 25 is_stmt 0 discriminator 3 view .LVU38
 263 0008 1CF80320 		ldrb	r2, [ip, r3]	@ zero_extendqisi2
 264              		.loc 1 154 18 discriminator 3 view .LVU39
 265 000c 5040     		eors	r0, r0, r2
 266              	.LVL18:
 152:move/Src/Movebase.c ****     for (uint8_t i = 0; i < length; i++) 
 267              		.loc 1 152 37 is_stmt 1 discriminator 3 view .LVU40
 152:move/Src/Movebase.c ****     for (uint8_t i = 0; i < length; i++) 
 268              		.loc 1 152 38 is_stmt 0 discriminator 3 view .LVU41
 269 000e 0133     		adds	r3, r3, #1
 270              	.LVL19:
 152:move/Src/Movebase.c ****     for (uint8_t i = 0; i < length; i++) 
 271              		.loc 1 152 38 discriminator 3 view .LVU42
 272 0010 DBB2     		uxtb	r3, r3
 273              	.LVL20:
 274              	.L16:
 152:move/Src/Movebase.c ****     for (uint8_t i = 0; i < length; i++) 
 275              		.loc 1 152 25 is_stmt 1 discriminator 1 view .LVU43
 152:move/Src/Movebase.c ****     for (uint8_t i = 0; i < length; i++) 
 276              		.loc 1 152 5 is_stmt 0 discriminator 1 view .LVU44
 277 0012 8B42     		cmp	r3, r1
 278 0014 F8D3     		bcc	.L17
 279              	.LBE3:
 155:move/Src/Movebase.c ****     }
 156:move/Src/Movebase.c ****     return checksum;
 280              		.loc 1 156 5 is_stmt 1 view .LVU45
 157:move/Src/Movebase.c **** }
 281              		.loc 1 157 1 is_stmt 0 view .LVU46
 282 0016 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE135:
 286              		.section	.text.LockZ,"ax",%progbits
 287              		.align	1
 288              		.global	LockZ
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 293              	LockZ:
 294              	.LFB131:
  37:move/Src/Movebase.c ****     command[3]= (uint8_t)(160);
 295              		.loc 1 37 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 9


 299 0000 10B5     		push	{r4, lr}
 300              	.LCFI7:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
  38:move/Src/Movebase.c ****     command[6] = calculate_xor_checksum(command+1, 5);
 304              		.loc 1 38 5 view .LVU48
  38:move/Src/Movebase.c ****     command[6] = calculate_xor_checksum(command+1, 5);
 305              		.loc 1 38 15 is_stmt 0 view .LVU49
 306 0002 084C     		ldr	r4, .L20
 307 0004 A023     		movs	r3, #160
 308 0006 E370     		strb	r3, [r4, #3]
  39:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 309              		.loc 1 39 5 is_stmt 1 view .LVU50
  39:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 310              		.loc 1 39 18 is_stmt 0 view .LVU51
 311 0008 0521     		movs	r1, #5
 312 000a 601C     		adds	r0, r4, #1
 313 000c FFF7FEFF 		bl	calculate_xor_checksum
 314              	.LVL21:
  39:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 315              		.loc 1 39 16 view .LVU52
 316 0010 A071     		strb	r0, [r4, #6]
  40:move/Src/Movebase.c **** }
 317              		.loc 1 40 5 is_stmt 1 view .LVU53
 318 0012 4FF47A73 		mov	r3, #1000
 319 0016 0822     		movs	r2, #8
 320 0018 2146     		mov	r1, r4
 321 001a 0348     		ldr	r0, .L20+4
 322 001c FFF7FEFF 		bl	HAL_UART_Transmit
 323              	.LVL22:
  41:move/Src/Movebase.c **** 
 324              		.loc 1 41 1 is_stmt 0 view .LVU54
 325 0020 10BD     		pop	{r4, pc}
 326              	.L21:
 327 0022 00BF     		.align	2
 328              	.L20:
 329 0024 00000000 		.word	.LANCHOR3
 330 0028 00000000 		.word	huart3
 331              		.cfi_endproc
 332              	.LFE131:
 334              		.global	__aeabi_fsub
 335              		.global	__aeabi_fadd
 336              		.global	__aeabi_f2uiz
 337              		.section	.text.Fly_KEEP,"ax",%progbits
 338              		.align	1
 339              		.global	Fly_KEEP
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	Fly_KEEP:
 345              	.LVL23:
 346              	.LFB132:
  44:move/Src/Movebase.c ****     float pos_z;
 347              		.loc 1 44 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 10


 350              		@ frame_needed = 0, uses_anonymous_args = 0
  44:move/Src/Movebase.c ****     float pos_z;
 351              		.loc 1 44 1 is_stmt 0 view .LVU56
 352 0000 30B5     		push	{r4, r5, lr}
 353              	.LCFI8:
 354              		.cfi_def_cfa_offset 12
 355              		.cfi_offset 4, -12
 356              		.cfi_offset 5, -8
 357              		.cfi_offset 14, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              	.LCFI9:
 360              		.cfi_def_cfa_offset 24
 361 0004 0446     		mov	r4, r0
  45:move/Src/Movebase.c ****     if(xQueueReceiveFromISR(HIGH_RxPort, &pos_z, 0) == pdPASS)
 362              		.loc 1 45 5 is_stmt 1 view .LVU57
  46:move/Src/Movebase.c ****     {
 363              		.loc 1 46 5 view .LVU58
  46:move/Src/Movebase.c ****     {
 364              		.loc 1 46 8 is_stmt 0 view .LVU59
 365 0006 0022     		movs	r2, #0
 366 0008 01A9     		add	r1, sp, #4
 367 000a 144B     		ldr	r3, .L26
 368 000c 1868     		ldr	r0, [r3]
 369              	.LVL24:
  46:move/Src/Movebase.c ****     {
 370              		.loc 1 46 8 view .LVU60
 371 000e FFF7FEFF 		bl	xQueueReceiveFromISR
 372              	.LVL25:
  46:move/Src/Movebase.c ****     {
 373              		.loc 1 46 7 view .LVU61
 374 0012 0128     		cmp	r0, #1
 375 0014 02D0     		beq	.L25
 376              	.LVL26:
 377              	.L23:
  76:move/Src/Movebase.c **** }
 378              		.loc 1 76 5 is_stmt 1 view .LVU62
  77:move/Src/Movebase.c **** 
 379              		.loc 1 77 1 is_stmt 0 view .LVU63
 380 0016 0120     		movs	r0, #1
 381 0018 03B0     		add	sp, sp, #12
 382              	.LCFI10:
 383              		.cfi_remember_state
 384              		.cfi_def_cfa_offset 12
 385              		@ sp needed
 386 001a 30BD     		pop	{r4, r5, pc}
 387              	.LVL27:
 388              	.L25:
 389              	.LCFI11:
 390              		.cfi_restore_state
 391              	.LBB4:
  49:move/Src/Movebase.c ****         height_error=height-pos_z;
 392              		.loc 1 49 9 is_stmt 1 view .LVU64
  50:move/Src/Movebase.c ****         PID_position_PID_calculation_by_error(&height_pid, height_error);
 393              		.loc 1 50 9 view .LVU65
  50:move/Src/Movebase.c ****         PID_position_PID_calculation_by_error(&height_pid, height_error);
 394              		.loc 1 50 21 is_stmt 0 view .LVU66
 395 001c 0199     		ldr	r1, [sp, #4]	@ float
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 11


 396 001e 2046     		mov	r0, r4
 397 0020 FFF7FEFF 		bl	__aeabi_fsub
 398              	.LVL28:
 399 0024 0146     		mov	r1, r0
 400              	.LVL29:
  51:move/Src/Movebase.c ****         command[4] = 128;//不转动
 401              		.loc 1 51 9 is_stmt 1 view .LVU67
 402 0026 0E4D     		ldr	r5, .L26+4
 403 0028 2846     		mov	r0, r5
 404              	.LVL30:
  51:move/Src/Movebase.c ****         command[4] = 128;//不转动
 405              		.loc 1 51 9 is_stmt 0 view .LVU68
 406 002a FFF7FEFF 		bl	PID_position_PID_calculation_by_error
 407              	.LVL31:
  52:move/Src/Movebase.c ****         command[3]= (uint8_t)(height_pid.output+165);
 408              		.loc 1 52 9 is_stmt 1 view .LVU69
  52:move/Src/Movebase.c ****         command[3]= (uint8_t)(height_pid.output+165);
 409              		.loc 1 52 20 is_stmt 0 view .LVU70
 410 002e 0D4C     		ldr	r4, .L26+8
 411              	.LVL32:
  52:move/Src/Movebase.c ****         command[3]= (uint8_t)(height_pid.output+165);
 412              		.loc 1 52 20 view .LVU71
 413 0030 8023     		movs	r3, #128
 414 0032 2371     		strb	r3, [r4, #4]
  53:move/Src/Movebase.c ****         command[6] = calculate_xor_checksum(command+1, 5);
 415              		.loc 1 53 9 is_stmt 1 view .LVU72
  53:move/Src/Movebase.c ****         command[6] = calculate_xor_checksum(command+1, 5);
 416              		.loc 1 53 48 is_stmt 0 view .LVU73
 417 0034 0C49     		ldr	r1, .L26+12
 418 0036 686A     		ldr	r0, [r5, #36]	@ float
 419 0038 FFF7FEFF 		bl	__aeabi_fadd
 420              	.LVL33:
  53:move/Src/Movebase.c ****         command[6] = calculate_xor_checksum(command+1, 5);
 421              		.loc 1 53 21 view .LVU74
 422 003c FFF7FEFF 		bl	__aeabi_f2uiz
 423              	.LVL34:
  53:move/Src/Movebase.c ****         command[6] = calculate_xor_checksum(command+1, 5);
 424              		.loc 1 53 19 view .LVU75
 425 0040 E070     		strb	r0, [r4, #3]
  54:move/Src/Movebase.c ****         HAL_UART_Transmit(&huart3, command, 8, 1000);
 426              		.loc 1 54 9 is_stmt 1 view .LVU76
  54:move/Src/Movebase.c ****         HAL_UART_Transmit(&huart3, command, 8, 1000);
 427              		.loc 1 54 22 is_stmt 0 view .LVU77
 428 0042 0521     		movs	r1, #5
 429 0044 601C     		adds	r0, r4, #1
 430 0046 FFF7FEFF 		bl	calculate_xor_checksum
 431              	.LVL35:
  54:move/Src/Movebase.c ****         HAL_UART_Transmit(&huart3, command, 8, 1000);
 432              		.loc 1 54 20 view .LVU78
 433 004a A071     		strb	r0, [r4, #6]
  55:move/Src/Movebase.c ****         // command[3]= (uint8_t)(180);
 434              		.loc 1 55 9 is_stmt 1 view .LVU79
 435 004c 4FF47A73 		mov	r3, #1000
 436 0050 0822     		movs	r2, #8
 437 0052 2146     		mov	r1, r4
 438 0054 0548     		ldr	r0, .L26+16
 439 0056 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 12


 440              	.LVL36:
 441 005a DCE7     		b	.L23
 442              	.L27:
 443              		.align	2
 444              	.L26:
 445 005c 00000000 		.word	HIGH_RxPort
 446 0060 00000000 		.word	.LANCHOR1
 447 0064 00000000 		.word	.LANCHOR3
 448 0068 00002543 		.word	1126498304
 449 006c 00000000 		.word	huart3
 450              	.LBE4:
 451              		.cfi_endproc
 452              	.LFE132:
 454              		.global	__aeabi_f2d
 455              		.global	__aeabi_dsub
 456              		.global	__aeabi_dmul
 457              		.global	__aeabi_dadd
 458              		.global	__aeabi_d2f
 459              		.global	__aeabi_fmul
 460              		.global	__aeabi_ddiv
 461              		.section	.text.PointTrace,"ax",%progbits
 462              		.align	1
 463              		.global	PointTrace
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	PointTrace:
 469              	.LVL37:
 470              	.LFB134:
 110:move/Src/Movebase.c ****     // YawAdjust(POS_YAW);
 471              		.loc 1 110 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 16
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 110:move/Src/Movebase.c ****     // YawAdjust(POS_YAW);
 475              		.loc 1 110 1 is_stmt 0 view .LVU81
 476 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 477              	.LCFI12:
 478              		.cfi_def_cfa_offset 36
 479              		.cfi_offset 4, -36
 480              		.cfi_offset 5, -32
 481              		.cfi_offset 6, -28
 482              		.cfi_offset 7, -24
 483              		.cfi_offset 8, -20
 484              		.cfi_offset 9, -16
 485              		.cfi_offset 10, -12
 486              		.cfi_offset 11, -8
 487              		.cfi_offset 14, -4
 488 0004 85B0     		sub	sp, sp, #20
 489              	.LCFI13:
 490              		.cfi_def_cfa_offset 56
 491 0006 0646     		mov	r6, r0
 492 0008 0C46     		mov	r4, r1
 112:move/Src/Movebase.c ****     if(xQueueReceive(UWB_RxPort, &data, 0) == pdPASS)
 493              		.loc 1 112 5 is_stmt 1 view .LVU82
 494 000a 1046     		mov	r0, r2
 495              	.LVL38:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 13


 112:move/Src/Movebase.c ****     if(xQueueReceive(UWB_RxPort, &data, 0) == pdPASS)
 496              		.loc 1 112 5 is_stmt 0 view .LVU83
 497 000c FFF7FEFF 		bl	Fly_KEEP
 498              	.LVL39:
 113:move/Src/Movebase.c ****     {
 499              		.loc 1 113 5 is_stmt 1 view .LVU84
 113:move/Src/Movebase.c ****     {
 500              		.loc 1 113 8 is_stmt 0 view .LVU85
 501 0010 0022     		movs	r2, #0
 502 0012 5D49     		ldr	r1, .L37
 503 0014 5D4B     		ldr	r3, .L37+4
 504 0016 1868     		ldr	r0, [r3]
 505 0018 FFF7FEFF 		bl	xQueueReceive
 506              	.LVL40:
 113:move/Src/Movebase.c ****     {
 507              		.loc 1 113 7 view .LVU86
 508 001c 0128     		cmp	r0, #1
 509 001e 0FD0     		beq	.L36
 141:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 510              		.loc 1 141 5 is_stmt 1 view .LVU87
 141:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 511              		.loc 1 141 18 is_stmt 0 view .LVU88
 512 0020 5B4C     		ldr	r4, .L37+8
 513              	.LVL41:
 141:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 514              		.loc 1 141 18 view .LVU89
 515 0022 0521     		movs	r1, #5
 516 0024 601C     		adds	r0, r4, #1
 517 0026 FFF7FEFF 		bl	calculate_xor_checksum
 518              	.LVL42:
 141:move/Src/Movebase.c ****     HAL_UART_Transmit(&huart3, command, 8, 1000);
 519              		.loc 1 141 16 view .LVU90
 520 002a A071     		strb	r0, [r4, #6]
 142:move/Src/Movebase.c **** 
 521              		.loc 1 142 5 is_stmt 1 view .LVU91
 522 002c 4FF47A73 		mov	r3, #1000
 523 0030 0822     		movs	r2, #8
 524 0032 2146     		mov	r1, r4
 525 0034 5748     		ldr	r0, .L37+12
 526 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 527              	.LVL43:
 528              	.LVL44:
 529              	.L28:
 146:move/Src/Movebase.c **** 
 530              		.loc 1 146 1 is_stmt 0 view .LVU92
 531 003a 05B0     		add	sp, sp, #20
 532              	.LCFI14:
 533              		.cfi_remember_state
 534              		.cfi_def_cfa_offset 36
 535              		@ sp needed
 536 003c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 537              	.LVL45:
 538              	.L36:
 539              	.LCFI15:
 540              		.cfi_restore_state
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 541              		.loc 1 116 9 is_stmt 1 view .LVU93
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 14


 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 542              		.loc 1 116 27 is_stmt 0 view .LVU94
 543 0040 514D     		ldr	r5, .L37
 544 0042 D5E90089 		ldrd	r8, [r5]
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 545              		.loc 1 116 30 view .LVU95
 546 0046 3046     		mov	r0, r6
 547 0048 FFF7FEFF 		bl	__aeabi_f2d
 548              	.LVL46:
 549 004c 0646     		mov	r6, r0
 550              	.LVL47:
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 551              		.loc 1 116 30 view .LVU96
 552 004e 0F46     		mov	r7, r1
 553 0050 0246     		mov	r2, r0
 554 0052 0B46     		mov	r3, r1
 555 0054 4046     		mov	r0, r8
 556 0056 4946     		mov	r1, r9
 557 0058 FFF7FEFF 		bl	__aeabi_dsub
 558              	.LVL48:
 559 005c 0246     		mov	r2, r0
 560 005e 0B46     		mov	r3, r1
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 561              		.loc 1 116 39 view .LVU97
 562 0060 FFF7FEFF 		bl	__aeabi_dmul
 563              	.LVL49:
 564 0064 8246     		mov	r10, r0
 565 0066 8B46     		mov	fp, r1
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 566              		.loc 1 116 65 view .LVU98
 567 0068 D5E90289 		ldrd	r8, [r5, #8]
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 568              		.loc 1 116 68 view .LVU99
 569 006c 2046     		mov	r0, r4
 570 006e FFF7FEFF 		bl	__aeabi_f2d
 571              	.LVL50:
 572 0072 CDE90001 		strd	r0, [sp]
 573 0076 0246     		mov	r2, r0
 574 0078 0B46     		mov	r3, r1
 575 007a 4046     		mov	r0, r8
 576 007c 4946     		mov	r1, r9
 577 007e FFF7FEFF 		bl	__aeabi_dsub
 578              	.LVL51:
 579 0082 0246     		mov	r2, r0
 580 0084 0B46     		mov	r3, r1
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 581              		.loc 1 116 77 view .LVU100
 582 0086 FFF7FEFF 		bl	__aeabi_dmul
 583              	.LVL52:
 584 008a 0246     		mov	r2, r0
 585 008c 0B46     		mov	r3, r1
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 586              		.loc 1 116 17 view .LVU101
 587 008e 5046     		mov	r0, r10
 588 0090 5946     		mov	r1, fp
 589 0092 FFF7FEFF 		bl	__aeabi_dadd
 590              	.LVL53:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 15


 591 0096 FFF7FEFF 		bl	sqrt
 592              	.LVL54:
 593 009a FFF7FEFF 		bl	__aeabi_d2f
 594              	.LVL55:
 595 009e 0146     		mov	r1, r0
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 596              		.loc 1 116 15 view .LVU102
 597 00a0 3D4C     		ldr	r4, .L37+16
 598              	.LVL56:
 116:move/Src/Movebase.c ****         point_pid.outputmax = 127;
 599              		.loc 1 116 15 view .LVU103
 600 00a2 2060     		str	r0, [r4]	@ float
 117:move/Src/Movebase.c ****         PID_position_PID_calculation_by_error(&point_pid, error);
 601              		.loc 1 117 9 is_stmt 1 view .LVU104
 117:move/Src/Movebase.c ****         PID_position_PID_calculation_by_error(&point_pid, error);
 602              		.loc 1 117 29 is_stmt 0 view .LVU105
 603 00a4 DFF8F480 		ldr	r8, .L37+20
 604 00a8 3D4B     		ldr	r3, .L37+24
 605 00aa C8F82830 		str	r3, [r8, #40]	@ float
 118:move/Src/Movebase.c **** 
 606              		.loc 1 118 9 is_stmt 1 view .LVU106
 607 00ae 4046     		mov	r0, r8
 608 00b0 FFF7FEFF 		bl	PID_position_PID_calculation_by_error
 609              	.LVL57:
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 610              		.loc 1 120 9 view .LVU107
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 611              		.loc 1 120 47 is_stmt 0 view .LVU108
 612 00b4 3B49     		ldr	r1, .L37+28
 613 00b6 D8F82400 		ldr	r0, [r8, #36]	@ float
 614 00ba FFF7FEFF 		bl	__aeabi_fmul
 615              	.LVL58:
 616 00be FFF7FEFF 		bl	__aeabi_f2d
 617              	.LVL59:
 618 00c2 8046     		mov	r8, r0
 619 00c4 8946     		mov	r9, r1
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 620              		.loc 1 120 63 view .LVU109
 621 00c6 3246     		mov	r2, r6
 622 00c8 3B46     		mov	r3, r7
 623 00ca D5E90001 		ldrd	r0, [r5]
 624 00ce FFF7FEFF 		bl	__aeabi_dsub
 625              	.LVL60:
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 626              		.loc 1 120 54 view .LVU110
 627 00d2 CDE90201 		strd	r0, [sp, #8]
 628 00d6 0246     		mov	r2, r0
 629 00d8 0B46     		mov	r3, r1
 630 00da 4046     		mov	r0, r8
 631 00dc 4946     		mov	r1, r9
 632 00de FFF7FEFF 		bl	__aeabi_dmul
 633              	.LVL61:
 634 00e2 0646     		mov	r6, r0
 635 00e4 0F46     		mov	r7, r1
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 636              		.loc 1 120 72 view .LVU111
 637 00e6 2068     		ldr	r0, [r4]	@ float
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 16


 638 00e8 FFF7FEFF 		bl	__aeabi_f2d
 639              	.LVL62:
 640 00ec 8246     		mov	r10, r0
 641 00ee 8B46     		mov	fp, r1
 642 00f0 0246     		mov	r2, r0
 643 00f2 0B46     		mov	r3, r1
 644 00f4 3046     		mov	r0, r6
 645 00f6 3946     		mov	r1, r7
 646 00f8 FFF7FEFF 		bl	__aeabi_ddiv
 647              	.LVL63:
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 648              		.loc 1 120 22 view .LVU112
 649 00fc FFF7FEFF 		bl	__aeabi_d2f
 650              	.LVL64:
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 651              		.loc 1 120 21 view .LVU113
 652 0100 00F10040 		add	r0, r0, #-2147483648
 120:move/Src/Movebase.c ****         Plane_V[1] = (float)(point_pid.output * 10.0f*(data.y - POS_Y) /error);//y轴
 653              		.loc 1 120 20 view .LVU114
 654 0104 284E     		ldr	r6, .L37+32
 655 0106 3060     		str	r0, [r6]	@ float
 121:move/Src/Movebase.c ****         // Plane_V[2] = (float)(point_pid.output * 1.0f*(data.z - POS_Z) /error);//z轴
 656              		.loc 1 121 9 is_stmt 1 view .LVU115
 121:move/Src/Movebase.c ****         // Plane_V[2] = (float)(point_pid.output * 1.0f*(data.z - POS_Z) /error);//z轴
 657              		.loc 1 121 63 is_stmt 0 view .LVU116
 658 0108 DDE90023 		ldrd	r2, [sp]
 659 010c D5E90201 		ldrd	r0, [r5, #8]
 660 0110 FFF7FEFF 		bl	__aeabi_dsub
 661              	.LVL65:
 662 0114 0446     		mov	r4, r0
 663 0116 0D46     		mov	r5, r1
 121:move/Src/Movebase.c ****         // Plane_V[2] = (float)(point_pid.output * 1.0f*(data.z - POS_Z) /error);//z轴
 664              		.loc 1 121 54 view .LVU117
 665 0118 0246     		mov	r2, r0
 666 011a 0B46     		mov	r3, r1
 667 011c 4046     		mov	r0, r8
 668 011e 4946     		mov	r1, r9
 669 0120 FFF7FEFF 		bl	__aeabi_dmul
 670              	.LVL66:
 121:move/Src/Movebase.c ****         // Plane_V[2] = (float)(point_pid.output * 1.0f*(data.z - POS_Z) /error);//z轴
 671              		.loc 1 121 72 view .LVU118
 672 0124 5246     		mov	r2, r10
 673 0126 5B46     		mov	r3, fp
 674 0128 FFF7FEFF 		bl	__aeabi_ddiv
 675              	.LVL67:
 121:move/Src/Movebase.c ****         // Plane_V[2] = (float)(point_pid.output * 1.0f*(data.z - POS_Z) /error);//z轴
 676              		.loc 1 121 22 view .LVU119
 677 012c FFF7FEFF 		bl	__aeabi_d2f
 678              	.LVL68:
 679 0130 0746     		mov	r7, r0
 121:move/Src/Movebase.c ****         // Plane_V[2] = (float)(point_pid.output * 1.0f*(data.z - POS_Z) /error);//z轴
 680              		.loc 1 121 20 view .LVU120
 681 0132 7060     		str	r0, [r6, #4]	@ float
 124:move/Src/Movebase.c ****         {
 682              		.loc 1 124 9 is_stmt 1 view .LVU121
 124:move/Src/Movebase.c ****         {
 683              		.loc 1 124 12 is_stmt 0 view .LVU122
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 17


 684 0134 DDE90201 		ldrd	r0, [sp, #8]
 685 0138 FFF7FEFF 		bl	__aeabi_d2f
 686              	.LVL69:
 687 013c FFF7FEFF 		bl	ABS
 688              	.LVL70:
 124:move/Src/Movebase.c ****         {
 689              		.loc 1 124 11 view .LVU123
 690 0140 1A49     		ldr	r1, .L37+36
 691 0142 FFF7FEFF 		bl	__aeabi_fcmplt
 692              	.LVL71:
 693 0146 48B1     		cbz	r0, .L30
 124:move/Src/Movebase.c ****         {
 694              		.loc 1 124 38 discriminator 1 view .LVU124
 695 0148 2046     		mov	r0, r4
 696 014a 2946     		mov	r1, r5
 697 014c FFF7FEFF 		bl	__aeabi_d2f
 698              	.LVL72:
 699 0150 FFF7FEFF 		bl	ABS
 700              	.LVL73:
 124:move/Src/Movebase.c ****         {
 701              		.loc 1 124 35 discriminator 1 view .LVU125
 702 0154 1549     		ldr	r1, .L37+36
 703 0156 FFF7FEFF 		bl	__aeabi_fcmplt
 704              	.LVL74:
 705 015a 90B9     		cbnz	r0, .L33
 706              	.L30:
 130:move/Src/Movebase.c ****             Plane_V[1] = 128+Plane_V[1];
 707              		.loc 1 130 13 is_stmt 1 view .LVU126
 130:move/Src/Movebase.c ****             Plane_V[1] = 128+Plane_V[1];
 708              		.loc 1 130 24 is_stmt 0 view .LVU127
 709 015c 124C     		ldr	r4, .L37+32
 710 015e 144B     		ldr	r3, .L37+40
 711 0160 2360     		str	r3, [r4]	@ float
 131:move/Src/Movebase.c ****             // Plane_V[2] = 128+Plane_V[2];
 712              		.loc 1 131 13 is_stmt 1 view .LVU128
 131:move/Src/Movebase.c ****             // Plane_V[2] = 128+Plane_V[2];
 713              		.loc 1 131 29 is_stmt 0 view .LVU129
 714 0162 4FF08641 		mov	r1, #1124073472
 715 0166 3846     		mov	r0, r7
 716 0168 FFF7FEFF 		bl	__aeabi_fadd
 717              	.LVL75:
 131:move/Src/Movebase.c ****             // Plane_V[2] = 128+Plane_V[2];
 718              		.loc 1 131 24 view .LVU130
 719 016c 6060     		str	r0, [r4, #4]	@ float
 133:move/Src/Movebase.c ****             command[2] = (uint8_t)(Plane_V[1]);
 720              		.loc 1 133 13 is_stmt 1 view .LVU131
 133:move/Src/Movebase.c ****             command[2] = (uint8_t)(Plane_V[1]);
 721              		.loc 1 133 24 is_stmt 0 view .LVU132
 722 016e 084C     		ldr	r4, .L37+8
 723 0170 6423     		movs	r3, #100
 724 0172 6370     		strb	r3, [r4, #1]
 134:move/Src/Movebase.c **** 
 725              		.loc 1 134 13 is_stmt 1 view .LVU133
 134:move/Src/Movebase.c **** 
 726              		.loc 1 134 26 is_stmt 0 view .LVU134
 727 0174 FFF7FEFF 		bl	__aeabi_f2uiz
 728              	.LVL76:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 18


 134:move/Src/Movebase.c **** 
 729              		.loc 1 134 24 view .LVU135
 730 0178 A070     		strb	r0, [r4, #2]
 136:move/Src/Movebase.c ****             
 731              		.loc 1 136 13 is_stmt 1 view .LVU136
 136:move/Src/Movebase.c ****             
 732              		.loc 1 136 24 is_stmt 0 view .LVU137
 733 017a 8023     		movs	r3, #128
 734 017c 2371     		strb	r3, [r4, #4]
 138:move/Src/Movebase.c ****         }
 735              		.loc 1 138 13 is_stmt 1 view .LVU138
 138:move/Src/Movebase.c ****         }
 736              		.loc 1 138 20 is_stmt 0 view .LVU139
 737 017e 0020     		movs	r0, #0
 738 0180 5BE7     		b	.L28
 739              	.L33:
 126:move/Src/Movebase.c ****         }
 740              		.loc 1 126 20 view .LVU140
 741 0182 0120     		movs	r0, #1
 742 0184 59E7     		b	.L28
 743              	.L38:
 744 0186 00BF     		.align	2
 745              	.L37:
 746 0188 00000000 		.word	.LANCHOR4
 747 018c 00000000 		.word	UWB_RxPort
 748 0190 00000000 		.word	.LANCHOR3
 749 0194 00000000 		.word	huart3
 750 0198 00000000 		.word	.LANCHOR5
 751 019c 00000000 		.word	.LANCHOR0
 752 01a0 0000FE42 		.word	1123942400
 753 01a4 00002041 		.word	1092616192
 754 01a8 00000000 		.word	.LANCHOR6
 755 01ac 00004842 		.word	1112014848
 756 01b0 0000C842 		.word	1120403456
 757              		.cfi_endproc
 758              	.LFE134:
 760              		.global	error
 761              		.global	q
 762              		.global	command
 763              		.global	Plane_V
 764              		.global	height_pid
 765              		.global	point_pid
 766              		.global	data
 767              		.section	.rodata
 768              		.align	2
 769              		.set	.LANCHOR2,. + 0
 770              	.LC0:
 771 0000 66808080 		.ascii	"f\200\200\200\200\000\000\231"
 771      80000099 
 772              	.LC1:
 773 0008 668080FF 		.ascii	"f\200\200\377\200\000\177\231"
 773      80007F99 
 774              	.LC2:
 775 0010 66808000 		.ascii	"f\200\200\000\200\000\200\231"
 775      80008099 
 776              		.section	.bss.Plane_V,"aw",%nobits
 777              		.align	2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 19


 778              		.set	.LANCHOR6,. + 0
 781              	Plane_V:
 782 0000 00000000 		.space	12
 782      00000000 
 782      00000000 
 783              		.section	.bss.data,"aw",%nobits
 784              		.align	3
 785              		.set	.LANCHOR4,. + 0
 788              	data:
 789 0000 00000000 		.space	24
 789      00000000 
 789      00000000 
 789      00000000 
 789      00000000 
 790              		.section	.bss.error,"aw",%nobits
 791              		.align	2
 792              		.set	.LANCHOR5,. + 0
 795              	error:
 796 0000 00000000 		.space	4
 797              		.section	.bss.height_pid,"aw",%nobits
 798              		.align	2
 799              		.set	.LANCHOR1,. + 0
 802              	height_pid:
 803 0000 00000000 		.space	56
 803      00000000 
 803      00000000 
 803      00000000 
 803      00000000 
 804              		.section	.bss.point_pid,"aw",%nobits
 805              		.align	2
 806              		.set	.LANCHOR0,. + 0
 809              	point_pid:
 810 0000 00000000 		.space	56
 810      00000000 
 810      00000000 
 810      00000000 
 810      00000000 
 811              		.section	.bss.q,"aw",%nobits
 812              		.align	2
 815              	q:
 816 0000 00000000 		.space	4
 817              		.section	.data.command,"aw"
 818              		.align	2
 819              		.set	.LANCHOR3,. + 0
 822              	command:
 823 0000 66808080 		.ascii	"f\200\200\200\200\000\000\231"
 823      80000099 
 824              		.text
 825              	.Letext0:
 826              		.file 2 "d:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 827              		.file 3 "d:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 828              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 829              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 830              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 831              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 832              		.file 8 "DWM1000/Inc/trilateration.h"
 833              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 20


 834              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 835              		.file 11 "application/data_pool.h"
 836              		.file 12 "algorithm/pid.h"
 837              		.file 13 "Core/Inc/usart.h"
 838              		.file 14 "d:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\math.h"
 839              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 Movebase.c
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:19     .text.ABS:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:25     .text.ABS:00000000 ABS
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:64     .text.Fly_init:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:70     .text.Fly_init:00000000 Fly_init
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:118    .text.Fly_init:0000003c $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:131    .text.StartFly:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:137    .text.StartFly:00000000 StartFly
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:223    .text.StartFly:0000007c $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:229    .text.calculate_xor_checksum:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:235    .text.calculate_xor_checksum:00000000 calculate_xor_checksum
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:287    .text.LockZ:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:293    .text.LockZ:00000000 LockZ
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:329    .text.LockZ:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:338    .text.Fly_KEEP:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:344    .text.Fly_KEEP:00000000 Fly_KEEP
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:445    .text.Fly_KEEP:0000005c $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:462    .text.PointTrace:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:468    .text.PointTrace:00000000 PointTrace
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:746    .text.PointTrace:00000188 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:795    .bss.error:00000000 error
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:815    .bss.q:00000000 q
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:822    .data.command:00000000 command
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:781    .bss.Plane_V:00000000 Plane_V
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:802    .bss.height_pid:00000000 height_pid
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:809    .bss.point_pid:00000000 point_pid
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:788    .bss.data:00000000 data
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:768    .rodata:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:777    .bss.Plane_V:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:784    .bss.data:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:791    .bss.error:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:798    .bss.height_pid:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:805    .bss.point_pid:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:812    .bss.q:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s:818    .data.command:00000000 $d

UNDEFINED SYMBOLS
__aeabi_fcmplt
PID_parameter_init
HAL_UART_Transmit
HAL_Delay
huart3
__aeabi_fsub
__aeabi_fadd
__aeabi_f2uiz
xQueueReceiveFromISR
PID_position_PID_calculation_by_error
HIGH_RxPort
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
__aeabi_fmul
__aeabi_ddiv
xQueueReceive
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2ak8w2.s 			page 22


sqrt
UWB_RxPort
